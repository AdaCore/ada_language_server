{
   "files.associations": {
      // Treat the settings template file as JSON so it benefits from linting
      // and formatting
      "*.json.tmpl": "jsonc"
   },
   "ada.projectFile": "gnat/lsp_server.gpr",
   "ada.scenarioVariables": {
      // Use static linking in local development to enable running the
      // ada_language_server executable after relocation into the VS Code
      // extension.
      "LIBRARY_TYPE": "static"
   },
   "ada.onTypeFormatting.indentOnly": true,
   "[ada]": {
      "editor.autoIndent": "none",
      "editor.formatOnType": false,
      "editor.tabSize": 3
   },
   "python.analysis.extraPaths": ["testsuite"],
   "flake8.args": ["--max-line-length", "88"],
   "[python]": {
      // Use the same line length as black and flake8
      "vim.textwidth": 88
   },
   "[yaml]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
   },
   "terminal.integrated.env.osx": {
      // Dependencies can be provided under the subprojects/ directory. They
      // would automatically be included in GPR_PROJECT_PATH by the following
      // setting.
      //
      // Alternatively, dependencies can be obtained from different locations
      // and GPR_PROJECT_PATH can be set prior to invoking VS Code, making them
      // also visible if not overwritten in the subprojects/ directory.
      "GPR_PROJECT_PATH": "${workspaceFolder}/subprojects/VSS/gnat:${workspaceFolder}/subprojects/gnatdoc/gnat:${workspaceFolder}/subprojects/libadalang-tools/src:${workspaceFolder}/subprojects/lal-refactor/gnat:${workspaceFolder}/subprojects/spawn/gnat:${workspaceFolder}/subprojects/stubs:${workspaceFolder}/subprojects/prefix/share/gpr:${env:GPR_PROJECT_PATH}",
      "LIBRARY_TYPE": "static"
   },
   "terminal.integrated.env.linux": {
      "GPR_PROJECT_PATH": "${workspaceFolder}/subprojects/VSS/gnat:${workspaceFolder}/subprojects/gnatdoc/gnat:${workspaceFolder}/subprojects/libadalang-tools/src:${workspaceFolder}/subprojects/lal-refactor/gnat:${workspaceFolder}/subprojects/spawn/gnat:${workspaceFolder}/subprojects/stubs:${workspaceFolder}/subprojects/prefix/share/gpr:${env:GPR_PROJECT_PATH}",
      "LIBRARY_TYPE": "static"
   },
   "terminal.integrated.env.windows": {
      "GPR_PROJECT_PATH": "${workspaceFolder}/subprojects/VSS/gnat:${workspaceFolder}/subprojects/gnatdoc/gnat:${workspaceFolder}/subprojects/libadalang-tools/src:${workspaceFolder}/subprojects/lal-refactor/gnat:${workspaceFolder}/subprojects/spawn/gnat:${workspaceFolder}/subprojects/stubs:${workspaceFolder}/subprojects/prefix/share/gpr:${env:GPR_PROJECT_PATH}",
      "LIBRARY_TYPE": "static"
   },
   // To develop the VS Code extension, it is recommended to open the workspace
   // defined at integration/vscode/ada. Nonetheless, this configuration allows
   // ESLint to operate on the TypeScript sources of the extension from this
   // workspace.
   "eslint.workingDirectories": [
      {
         "directory": "integration/vscode/ada"
      }
   ],
   // Please keep the following options in sync with integration/vscode/ada/.vscode/settings.json
   "[typescript]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.codeActionsOnSave": {
         "source.fixAll.eslint": true
      }
   },
   "[json]": {
      "editor.formatOnSave": true,
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.detectIndentation": false,
      "files.trimFinalNewlines": true,
      "files.trimTrailingWhitespace": true
   },
   "[jsonc]": {
      "editor.formatOnSave": true,
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.detectIndentation": false,
      "files.trimFinalNewlines": true,
      "files.trimTrailingWhitespace": true
   },
   // Allow GitLab-specific Yaml tags in .gitlab-ci.yml
   "yaml.customTags": ["!reference sequence"],
   "triggerTaskOnSave.tasks": {
      "ada: Compile current file": ["*.adb"],
      "ada: Check current file": ["*.ads"]
   },
   "triggerTaskOnSave.restart": true,
   "files.watcherExclude": {
      "**/.git/objects/**": true,
      "**/.git/subtree-cache/**": true,
      "**/node_modules/*/**": true,
      "**/.hg/store/**": true,
      ".obj/": true
   },
   "extension-test-runner.extractSettings": {
      "suite": ["describe", "suite"],
      "test": ["it", "test"],
      "extractWith": "syntax"
   },
   "extension-test-runner.debugOptions": {
      "outFiles": [
         "${workspaceFolder}/integration/vscode/ada/out/**/*.js",
         "!**/node_modules/**"
      ],
      "preLaunchTask": "npm: watch - integration/vscode/ada"
   }
}
