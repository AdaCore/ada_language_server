{
   // Use IntelliSense to learn about possible attributes.
   // Hover to view descriptions of existing attributes.
   "version": "0.2.0",
   "configurations": [
      {
         "name": "(vscode) Launch vscode with the Ada extension",
         "type": "extensionHost",
         "request": "launch",
         "runtimeExecutable": "${execPath}",
         "outFiles": [
            "${workspaceFolder}/integration/vscode/ada/out/**/*.js",
            "!**/node_modules/**"
         ],
         "args": [
            "--extensionDevelopmentPath=${workspaceFolder}/integration/vscode/ada"

            // It is useful to have workspace available for local debugging. The
            // following one is provided within the repository with test folders
            // included.
            // "${workspaceFolder}/integration/vscode/ada/debug.code-workspace"

            // An alternative is to use the ALS workspace itself as a runtime
            // workspace for debugging. However it is not possible to start the
            // debug instance on the same workspace as the development instance.
            // So you can checkout a second copy of the ALS repository under
            // ../als-rt and use it with the following line.
            // "${workspaceFolder}/../als-rt"
            // "${workspaceFolder}/integration/vscode/ada/test/TestWorkspace"
         ],
         "preLaunchTask": "npm: watch - integration/vscode/ada",
         "env": {
            // This is necessary to make the "child" vscode inherit the PATH
            // variable set in the workspace settings. Without it in some setups
            // (e.g. vscode remote) the child vscode does not get visibility
            // over the Ada toolchain available in the parent vscode
            // environment.
            "PATH": "${env:PATH}"
         }
      },
      {
         "name": "(npm) Launch all vscode tests with npm",
         "type": "node",
         "request": "launch",
         "cwd": "${workspaceFolder}/integration/vscode/ada/",
         "runtimeExecutable": "npm",
         "runtimeArgs": ["run-script", "test"]
      }
   ],
   "inputs": [
      {
         "id": "testPattern",
         "description": "A regexp of tests to run. Keep empty for not filtering any",
         "type": "promptString"
      },
      {
         "id": "updateTestRefs",
         "description": "Update test references? Keep empty for no update",
         "type": "promptString"
      },
      {
         "id": "pid",
         "description": "Specify PID of process to debug",
         "type": "promptString"
      }
   ]
}
