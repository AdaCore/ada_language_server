{
   // Use IntelliSense to learn about possible attributes.
   // Hover to view descriptions of existing attributes.
   "version": "0.2.0",
   "configurations": [
      {
         "name": "Launch Extension",
         "type": "extensionHost",
         "request": "launch",
         "runtimeExecutable": "${execPath}",
         "outFiles": [
            "${workspaceFolder}/integration/vscode/ada/out/**/*.js",
            "!**/node_modules/**"
         ],
         "args": [
            "--extensionDevelopmentPath=${workspaceFolder}/integration/vscode/ada",

            // It is useful to have workspace available for local debugging. The
            // following one is provided within the repository with test folders
            // included.
            // "${workspaceFolder}/integration/vscode/ada/debug.code-workspace"

            // An alternative is to use the ALS workspace itself as a runtime
            // workspace for debugging. However it is not possible to start the
            // debug instance on the same workspace as the development instance.
            // So you can checkout a second copy of the ALS repository under
            // ../als-rt and use it with the following line.
            // "${workspaceFolder}/../als-rt"
            "${workspaceFolder}/integration/vscode/ada/test/TestWorkspace"
         ],
         "preLaunchTask": "npm: compile",
         "env": {
            // This is necessary to make the "child" vscode inherit the PATH
            // variable set in the workspace settings. Without it in some setups
            // (e.g. vscode remote) the child vscode does not get visibility
            // over the Ada toolchain available in the parent vscode
            // environment.
            "PATH": "${env:PATH}"
         }
      },
      {
         "name": "Extension Tests",
         "type": "extensionHost",
         "request": "launch",
         "runtimeExecutable": "${execPath}",
         "outFiles": [
            "${workspaceFolder}/integration/vscode/ada/out/**/*.js",
            "!**/node_modules/**"
         ],
         "args": [
            "--extensionDevelopmentPath=${workspaceFolder}/integration/vscode/ada",
            "--extensionTestsPath=${workspaceFolder}/integration/vscode/ada/out/test/suite/index",
            "${workspaceFolder}/integration/vscode/ada/test/TestWorkspace"
         ],
         // Below we make the executables of node modules visible to the tests.
         // In particular, vscode-tmgrammar-snap is used for syntax highlighting
         // tests.
         "env": {
            // This is necessary to make the "child" vscode inherit the PATH
            // variable set in the workspace settings. Without it in some setups
            // (e.g. vscode remote) the child vscode does not get visibility
            // over the Ada toolchain available in the parent vscode
            // environment.
            "PATH": "${env:PATH}",
            // This is custom env var that we use in
            // integration/vscode/ada/test/suite/index.ts to prevent timeouts in
            // tests when debugging
            "MOCHA_TIMEOUT": "0"
         },
         "preLaunchTask": "npm: pretest",
         // Switch to Debug Console to see test results
         "internalConsoleOptions": "openOnSessionStart"
      },
      {
         "name": "Extension Tests (Update Test Refs)",
         "type": "extensionHost",
         "request": "launch",
         "runtimeExecutable": "${execPath}",
         "outFiles": [
            "${workspaceFolder}/integration/vscode/ada/out/**/*.js",
            "!**/node_modules/**"
         ],
         "args": [
            "--extensionDevelopmentPath=${workspaceFolder}/integration/vscode/ada",
            "--extensionTestsPath=${workspaceFolder}/integration/vscode/ada/out/test/suite/index",
            "${workspaceFolder}/integration/vscode/ada/test/TestWorkspace"
         ],
         // Below we make the executables of node modules visible to the tests.
         // In particular, vscode-tmgrammar-snap is used for syntax highlighting
         // tests.
         "env": {
            // This is necessary to make the "child" vscode inherit the PATH
            // variable set in the workspace settings. Without it in some setups
            // (e.g. vscode remote) the child vscode does not get visibility
            // over the Ada toolchain available in the parent vscode
            // environment.
            "PATH": "${env:PATH}",
            // This is custom env var that we use in
            // integration/vscode/ada/test/suite/index.ts to prevent timeouts in
            // tests when debugging
            "MOCHA_TIMEOUT": "0",
            // Setting this environment variable causes the tests to overwrite
            // previous test references when they are stored in files. See
            // assertEqualToFileContent in
            // integration/vscode/ada/test/suite/highlighting.test.ts
            "MOCHA_ALS_UPDATE": "1"
         },
         "preLaunchTask": "npm: pretest",
         // Switch to Debug Console to see test results
         "internalConsoleOptions": "openOnSessionStart"
      },
      {
         "type": "gdb",
         "request": "launch",
         "name": "Launch Program",
         "target": ".obj/server/ada_language_server",
         "cwd": "${workspaceRoot}",
         "valuesFormatting": "parseText"
      },
      {
         "name": "Extension Tests (Test Name Regexp)",
         "type": "extensionHost",
         "request": "launch",
         "runtimeExecutable": "${execPath}",
         "outFiles": [
            "${workspaceFolder}/integration/vscode/ada/out/**/*.js",
            "!**/node_modules/**"
         ],
         "args": [
            "--extensionDevelopmentPath=${workspaceFolder}/integration/vscode/ada",
            "--extensionTestsPath=${workspaceFolder}/integration/vscode/ada/out/test/suite/index",
            "${workspaceFolder}/integration/vscode/ada/test/TestWorkspace"
         ],
         // Below we make the executables of node modules visible to the tests.
         // In particular, vscode-tmgrammar-snap is used for syntax highlighting
         // tests.
         "env": {
            "MOCHA_GREP": "${input:testPattern}",
            // This is necessary to make the "child" vscode inherit the PATH
            // variable set in the workspace settings. Without it in some setups
            // (e.g. vscode remote) the child vscode does not get visibility
            // over the Ada toolchain available in the parent vscode
            // environment.
            "PATH": "${env:PATH}",
            // This is custom env var that we use in
            // integration/vscode/ada/test/suite/index.ts to prevent timeouts in
            // tests when debugging
            "MOCHA_TIMEOUT": "0",
            "MOCHA_ALS_UPDATE": "${input:updateTestRefs}"
         },
         "preLaunchTask": "npm: pretest",
         // Switch to Debug Console to see test results
         "internalConsoleOptions": "openOnSessionStart"
      }
   ],
   "inputs": [
      {
         "id": "testPattern",
         "description": "A regexp of tests to run",
         "type": "promptString"
      },
      {
         "id": "updateTestRefs",
         "description": "Update test references? Keep empty for no update",
         "type": "promptString",
         "default": ""
      }
   ]
}
