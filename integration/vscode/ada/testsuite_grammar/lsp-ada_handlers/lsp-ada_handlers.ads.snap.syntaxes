>------------------------------------------------------------------------------
#^^ source.ada comment.line.ada
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>--                         Language Server Protocol                         --
#^^ source.ada comment.line.ada
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>--                                                                          --
#^^ source.ada comment.line.ada
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>--                     Copyright (C) 2018-2023, AdaCore                     --
#^^ source.ada comment.line.ada
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>--                                                                          --
#^^ source.ada comment.line.ada
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>-- This is free software;  you can redistribute it  and/or modify it  under --
#^^ source.ada comment.line.ada
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>-- terms of the  GNU General Public License as published  by the Free Soft- --
#^^ source.ada comment.line.ada
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>-- ware  Foundation;  either version 3,  or (at your option) any later ver- --
#^^ source.ada comment.line.ada
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>-- sion.  This software is distributed in the hope  that it will be useful, --
#^^ source.ada comment.line.ada
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>-- but WITHOUT ANY WARRANTY;  without even the implied warranty of MERCHAN- --
#^^ source.ada comment.line.ada
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>-- TABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public --
#^^ source.ada comment.line.ada
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>-- License for  more details.  You should have  received  a copy of the GNU --
#^^ source.ada comment.line.ada
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>-- General  Public  License  distributed  with  this  software;   see  file --
#^^ source.ada comment.line.ada
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>-- COPYING3.  If not, go to http://www.gnu.org/licenses for a complete copy --
#^^ source.ada comment.line.ada
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>-- of the license.                                                          --
#^^ source.ada comment.line.ada
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>------------------------------------------------------------------------------
#^^ source.ada comment.line.ada
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>--
#^^ source.ada comment.line.ada
>--  This package provides requests and notifications handler for Ada
#^^ source.ada comment.line.ada
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>--  language.
#^^ source.ada comment.line.ada
#  ^^^^^^^^^^^ source.ada comment.line.ada
>
>with Ada.Containers.Hashed_Maps;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^ source.ada entity.name.label.ada
#        ^ source.ada entity.name.operator.ada
#         ^^^^^^^^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^^^^ source.ada entity.name.label.ada
#                               ^^ source.ada
>with Ada.Containers.Hashed_Sets;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^ source.ada entity.name.label.ada
#        ^ source.ada entity.name.operator.ada
#         ^^^^^^^^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^^^^ source.ada entity.name.label.ada
#                               ^^ source.ada
>with Ada.Strings.Unbounded;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^ source.ada entity.name.label.ada
#        ^ source.ada entity.name.operator.ada
#         ^^^^^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^^ source.ada entity.name.label.ada
#                          ^^ source.ada
>with VSS.String_Vectors;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^ source.ada entity.name.label.ada
#        ^ source.ada entity.name.operator.ada
#         ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                       ^^ source.ada
>
>with GNATCOLL.JSON;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^^^^^^ source.ada entity.name.label.ada
#             ^ source.ada entity.name.operator.ada
#              ^^^^ source.ada entity.name.label.ada
#                  ^^ source.ada
>with GNATCOLL.VFS;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^^^^^^ source.ada entity.name.label.ada
#             ^ source.ada entity.name.operator.ada
#              ^^^ source.ada entity.name.label.ada
#                 ^^ source.ada
>with GNATCOLL.Traces;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^^^^^^ source.ada entity.name.label.ada
#             ^ source.ada entity.name.operator.ada
#              ^^^^^^ source.ada entity.name.label.ada
#                    ^^ source.ada
>
>with VSS.Strings;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^ source.ada entity.name.label.ada
#        ^ source.ada entity.name.operator.ada
#         ^^^^^^^ source.ada entity.name.label.ada
#                ^^ source.ada
>
>private with GNATdoc.Comments.Options;
#^^^^^^^ source.ada keyword.other.ada
#       ^ source.ada
#        ^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^^^^^ source.ada entity.name.label.ada
#                    ^ source.ada entity.name.operator.ada
#                     ^^^^^^^^ source.ada entity.name.label.ada
#                             ^ source.ada entity.name.operator.ada
#                              ^^^^^^^ source.ada entity.name.label.ada
#                                     ^^ source.ada
>
>with GPR2;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^^ source.ada entity.name.label.ada
#         ^^ source.ada
>with GPR2.Context;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^^ source.ada entity.name.label.ada
#         ^ source.ada entity.name.operator.ada
#          ^^^^^^^ source.ada entity.name.label.ada
#                 ^^ source.ada
>with GPR2.File_Readers;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^^ source.ada entity.name.label.ada
#         ^ source.ada entity.name.operator.ada
#          ^^^^^^^^^^^^ source.ada entity.name.label.ada
#                      ^^ source.ada
>with GPR2.Path_Name;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^^ source.ada entity.name.label.ada
#         ^ source.ada entity.name.operator.ada
#          ^^^^^^^^^ source.ada entity.name.label.ada
#                   ^^ source.ada
>with GPR2.Path_Name.Set;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^^ source.ada entity.name.label.ada
#         ^ source.ada entity.name.operator.ada
#          ^^^^^^^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^ source.ada entity.name.label.ada
#                       ^^ source.ada
>with GPR2.Project.Configuration;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^^ source.ada entity.name.label.ada
#         ^ source.ada entity.name.operator.ada
#          ^^^^^^^ source.ada entity.name.label.ada
#                 ^ source.ada entity.name.operator.ada
#                  ^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                               ^^ source.ada
>with GPR2.Project.Tree;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^^ source.ada entity.name.label.ada
#         ^ source.ada entity.name.operator.ada
#          ^^^^^^^ source.ada entity.name.label.ada
#                 ^ source.ada entity.name.operator.ada
#                  ^^^^ source.ada entity.name.label.ada
#                      ^^ source.ada
>
>with LSP.Ada_Contexts;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^ source.ada entity.name.label.ada
#        ^ source.ada entity.name.operator.ada
#         ^^^^^^^^^^^^ source.ada entity.name.label.ada
#                     ^^ source.ada
>with LSP.Ada_Context_Sets;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^ source.ada entity.name.label.ada
#        ^ source.ada entity.name.operator.ada
#         ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                         ^^ source.ada
>with LSP.Ada_Documents;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^ source.ada entity.name.label.ada
#        ^ source.ada entity.name.operator.ada
#         ^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                      ^^ source.ada
>with LSP.Ada_File_Sets;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^ source.ada entity.name.label.ada
#        ^ source.ada entity.name.operator.ada
#         ^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                      ^^ source.ada
>with LSP.Ada_Highlighters;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^ source.ada entity.name.label.ada
#        ^ source.ada entity.name.operator.ada
#         ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                         ^^ source.ada
>
>with LSP.File_Monitors;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^ source.ada entity.name.label.ada
#        ^ source.ada entity.name.operator.ada
#         ^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                      ^^ source.ada
>with LSP.Messages.Server_Requests;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^ source.ada entity.name.label.ada
#        ^ source.ada entity.name.operator.ada
#         ^^^^^^^^ source.ada entity.name.label.ada
#                 ^ source.ada entity.name.operator.ada
#                  ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                 ^^ source.ada
>with LSP.Messages.Server_Responses;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^ source.ada entity.name.label.ada
#        ^ source.ada entity.name.operator.ada
#         ^^^^^^^^ source.ada entity.name.label.ada
#                 ^ source.ada entity.name.operator.ada
#                  ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                  ^^ source.ada
>with LSP.Search;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^ source.ada entity.name.label.ada
#        ^ source.ada entity.name.operator.ada
#         ^^^^^^ source.ada entity.name.label.ada
#               ^^ source.ada
>with LSP.Server_Backends;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^ source.ada entity.name.label.ada
#        ^ source.ada entity.name.operator.ada
#         ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                        ^^ source.ada
>with LSP.Server_Request_Handlers;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^ source.ada entity.name.label.ada
#        ^ source.ada entity.name.operator.ada
#         ^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                ^^ source.ada
>with LSP.Server_Notification_Receivers;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^ source.ada entity.name.label.ada
#        ^ source.ada entity.name.operator.ada
#         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>with LSP.Servers;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^ source.ada entity.name.label.ada
#        ^ source.ada entity.name.operator.ada
#         ^^^^^^^ source.ada entity.name.label.ada
#                ^^ source.ada
>with LSP.Types;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^ source.ada entity.name.label.ada
#        ^ source.ada entity.name.operator.ada
#         ^^^^^ source.ada entity.name.label.ada
#              ^^ source.ada
>with LSP.Messages;
#^^^^ source.ada keyword.other.ada
#    ^ source.ada
#     ^^^ source.ada entity.name.label.ada
#        ^ source.ada entity.name.operator.ada
#         ^^^^^^^^ source.ada entity.name.label.ada
#                 ^^ source.ada
>
>package LSP.Ada_Handlers is
#^^^^^^^ source.ada keyword.other.ada
#       ^ source.ada
#        ^^^ source.ada entity.name.label.ada
#           ^ source.ada entity.name.operator.ada
#            ^^^^^^^^^^^^ source.ada entity.name.label.ada
#                        ^ source.ada
#                         ^^ source.ada keyword.other.ada
>
>   type Message_Handler
#^^^ source.ada
#   ^^^^ source.ada keyword.other.ada
#       ^ source.ada
#        ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Server  : access LSP.Servers.Server;
#^^^^^^ source.ada
#      ^^^^^^ source.ada entity.name.label.ada
#            ^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^ source.ada entity.name.label.ada
#                          ^ source.ada entity.name.operator.ada
#                           ^^^^^^^ source.ada entity.name.label.ada
#                                  ^ source.ada entity.name.operator.ada
#                                   ^^^^^^ source.ada entity.name.label.ada
#                                         ^^ source.ada
>      Trace   : GNATCOLL.Traces.Trace_Handle) is
#^^^^^^ source.ada
#      ^^^^^ source.ada entity.name.label.ada
#           ^^^^^ source.ada
#                ^^^^^^^^ source.ada entity.name.label.ada
#                        ^ source.ada entity.name.operator.ada
#                         ^^^^^^ source.ada entity.name.label.ada
#                               ^ source.ada entity.name.operator.ada
#                                ^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^^ source.ada
#                                              ^^ source.ada keyword.other.ada
>   limited new LSP.Server_Request_Handlers.Server_Request_Handler
#^^^ source.ada
#   ^^^^^^^ source.ada keyword.other.ada
#          ^ source.ada
#           ^^^ source.ada keyword.other.ada
#              ^ source.ada
#               ^^^ source.ada entity.name.label.ada
#                  ^ source.ada entity.name.operator.ada
#                   ^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     and LSP.Server_Notification_Receivers.Server_Notification_Receiver
#^^^^^ source.ada
#     ^^^ source.ada entity.name.operator.ada
#        ^ source.ada
#         ^^^ source.ada entity.name.label.ada
#            ^ source.ada entity.name.operator.ada
#             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     and LSP.Server_Backends.Server_Backend
#^^^^^ source.ada
#     ^^^ source.ada entity.name.operator.ada
#        ^ source.ada
#         ^^^ source.ada entity.name.label.ada
#            ^ source.ada entity.name.operator.ada
#             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     and LSP.Ada_Documents.Document_Provider
#^^^^^ source.ada
#     ^^^ source.ada entity.name.operator.ada
#        ^ source.ada
#         ^^^ source.ada entity.name.label.ada
#            ^ source.ada entity.name.operator.ada
#             ^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                          ^ source.ada entity.name.operator.ada
#                           ^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>   with private;
#^^^ source.ada
#   ^^^^ source.ada keyword.other.ada
#       ^ source.ada
#        ^^^^^^^ source.ada keyword.other.ada
#               ^^ source.ada
>   --  A handler of LSP notifications and requests from Ada language
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>   overriding procedure Handle_Error (Self : access Message_Handler);
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^^ source.ada keyword.other.ada
#                       ^ source.ada
#                        ^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                    ^^ source.ada
#                                      ^^^^ source.ada entity.name.label.ada
#                                          ^^^ source.ada
#                                             ^^^^^^ source.ada storage.modifier.ada
#                                                   ^ source.ada
#                                                    ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                   ^^^ source.ada
>   --  This procedure will be called when an unexpected error is raised in the
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --  request processing loop.
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>   procedure Change_Configuration
#^^^ source.ada
#   ^^^^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Options : GNATCOLL.JSON.JSON_Value'Class);
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^^^^^^ source.ada entity.name.label.ada
#                        ^ source.ada entity.name.operator.ada
#                         ^^^^ source.ada entity.name.label.ada
#                             ^ source.ada entity.name.operator.ada
#                              ^^^^^^^^^^ source.ada entity.name.label.ada
#                                        ^ source.ada
#                                         ^^^^^ source.ada entity.name.label.ada
#                                              ^^^ source.ada
>   --  Change server configuration with settings from Ada JSON object.
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>   procedure Change_Configuration_Before_Init
#^^^ source.ada
#   ^^^^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Options : GNATCOLL.JSON.JSON_Value'Class;
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^^^^^^ source.ada entity.name.label.ada
#                        ^ source.ada entity.name.operator.ada
#                         ^^^^ source.ada entity.name.label.ada
#                             ^ source.ada entity.name.operator.ada
#                              ^^^^^^^^^^ source.ada entity.name.label.ada
#                                        ^ source.ada
#                                         ^^^^^ source.ada entity.name.label.ada
#                                              ^^ source.ada
>      Root    : GNATCOLL.VFS.Virtual_File);
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^^^ source.ada entity.name.label.ada
#                        ^ source.ada entity.name.operator.ada
#                         ^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                         ^^^ source.ada
>   --  Change server configuration with settings from Ada JSON object, taking
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --  Root to resolve all relative references. This is expected to work
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --  before the server get initialize request and find root folder.
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>   procedure Stop_File_Monitoring (Self : access Message_Handler);
#^^^ source.ada
#   ^^^^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                 ^^ source.ada
#                                   ^^^^ source.ada entity.name.label.ada
#                                       ^^^ source.ada
#                                          ^^^^^^ source.ada storage.modifier.ada
#                                                ^ source.ada
#                                                 ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                ^^^ source.ada
>
>   procedure Cleanup (Self : access Message_Handler);
#^^^ source.ada
#   ^^^^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^^^^^ source.ada entity.name.label.ada
#                    ^^ source.ada
#                      ^^^^ source.ada entity.name.label.ada
#                          ^^^ source.ada
#                             ^^^^^^ source.ada storage.modifier.ada
#                                   ^ source.ada
#                                    ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                   ^^^ source.ada
>   --  Free memory referenced by Self
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>   procedure Clean_Logs
#^^^ source.ada
#   ^^^^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^ source.ada
#             ^^^^^^ source.ada storage.modifier.ada
#                   ^ source.ada
#                    ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                   ^^ source.ada
>      Dir  : GNATCOLL.VFS.Virtual_File);
#^^^^^^ source.ada
#      ^^^ source.ada entity.name.label.ada
#         ^^^^ source.ada
#             ^^^^^^^^ source.ada entity.name.label.ada
#                     ^ source.ada entity.name.operator.ada
#                      ^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^^ source.ada
>   --  Remove the oldest logs in Dir
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>   subtype Context_Access is LSP.Ada_Context_Sets.Context_Access;
#^^^ source.ada
#   ^^^^^^^ source.ada keyword.other.ada
#          ^ source.ada
#           ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada
#                          ^^ source.ada keyword.other.ada
#                            ^ source.ada
#                             ^^^ source.ada entity.name.label.ada
#                                ^ source.ada entity.name.operator.ada
#                                 ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                 ^ source.ada entity.name.operator.ada
#                                                  ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                ^^ source.ada
>
>   function From_File
#^^^ source.ada
#   ^^^^^^^^ source.ada keyword.other.ada
#           ^ source.ada
#            ^^^^^^^^^ source.ada entity.name.label.ada
>     (Self : Message_Handler'Class;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^ source.ada
#             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada
#                             ^^^^^ source.ada entity.name.label.ada
#                                  ^^ source.ada
>      File : GNATCOLL.VFS.Virtual_File) return LSP.Messages.DocumentUri;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^ source.ada
#             ^^^^^^^^ source.ada entity.name.label.ada
#                     ^ source.ada entity.name.operator.ada
#                      ^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
#                                        ^^^^^^ source.ada keyword.other.ada
#                                              ^ source.ada
#                                               ^^^ source.ada entity.name.label.ada
#                                                  ^ source.ada entity.name.operator.ada
#                                                   ^^^^^^^^ source.ada entity.name.label.ada
#                                                           ^ source.ada entity.name.operator.ada
#                                                            ^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                       ^^ source.ada
>   --  Turn Virtual_File to URI
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>   function To_File
#^^^ source.ada
#   ^^^^^^^^ source.ada keyword.other.ada
#           ^ source.ada
#            ^^^^^^^ source.ada entity.name.label.ada
>     (Self : Message_Handler'Class;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^ source.ada
#             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada
#                             ^^^^^ source.ada entity.name.label.ada
#                                  ^^ source.ada
>      URI  : LSP.Types.LSP_URI) return GNATCOLL.VFS.Virtual_File;
#^^^^^^ source.ada
#      ^^^ source.ada entity.name.label.ada
#         ^^^^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^ source.ada entity.name.label.ada
#                      ^ source.ada entity.name.operator.ada
#                       ^^^^^^^ source.ada entity.name.label.ada
#                              ^^ source.ada
#                                ^^^^^^ source.ada keyword.other.ada
#                                      ^ source.ada
#                                       ^^^^^^^^ source.ada entity.name.label.ada
#                                               ^ source.ada entity.name.operator.ada
#                                                ^^^ source.ada entity.name.label.ada
#                                                   ^ source.ada entity.name.operator.ada
#                                                    ^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                ^^ source.ada
>   --  Turn URI into Virtual_File
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>private
#^^^^^^^ source.ada keyword.other.ada
>
>   --  Options for refactoring/renaming
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   type Renaming_Options is record
#^^^ source.ada
#   ^^^^ source.ada keyword.other.ada
#       ^ source.ada
#        ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                        ^ source.ada
#                         ^^ source.ada keyword.other.ada
#                           ^ source.ada
#                            ^^^^^^ source.ada keyword.other.ada
>      In_Comments : Boolean := False;
#^^^^^^ source.ada
#      ^^^^^^^^^^^ source.ada entity.name.label.ada
#                 ^^^ source.ada
#                    ^^^^^^^ source.ada entity.name.label.ada
#                           ^ source.ada
#                            ^^ source.ada entity.name.operator.assignment.ada
#                              ^ source.ada
#                               ^^^^^ source.ada variable.other.constant.ada
#                                    ^^ source.ada
>   end record;
#^^^ source.ada
#   ^^^ source.ada keyword.other.ada
#      ^ source.ada
#       ^^^^^^ source.ada keyword.other.ada
#             ^^ source.ada
>
>   --  Options for refactoring
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   type Refactoring_Options is record
#^^^ source.ada
#   ^^^^ source.ada keyword.other.ada
#       ^ source.ada
#        ^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                           ^ source.ada
#                            ^^ source.ada keyword.other.ada
#                              ^ source.ada
#                               ^^^^^^ source.ada keyword.other.ada
>      Renaming : Renaming_Options;
#^^^^^^ source.ada
#      ^^^^^^^^ source.ada entity.name.label.ada
#              ^^^ source.ada
#                 ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                 ^^ source.ada
>   end record;
#^^^ source.ada
#   ^^^ source.ada keyword.other.ada
#      ^ source.ada
#       ^^^^^^ source.ada keyword.other.ada
#             ^^ source.ada
>
>   -- Options for folding --
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   type Folding_Options is record
#^^^ source.ada
#   ^^^^ source.ada keyword.other.ada
#       ^ source.ada
#        ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                       ^ source.ada
#                        ^^ source.ada keyword.other.ada
#                          ^ source.ada
#                           ^^^^^^ source.ada keyword.other.ada
>      Comments : Boolean := True;
#^^^^^^ source.ada
#      ^^^^^^^^ source.ada entity.name.label.ada
#              ^^^ source.ada
#                 ^^^^^^^ source.ada entity.name.label.ada
#                        ^ source.ada
#                         ^^ source.ada entity.name.operator.assignment.ada
#                           ^ source.ada
#                            ^^^^ source.ada variable.other.constant.ada
#                                ^^ source.ada
>   end record;
#^^^ source.ada
#   ^^^ source.ada keyword.other.ada
#      ^ source.ada
#       ^^^^^^ source.ada keyword.other.ada
#             ^^ source.ada
>
>   --  Options for documentation
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   type Documentation_Options is record
#^^^ source.ada
#   ^^^^ source.ada keyword.other.ada
#       ^ source.ada
#        ^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                             ^ source.ada
#                              ^^ source.ada keyword.other.ada
#                                ^ source.ada
#                                 ^^^^^^ source.ada keyword.other.ada
>      Style : GNATdoc.Comments.Options.Documentation_Style :=
#^^^^^^ source.ada
#      ^^^^^ source.ada entity.name.label.ada
#           ^^^ source.ada
#              ^^^^^^^ source.ada entity.name.label.ada
#                     ^ source.ada entity.name.operator.ada
#                      ^^^^^^^^ source.ada entity.name.label.ada
#                              ^ source.ada entity.name.operator.ada
#                               ^^^^^^^ source.ada entity.name.label.ada
#                                      ^ source.ada entity.name.operator.ada
#                                       ^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                          ^ source.ada
#                                                           ^^ source.ada entity.name.operator.assignment.ada
>        GNATdoc.Comments.Options.GNAT;
#^^^^^^^^ source.ada
#        ^^^^^^^ source.ada entity.name.label.ada
#               ^ source.ada entity.name.operator.ada
#                ^^^^^^^^ source.ada entity.name.label.ada
#                        ^ source.ada entity.name.operator.ada
#                         ^^^^^^^ source.ada entity.name.label.ada
#                                ^ source.ada entity.name.operator.ada
#                                 ^^^^ source.ada entity.name.label.ada
#                                     ^^ source.ada
>   end record;
#^^^ source.ada
#   ^^^ source.ada keyword.other.ada
#      ^ source.ada
#       ^^^^^^ source.ada keyword.other.ada
#             ^^ source.ada
>
>   -- Options holder --
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   type Options_Holder is record
#^^^ source.ada
#   ^^^^ source.ada keyword.other.ada
#       ^ source.ada
#        ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                      ^ source.ada
#                       ^^ source.ada keyword.other.ada
#                         ^ source.ada
#                          ^^^^^^ source.ada keyword.other.ada
>      Refactoring   : Refactoring_Options;
#^^^^^^ source.ada
#      ^^^^^^^^^^^ source.ada entity.name.label.ada
#                 ^^^^^ source.ada
#                      ^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                         ^^ source.ada
>      --  Configuration options for refactoring
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Folding       : Folding_Options;
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^^^^^^^ source.ada
#                      ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                     ^^ source.ada
>      --  folding options
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Documentation : Documentation_Options;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                   ^^^ source.ada
#                      ^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                           ^^ source.ada
>      --  Configuration options for documentation
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   end record;
#^^^ source.ada
#   ^^^ source.ada keyword.other.ada
#      ^ source.ada
#       ^^^^^^ source.ada keyword.other.ada
#             ^^ source.ada
>
>   type Internal_Document_Access is access all LSP.Ada_Documents.Document;
#^^^ source.ada
#   ^^^^ source.ada keyword.other.ada
#       ^ source.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                ^ source.ada
#                                 ^^ source.ada keyword.other.ada
#                                   ^ source.ada
#                                    ^^^^^^ source.ada storage.modifier.ada
#                                          ^ source.ada
#                                           ^^^ source.ada keyword.other.ada
#                                              ^ source.ada
#                                               ^^^ source.ada entity.name.label.ada
#                                                  ^ source.ada entity.name.operator.ada
#                                                   ^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                ^ source.ada entity.name.operator.ada
#                                                                 ^^^^^^^^ source.ada entity.name.label.ada
#                                                                         ^^ source.ada
>
>   procedure Free (Self : in out Internal_Document_Access);
#^^^ source.ada
#   ^^^^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^^ source.ada entity.name.label.ada
#                 ^^ source.ada
#                   ^^^^ source.ada entity.name.label.ada
#                       ^^^ source.ada
#                          ^^ source.ada storage.modifier.ada
#                            ^ source.ada
#                             ^^^ source.ada storage.modifier.ada
#                                ^ source.ada
#                                 ^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                         ^^^ source.ada
>   --  Free all the data for the given document.
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>   --  Container for documents indexed by URI
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   package Document_Maps is new Ada.Containers.Hashed_Maps
#^^^ source.ada
#   ^^^^^^^ source.ada keyword.other.ada
#          ^ source.ada
#           ^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                        ^ source.ada
#                         ^^ source.ada keyword.other.ada
#                           ^ source.ada
#                            ^^^ source.ada keyword.other.ada
#                               ^ source.ada
#                                ^^^ source.ada entity.name.label.ada
#                                   ^ source.ada entity.name.operator.ada
#                                    ^^^^^^^^^^ source.ada entity.name.label.ada
#                                              ^ source.ada entity.name.operator.ada
#                                               ^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Key_Type        => GNATCOLL.VFS.Virtual_File,
#^^^^^^ source.ada
#      ^^^^^^^^ source.ada entity.name.label.ada
#              ^^^^^^^^ source.ada
#                      ^^ source.ada entity.name.operator.ada
#                        ^ source.ada
#                         ^^^^^^^^ source.ada entity.name.label.ada
#                                 ^ source.ada entity.name.operator.ada
#                                  ^^^ source.ada entity.name.label.ada
#                                     ^ source.ada entity.name.operator.ada
#                                      ^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                  ^ source.ada entity.name.operator.ada
>      Element_Type    => Internal_Document_Access,
#^^^^^^ source.ada
#      ^^^^^^^^^^^^ source.ada entity.name.label.ada
#                  ^^^^ source.ada
#                      ^^ source.ada entity.name.operator.ada
#                        ^ source.ada
#                         ^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                 ^ source.ada entity.name.operator.ada
>      Hash            => GNATCOLL.VFS.Full_Name_Hash,
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^^^^^^^ source.ada
#                      ^^ source.ada entity.name.operator.ada
#                        ^ source.ada
#                         ^^^^^^^^ source.ada entity.name.label.ada
#                                 ^ source.ada entity.name.operator.ada
#                                  ^^^ source.ada entity.name.label.ada
#                                     ^ source.ada entity.name.operator.ada
#                                      ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                    ^ source.ada entity.name.operator.ada
>      Equivalent_Keys => GNATCOLL.VFS."=");
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                     ^ source.ada
#                      ^^ source.ada entity.name.operator.ada
#                        ^ source.ada
#                         ^^^^^^^^ source.ada entity.name.label.ada
#                                 ^ source.ada entity.name.operator.ada
#                                  ^^^ source.ada entity.name.label.ada
#                                     ^ source.ada entity.name.operator.ada
#                                      ^ source.ada string.quoted.double.ada
#                                       ^ source.ada string.quoted.double.ada
#                                        ^ source.ada string.quoted.double.ada
#                                         ^^^ source.ada
>
>   --  Container for the predefined source files
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   package File_Sets is new Ada.Containers.Hashed_Sets
#^^^ source.ada
#   ^^^^^^^ source.ada keyword.other.ada
#          ^ source.ada
#           ^^^^^^^^^ source.ada entity.name.label.ada
#                    ^ source.ada
#                     ^^ source.ada keyword.other.ada
#                       ^ source.ada
#                        ^^^ source.ada keyword.other.ada
#                           ^ source.ada
#                            ^^^ source.ada entity.name.label.ada
#                               ^ source.ada entity.name.operator.ada
#                                ^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Element_Type        => GNATCOLL.VFS.Virtual_File,
#^^^^^^ source.ada
#      ^^^^^^^^^^^^ source.ada entity.name.label.ada
#                  ^^^^^^^^ source.ada
#                          ^^ source.ada entity.name.operator.ada
#                            ^ source.ada
#                             ^^^^^^^^ source.ada entity.name.label.ada
#                                     ^ source.ada entity.name.operator.ada
#                                      ^^^ source.ada entity.name.label.ada
#                                         ^ source.ada entity.name.operator.ada
#                                          ^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                      ^ source.ada entity.name.operator.ada
>      Hash                => GNATCOLL.VFS.Full_Name_Hash,
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^^^^^^^^^^^ source.ada
#                          ^^ source.ada entity.name.operator.ada
#                            ^ source.ada
#                             ^^^^^^^^ source.ada entity.name.label.ada
#                                     ^ source.ada entity.name.operator.ada
#                                      ^^^ source.ada entity.name.label.ada
#                                         ^ source.ada entity.name.operator.ada
#                                          ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                        ^ source.ada entity.name.operator.ada
>      Equivalent_Elements => GNATCOLL.VFS."=",
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada
#                          ^^ source.ada entity.name.operator.ada
#                            ^ source.ada
#                             ^^^^^^^^ source.ada entity.name.label.ada
#                                     ^ source.ada entity.name.operator.ada
#                                      ^^^ source.ada entity.name.label.ada
#                                         ^ source.ada entity.name.operator.ada
#                                          ^ source.ada string.quoted.double.ada
#                                           ^ source.ada string.quoted.double.ada
#                                            ^ source.ada string.quoted.double.ada
#                                             ^ source.ada entity.name.operator.ada
>      "="                 => GNATCOLL.VFS."=");
#^^^^^^ source.ada
#      ^ source.ada string.quoted.double.ada
#       ^ source.ada string.quoted.double.ada
#        ^ source.ada string.quoted.double.ada
#         ^^^^^^^^^^^^^^^^^ source.ada
#                          ^^ source.ada entity.name.operator.ada
#                            ^ source.ada
#                             ^^^^^^^^ source.ada entity.name.label.ada
#                                     ^ source.ada entity.name.operator.ada
#                                      ^^^ source.ada entity.name.label.ada
#                                         ^ source.ada entity.name.operator.ada
#                                          ^ source.ada string.quoted.double.ada
#                                           ^ source.ada string.quoted.double.ada
#                                            ^ source.ada string.quoted.double.ada
#                                             ^^^ source.ada
>
>   type Get_Symbol_Access is access procedure
#^^^ source.ada
#   ^^^^ source.ada keyword.other.ada
#       ^ source.ada
#        ^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada
#                          ^^ source.ada keyword.other.ada
#                            ^ source.ada
#                             ^^^^^^ source.ada storage.modifier.ada
#                                   ^ source.ada
#                                    ^^^^^^^^^ source.ada keyword.other.ada
>     (Self     : LSP.Ada_Documents.Document;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^^ source.ada
#                 ^^^ source.ada entity.name.label.ada
#                    ^ source.ada entity.name.operator.ada
#                     ^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                  ^ source.ada entity.name.operator.ada
#                                   ^^^^^^^^ source.ada entity.name.label.ada
#                                           ^^ source.ada
>      Context  : LSP.Ada_Contexts.Context;
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^^ source.ada
#                 ^^^ source.ada entity.name.label.ada
#                    ^ source.ada entity.name.operator.ada
#                     ^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                 ^ source.ada entity.name.operator.ada
#                                  ^^^^^^^ source.ada entity.name.label.ada
#                                         ^^ source.ada
>      Pattern  : LSP.Search.Search_Pattern'Class;
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^^ source.ada
#                 ^^^ source.ada entity.name.label.ada
#                    ^ source.ada entity.name.operator.ada
#                     ^^^^^^ source.ada entity.name.label.ada
#                           ^ source.ada entity.name.operator.ada
#                            ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada
#                                           ^^^^^ source.ada entity.name.label.ada
#                                                ^^ source.ada
>      Canceled : access function return Boolean;
#^^^^^^ source.ada
#      ^^^^^^^^ source.ada entity.name.label.ada
#              ^^^ source.ada
#                 ^^^^^^ source.ada storage.modifier.ada
#                       ^ source.ada
#                        ^^^^^^^^ source.ada keyword.other.ada
#                                ^ source.ada
#                                 ^^^^^^ source.ada keyword.other.ada
#                                       ^ source.ada
#                                        ^^^^^^^ source.ada entity.name.label.ada
#                                               ^^ source.ada
>      Result   : out LSP.Messages.Symbol_Vector);
#^^^^^^ source.ada
#      ^^^^^^ source.ada entity.name.label.ada
#            ^^^^^ source.ada
#                 ^^^ source.ada storage.modifier.ada
#                    ^ source.ada
#                     ^^^ source.ada entity.name.label.ada
#                        ^ source.ada entity.name.operator.ada
#                         ^^^^^^^^ source.ada entity.name.label.ada
#                                 ^ source.ada entity.name.operator.ada
#                                  ^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                               ^^^ source.ada
>   --  textDocument/documentSymbol handler
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>   Empty_Token : LSP.Types.LSP_Number_Or_String :=
#^^^ source.ada
#   ^^^^^^^^^^^ source.ada entity.name.label.ada
#              ^^^ source.ada
#                 ^^^ source.ada entity.name.label.ada
#                    ^ source.ada entity.name.operator.ada
#                     ^^^^^ source.ada entity.name.label.ada
#                          ^ source.ada entity.name.operator.ada
#                           ^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                               ^ source.ada
#                                                ^^ source.ada entity.name.operator.assignment.ada
>     (Is_Number => False, String => <>);
#^^^^^^ source.ada
#      ^^^^^^^^^ source.ada entity.name.label.ada
#               ^ source.ada
#                ^^ source.ada entity.name.operator.ada
#                  ^ source.ada
#                   ^^^^^ source.ada variable.other.constant.ada
#                        ^ source.ada entity.name.operator.ada
#                         ^ source.ada
#                          ^^^^^^ source.ada entity.name.label.ada
#                                ^ source.ada
#                                 ^^ source.ada entity.name.operator.ada
#                                   ^ source.ada
#                                    ^^ source.ada entity.name.operator.ada
#                                      ^^^ source.ada
>
>   type Load_Project_Status is
#^^^ source.ada
#   ^^^^ source.ada keyword.other.ada
#       ^ source.ada
#        ^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                           ^ source.ada
#                            ^^ source.ada keyword.other.ada
>     (Valid_Project_Configured,
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                              ^ source.ada entity.name.operator.ada
>      Single_Project_Found,
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                          ^ source.ada entity.name.operator.ada
>      Alire_Project,
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
>      No_Runtime_Found,
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                      ^ source.ada entity.name.operator.ada
>      No_Project_Found,
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                      ^ source.ada entity.name.operator.ada
>      Multiple_Projects_Found,
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                             ^ source.ada entity.name.operator.ada
>      Invalid_Project_Configured);
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                ^^^ source.ada
>   --  Variants for state of the project loaded into the handler:
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --
#^^^ source.ada
#   ^^ source.ada comment.line.ada
>   --  @value Valid_Project_Configured didChangeConfiguration provided a valid
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^ source.ada comment.line.ada
#       ^ source.ada comment.line.ada punctuation.definition.tag.ada
#        ^^^^^ source.ada comment.line.ada entity.name.tag.ada
#             ^ source.ada comment.line.ada
#              ^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada entity.name.variable.ada
#                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --  project
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^ source.ada comment.line.ada
>   --
#^^^ source.ada
#   ^^ source.ada comment.line.ada
>   --  @value Single_Project_Found no project in didChangeConfiguration, but
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^ source.ada comment.line.ada
#       ^ source.ada comment.line.ada punctuation.definition.tag.ada
#        ^^^^^ source.ada comment.line.ada entity.name.tag.ada
#             ^ source.ada comment.line.ada
#              ^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada entity.name.variable.ada
#                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --  just one project in Root dir
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --
#^^^ source.ada
#   ^^ source.ada comment.line.ada
>   --  @value Alire_Project no project in didChangeConfiguration, but Alire
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^ source.ada comment.line.ada
#       ^ source.ada comment.line.ada punctuation.definition.tag.ada
#        ^^^^^ source.ada comment.line.ada entity.name.tag.ada
#             ^ source.ada comment.line.ada
#              ^^^^^^^^^^^^^ source.ada comment.line.ada entity.name.variable.ada
#                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --  knows what project to use
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --
#^^^ source.ada
#   ^^ source.ada comment.line.ada
>   --  @value No_Runtime_Found project loaded, but no Ada runtime library was
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^ source.ada comment.line.ada
#       ^ source.ada comment.line.ada punctuation.definition.tag.ada
#        ^^^^^ source.ada comment.line.ada entity.name.tag.ada
#             ^ source.ada comment.line.ada
#              ^^^^^^^^^^^^^^^^ source.ada comment.line.ada entity.name.variable.ada
#                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --  found
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^ source.ada comment.line.ada
>   --
#^^^ source.ada
#   ^^ source.ada comment.line.ada
>   --  @value No_Project_Found no project in didChangeConfiguration and no
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^ source.ada comment.line.ada
#       ^ source.ada comment.line.ada punctuation.definition.tag.ada
#        ^^^^^ source.ada comment.line.ada entity.name.tag.ada
#             ^ source.ada comment.line.ada
#              ^^^^^^^^^^^^^^^^ source.ada comment.line.ada entity.name.variable.ada
#                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --  project in Root dir
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --
#^^^ source.ada
#   ^^ source.ada comment.line.ada
>   --  @value Multiple_Projects_Found no project in didChangeConfiguration and
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^ source.ada comment.line.ada
#       ^ source.ada comment.line.ada punctuation.definition.tag.ada
#        ^^^^^ source.ada comment.line.ada entity.name.tag.ada
#             ^ source.ada comment.line.ada
#              ^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada entity.name.variable.ada
#                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --  several projects in Root dir
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --
#^^^ source.ada
#   ^^ source.ada comment.line.ada
>   --  @value Invalid_Project_Configured didChangeConfiguration provided a
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^ source.ada comment.line.ada
#       ^ source.ada comment.line.ada punctuation.definition.tag.ada
#        ^^^^^ source.ada comment.line.ada entity.name.tag.ada
#             ^ source.ada comment.line.ada
#              ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada entity.name.variable.ada
#                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --  valid project
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>   subtype Implicit_Project_Loaded is Load_Project_Status range
#^^^ source.ada
#   ^^^^^^^ source.ada keyword.other.ada
#          ^ source.ada
#           ^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                  ^ source.ada
#                                   ^^ source.ada keyword.other.ada
#                                     ^ source.ada
#                                      ^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                         ^ source.ada
#                                                          ^^^^^ source.ada keyword.other.ada
>     No_Project_Found .. Invalid_Project_Configured;
#^^^^^ source.ada
#     ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                     ^ source.ada
#                      ^^ source.ada entity.name.operator.ada
#                        ^ source.ada
#                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                   ^^ source.ada
>   --  Project status when an implicit project loaded
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>   type Advanced_Refactorings is
#^^^ source.ada
#   ^^^^ source.ada keyword.other.ada
#       ^ source.ada
#        ^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                             ^ source.ada
#                              ^^ source.ada keyword.other.ada
>     (Add_Parameter, Change_Parameters_Type, Change_Parameters_Default_Value,
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^ source.ada
#                     ^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                           ^ source.ada entity.name.operator.ada
#                                            ^ source.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                            ^ source.ada entity.name.operator.ada
>      Replace_Type);
#^^^^^^ source.ada
#      ^^^^^^^^^^^^ source.ada entity.name.label.ada
#                  ^^^ source.ada
>   --  Enum with the advanced refactorings that clients might support
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>   type Advanced_Refactorings_Capabilities is
#^^^ source.ada
#   ^^^^ source.ada keyword.other.ada
#       ^ source.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada
#                                           ^^ source.ada keyword.other.ada
>     array (Advanced_Refactorings) of Boolean;
#^^^^^ source.ada
#     ^^^^^ source.ada keyword.other.ada
#          ^^ source.ada
#            ^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                 ^^ source.ada
#                                   ^^ source.ada keyword.other.ada
#                                     ^ source.ada
#                                      ^^^^^^^ source.ada entity.name.label.ada
#                                             ^^ source.ada
>   --  Array that determines what advanced refactorings clients support
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>   type Experimental_Client_Capabilities is record
#^^^ source.ada
#   ^^^^ source.ada keyword.other.ada
#       ^ source.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                        ^ source.ada
#                                         ^^ source.ada keyword.other.ada
#                                           ^ source.ada
#                                            ^^^^^^ source.ada keyword.other.ada
>      Advanced_Refactorings : Advanced_Refactorings_Capabilities;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                           ^^^ source.ada
#                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                ^^ source.ada
>   end record;
#^^^ source.ada
#   ^^^ source.ada keyword.other.ada
#      ^ source.ada
#       ^^^^^^ source.ada keyword.other.ada
#             ^^ source.ada
>   --  Experimental client capabilities that are extensions of the ones defined
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --  in the LSP
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^ source.ada comment.line.ada
>
>   function Parse
#^^^ source.ada
#   ^^^^^^^^ source.ada keyword.other.ada
#           ^ source.ada
#            ^^^^^ source.ada entity.name.label.ada
>     (Value : LSP.Types.Optional_LSP_Any)
#^^^^^^ source.ada
#      ^^^^^ source.ada entity.name.label.ada
#           ^^^ source.ada
#              ^^^ source.ada entity.name.label.ada
#                 ^ source.ada entity.name.operator.ada
#                  ^^^^^ source.ada entity.name.label.ada
#                       ^ source.ada entity.name.operator.ada
#                        ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                        ^^ source.ada
>      return Experimental_Client_Capabilities;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                             ^^ source.ada
>   --  Parses an LSP.Types.Optional_LSP_Any and creates an
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --  Experimental_Client_Capabilities object.
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>   type Scenario_Variable_List is record
#^^^ source.ada
#   ^^^^ source.ada keyword.other.ada
#       ^ source.ada
#        ^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                              ^ source.ada
#                               ^^ source.ada keyword.other.ada
#                                 ^ source.ada
#                                  ^^^^^^ source.ada keyword.other.ada
>      Names  : VSS.String_Vectors.Virtual_String_Vector;
#^^^^^^ source.ada
#      ^^^^^ source.ada entity.name.label.ada
#           ^^^^ source.ada
#               ^^^ source.ada entity.name.label.ada
#                  ^ source.ada entity.name.operator.ada
#                   ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                 ^ source.ada entity.name.operator.ada
#                                  ^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                       ^^ source.ada
>      Values : VSS.String_Vectors.Virtual_String_Vector;
#^^^^^^ source.ada
#      ^^^^^^ source.ada entity.name.label.ada
#            ^^^ source.ada
#               ^^^ source.ada entity.name.label.ada
#                  ^ source.ada entity.name.operator.ada
#                   ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                 ^ source.ada entity.name.operator.ada
#                                  ^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                       ^^ source.ada
>   end record;
#^^^ source.ada
#   ^^^ source.ada keyword.other.ada
#      ^ source.ada
#       ^^^^^^ source.ada keyword.other.ada
#             ^^ source.ada
>
>   No_Scenario_Variable : constant Scenario_Variable_List :=
#^^^ source.ada
#   ^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                       ^^^ source.ada
#                          ^^^^^^^^ source.ada keyword.other.ada
#                                  ^ source.ada
#                                   ^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                         ^ source.ada
#                                                          ^^ source.ada entity.name.operator.assignment.ada
>     (Names  => VSS.String_Vectors.Empty_Virtual_String_Vector,
#^^^^^^ source.ada
#      ^^^^^ source.ada entity.name.label.ada
#           ^^ source.ada
#             ^^ source.ada entity.name.operator.ada
#               ^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                  ^ source.ada entity.name.operator.ada
#                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                              ^ source.ada entity.name.operator.ada
>      Values => VSS.String_Vectors.Empty_Virtual_String_Vector);
#^^^^^^ source.ada
#      ^^^^^^ source.ada entity.name.label.ada
#            ^ source.ada
#             ^^ source.ada entity.name.operator.ada
#               ^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                  ^ source.ada entity.name.operator.ada
#                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                              ^^^ source.ada
>
>   type Environment is record
#^^^ source.ada
#   ^^^^ source.ada keyword.other.ada
#       ^ source.ada
#        ^^^^^^^^^^^ source.ada entity.name.label.ada
#                   ^ source.ada
#                    ^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^ source.ada keyword.other.ada
>      Filename         : GPR2.Path_Name.Object := GPR2.Path_Name.Undefined;
#^^^^^^ source.ada
#      ^^^^^^^^ source.ada entity.name.label.ada
#              ^^^^^^^^^^^ source.ada
#                         ^^^^ source.ada entity.name.label.ada
#                             ^ source.ada entity.name.operator.ada
#                              ^^^^^^^^^ source.ada entity.name.label.ada
#                                       ^ source.ada entity.name.operator.ada
#                                        ^^^^^^ source.ada entity.name.label.ada
#                                              ^ source.ada
#                                               ^^ source.ada entity.name.operator.assignment.ada
#                                                 ^ source.ada
#                                                  ^^^^ source.ada entity.name.label.ada
#                                                      ^ source.ada entity.name.operator.ada
#                                                       ^^^^^^^^^ source.ada entity.name.label.ada
#                                                                ^ source.ada entity.name.operator.ada
#                                                                 ^^^^^^^^^ source.ada entity.name.label.ada
#                                                                          ^^ source.ada
>      Context          : GPR2.Context.Object := GPR2.Context.Empty;
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^^^^^^^^^^ source.ada
#                         ^^^^ source.ada entity.name.label.ada
#                             ^ source.ada entity.name.operator.ada
#                              ^^^^^^^ source.ada entity.name.label.ada
#                                     ^ source.ada entity.name.operator.ada
#                                      ^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada
#                                             ^^ source.ada entity.name.operator.assignment.ada
#                                               ^ source.ada
#                                                ^^^^ source.ada entity.name.label.ada
#                                                    ^ source.ada entity.name.operator.ada
#                                                     ^^^^^^^ source.ada entity.name.label.ada
#                                                            ^ source.ada entity.name.operator.ada
#                                                             ^^^^^ source.ada entity.name.label.ada
#                                                                  ^^ source.ada
>      Config           : GPR2.Project.Configuration.Object :=
#^^^^^^ source.ada
#      ^^^^^^ source.ada entity.name.label.ada
#            ^^^^^^^^^^^^^ source.ada
#                         ^^^^ source.ada entity.name.label.ada
#                             ^ source.ada entity.name.operator.ada
#                              ^^^^^^^ source.ada entity.name.label.ada
#                                     ^ source.ada entity.name.operator.ada
#                                      ^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                   ^ source.ada entity.name.operator.ada
#                                                    ^^^^^^ source.ada entity.name.label.ada
#                                                          ^ source.ada
#                                                           ^^ source.ada entity.name.operator.assignment.ada
>                           GPR2.Project.Configuration.Undefined;
#^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada
#                           ^^^^ source.ada entity.name.label.ada
#                               ^ source.ada entity.name.operator.ada
#                                ^^^^^^^ source.ada entity.name.label.ada
#                                       ^ source.ada entity.name.operator.ada
#                                        ^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                     ^ source.ada entity.name.operator.ada
#                                                      ^^^^^^^^^ source.ada entity.name.label.ada
#                                                               ^^ source.ada
>      Project_Dir      : GPR2.Path_Name.Object := GPR2.Path_Name.Undefined;
#^^^^^^ source.ada
#      ^^^^^^^^^^^ source.ada entity.name.label.ada
#                 ^^^^^^^^ source.ada
#                         ^^^^ source.ada entity.name.label.ada
#                             ^ source.ada entity.name.operator.ada
#                              ^^^^^^^^^ source.ada entity.name.label.ada
#                                       ^ source.ada entity.name.operator.ada
#                                        ^^^^^^ source.ada entity.name.label.ada
#                                              ^ source.ada
#                                               ^^ source.ada entity.name.operator.assignment.ada
#                                                 ^ source.ada
#                                                  ^^^^ source.ada entity.name.label.ada
#                                                      ^ source.ada entity.name.operator.ada
#                                                       ^^^^^^^^^ source.ada entity.name.label.ada
#                                                                ^ source.ada entity.name.operator.ada
#                                                                 ^^^^^^^^^ source.ada entity.name.label.ada
#                                                                          ^^ source.ada
>      Build_Path       : GPR2.Path_Name.Object := GPR2.Path_Name.Undefined;
#^^^^^^ source.ada
#      ^^^^^^^^^^ source.ada entity.name.label.ada
#                ^^^^^^^^^ source.ada
#                         ^^^^ source.ada entity.name.label.ada
#                             ^ source.ada entity.name.operator.ada
#                              ^^^^^^^^^ source.ada entity.name.label.ada
#                                       ^ source.ada entity.name.operator.ada
#                                        ^^^^^^ source.ada entity.name.label.ada
#                                              ^ source.ada
#                                               ^^ source.ada entity.name.operator.assignment.ada
#                                                 ^ source.ada
#                                                  ^^^^ source.ada entity.name.label.ada
#                                                      ^ source.ada entity.name.operator.ada
#                                                       ^^^^^^^^^ source.ada entity.name.label.ada
#                                                                ^ source.ada entity.name.operator.ada
#                                                                 ^^^^^^^^^ source.ada entity.name.label.ada
#                                                                          ^^ source.ada
>      Subdirs          : Ada.Strings.Unbounded.Unbounded_String;
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^^^^^^^^^^ source.ada
#                         ^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^ source.ada entity.name.label.ada
#                                    ^ source.ada entity.name.operator.ada
#                                     ^^^^^^^^^ source.ada entity.name.label.ada
#                                              ^ source.ada entity.name.operator.ada
#                                               ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                               ^^ source.ada
>      Src_Subdirs      : Ada.Strings.Unbounded.Unbounded_String;
#^^^^^^ source.ada
#      ^^^^^^^^^^^ source.ada entity.name.label.ada
#                 ^^^^^^^^ source.ada
#                         ^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^ source.ada entity.name.label.ada
#                                    ^ source.ada entity.name.operator.ada
#                                     ^^^^^^^^^ source.ada entity.name.label.ada
#                                              ^ source.ada entity.name.operator.ada
#                                               ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                               ^^ source.ada
>      Check_Shared_Lib : Boolean := True;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                      ^^^ source.ada
#                         ^^^^^^^ source.ada entity.name.label.ada
#                                ^ source.ada
#                                 ^^ source.ada entity.name.operator.assignment.ada
#                                   ^ source.ada
#                                    ^^^^ source.ada variable.other.constant.ada
#                                        ^^ source.ada
>      Absent_Dir_Error : Boolean := False;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                      ^^^ source.ada
#                         ^^^^^^^ source.ada entity.name.label.ada
#                                ^ source.ada
#                                 ^^ source.ada entity.name.operator.assignment.ada
#                                   ^ source.ada
#                                    ^^^^^ source.ada variable.other.constant.ada
#                                         ^^ source.ada
>      Implicit_With    : GPR2.Path_Name.Set.Object :=
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                   ^^^^^^ source.ada
#                         ^^^^ source.ada entity.name.label.ada
#                             ^ source.ada entity.name.operator.ada
#                              ^^^^^^^^^ source.ada entity.name.label.ada
#                                       ^ source.ada entity.name.operator.ada
#                                        ^^^ source.ada entity.name.label.ada
#                                           ^ source.ada entity.name.operator.ada
#                                            ^^^^^^ source.ada entity.name.label.ada
#                                                  ^ source.ada
#                                                   ^^ source.ada entity.name.operator.assignment.ada
>                           GPR2.Path_Name.Set.Empty_Set;
#^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada
#                           ^^^^ source.ada entity.name.label.ada
#                               ^ source.ada entity.name.operator.ada
#                                ^^^^^^^^^ source.ada entity.name.label.ada
#                                         ^ source.ada entity.name.operator.ada
#                                          ^^^ source.ada entity.name.label.ada
#                                             ^ source.ada entity.name.operator.ada
#                                              ^^^^^^^^^ source.ada entity.name.label.ada
#                                                       ^^ source.ada
>      Pre_Conf_Mode    : Boolean := False;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                   ^^^^^^ source.ada
#                         ^^^^^^^ source.ada entity.name.label.ada
#                                ^ source.ada
#                                 ^^ source.ada entity.name.operator.assignment.ada
#                                   ^ source.ada
#                                    ^^^^^ source.ada variable.other.constant.ada
#                                         ^^ source.ada
>      File_Reader      : GPR2.File_Readers.File_Reader_Reference :=
#^^^^^^ source.ada
#      ^^^^^^^^^^^ source.ada entity.name.label.ada
#                 ^^^^^^^^ source.ada
#                         ^^^^ source.ada entity.name.label.ada
#                             ^ source.ada entity.name.operator.ada
#                              ^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                ^ source.ada
#                                                                 ^^ source.ada entity.name.operator.assignment.ada
>                           GPR2.File_Readers.No_File_Reader_Reference;
#^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada
#                           ^^^^ source.ada entity.name.label.ada
#                               ^ source.ada entity.name.operator.ada
#                                ^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                     ^^ source.ada
>   end record;
#^^^ source.ada
#   ^^^ source.ada keyword.other.ada
#      ^ source.ada
#       ^^^^^^ source.ada keyword.other.ada
#             ^^ source.ada
>
>   Empty_Environment : constant Environment := (others => <>);
#^^^ source.ada
#   ^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                    ^^^ source.ada
#                       ^^^^^^^^ source.ada keyword.other.ada
#                               ^ source.ada
#                                ^^^^^^^^^^^ source.ada entity.name.label.ada
#                                           ^ source.ada
#                                            ^^ source.ada entity.name.operator.assignment.ada
#                                              ^^ source.ada
#                                                ^^^^^^ source.ada keyword.other.ada
#                                                      ^ source.ada
#                                                       ^^ source.ada entity.name.operator.ada
#                                                         ^ source.ada
#                                                          ^^ source.ada entity.name.operator.ada
#                                                            ^^^ source.ada
>
>   type Message_Handler
#^^^ source.ada
#   ^^^^ source.ada keyword.other.ada
#       ^ source.ada
#        ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Server  : access LSP.Servers.Server;
#^^^^^^ source.ada
#      ^^^^^^ source.ada entity.name.label.ada
#            ^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^ source.ada entity.name.label.ada
#                          ^ source.ada entity.name.operator.ada
#                           ^^^^^^^ source.ada entity.name.label.ada
#                                  ^ source.ada entity.name.operator.ada
#                                   ^^^^^^ source.ada entity.name.label.ada
#                                         ^^ source.ada
>      Trace   : GNATCOLL.Traces.Trace_Handle)
#^^^^^^ source.ada
#      ^^^^^ source.ada entity.name.label.ada
#           ^^^^^ source.ada
#                ^^^^^^^^ source.ada entity.name.label.ada
#                        ^ source.ada entity.name.operator.ada
#                         ^^^^^^ source.ada entity.name.label.ada
#                               ^ source.ada entity.name.operator.ada
#                                ^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^^ source.ada
>   is limited new LSP.Server_Request_Handlers.Server_Request_Handler
#^^^ source.ada
#   ^^ source.ada keyword.other.ada
#     ^ source.ada
#      ^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^ source.ada keyword.other.ada
#                 ^ source.ada
#                  ^^^ source.ada entity.name.label.ada
#                     ^ source.ada entity.name.operator.ada
#                      ^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                             ^ source.ada entity.name.operator.ada
#                                              ^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     and LSP.Server_Notification_Receivers.Server_Notification_Receiver
#^^^^^ source.ada
#     ^^^ source.ada entity.name.operator.ada
#        ^ source.ada
#         ^^^ source.ada entity.name.label.ada
#            ^ source.ada entity.name.operator.ada
#             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     and LSP.Server_Backends.Server_Backend
#^^^^^ source.ada
#     ^^^ source.ada entity.name.operator.ada
#        ^ source.ada
#         ^^^ source.ada entity.name.label.ada
#            ^ source.ada entity.name.operator.ada
#             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     and LSP.Ada_Documents.Document_Provider
#^^^^^ source.ada
#     ^^^ source.ada entity.name.operator.ada
#        ^ source.ada
#         ^^^ source.ada entity.name.label.ada
#            ^ source.ada entity.name.operator.ada
#             ^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                          ^ source.ada entity.name.operator.ada
#                           ^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>   with record
#^^^ source.ada
#   ^^^^ source.ada keyword.other.ada
#       ^ source.ada
#        ^^^^^^ source.ada keyword.other.ada
>      Contexts : LSP.Ada_Context_Sets.Context_Set;
#^^^^^^ source.ada
#      ^^^^^^^^ source.ada entity.name.label.ada
#              ^^^ source.ada
#                 ^^^ source.ada entity.name.label.ada
#                    ^ source.ada entity.name.operator.ada
#                     ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                     ^ source.ada entity.name.operator.ada
#                                      ^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                 ^^ source.ada
>      --  There is one context in this list per loaded project.
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  There should always be at least one "project" context - if no .gpr
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  is known to the server, this context should map to the implicit
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  project.
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^ source.ada comment.line.ada
>
>      Client : LSP.Messages.InitializeParams;
#^^^^^^ source.ada
#      ^^^^^^ source.ada entity.name.label.ada
#            ^^^ source.ada
#               ^^^ source.ada entity.name.label.ada
#                  ^ source.ada entity.name.operator.ada
#                   ^^^^^^^^ source.ada entity.name.label.ada
#                           ^ source.ada entity.name.operator.ada
#                            ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^^ source.ada
>      --  Client settings got during initialization request
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Root : GNATCOLL.VFS.Virtual_File;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^ source.ada
#             ^^^^^^^^ source.ada entity.name.label.ada
#                     ^ source.ada entity.name.operator.ada
#                      ^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      --  The directory passed under rootURI/rootPath during the initialize
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  request.
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^ source.ada comment.line.ada
>
>      Charset : VSS.Strings.Virtual_String;
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^ source.ada entity.name.label.ada
#                           ^ source.ada entity.name.operator.ada
#                            ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^^ source.ada
>      --  A character set for Libadalang
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Project_File : VSS.Strings.Virtual_String;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^ source.ada entity.name.label.ada
#                  ^^^ source.ada
#                     ^^^ source.ada entity.name.label.ada
#                        ^ source.ada entity.name.operator.ada
#                         ^^^^^^^ source.ada entity.name.label.ada
#                                ^ source.ada entity.name.operator.ada
#                                 ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                               ^^ source.ada
>      --  The project file, if provided by the user on Configuration/Init
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Scenario_Variables : Scenario_Variable_List;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                        ^^^ source.ada
#                           ^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                 ^^ source.ada
>      --  Scenario variables, if provided by the user on Configuration/Init
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Diagnostics_Enabled : Boolean := True;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                         ^^^ source.ada
#                            ^^^^^^^ source.ada entity.name.label.ada
#                                   ^ source.ada
#                                    ^^ source.ada entity.name.operator.assignment.ada
#                                      ^ source.ada
#                                       ^^^^ source.ada variable.other.constant.ada
#                                           ^^ source.ada
>      --  Whether to publish diagnostics
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Token_Id : Integer := 0;
#^^^^^^ source.ada
#      ^^^^^^^^ source.ada entity.name.label.ada
#              ^^^ source.ada
#                 ^^^^^^^ source.ada entity.name.label.ada
#                        ^ source.ada
#                         ^^ source.ada entity.name.operator.assignment.ada
#                           ^ source.ada
#                            ^ source.ada constant.numeric.ada
#                             ^^ source.ada
>      --  An ever-increasing number used to generate unique progress tokens
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Indexing_Enabled  : Boolean := True;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                      ^^^^ source.ada
#                          ^^^^^^^ source.ada entity.name.label.ada
#                                 ^ source.ada
#                                  ^^ source.ada entity.name.operator.assignment.ada
#                                    ^ source.ada
#                                     ^^^^ source.ada variable.other.constant.ada
#                                         ^^ source.ada
>      --  Whether to index sources in the background. This should be True
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  for normal use, and can be disabled for debug or testing purposes.
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Indexing_Token  : LSP.Types.LSP_Number_Or_String := Empty_Token;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                    ^^^^ source.ada
#                        ^^^ source.ada entity.name.label.ada
#                           ^ source.ada entity.name.operator.ada
#                            ^^^^^ source.ada entity.name.label.ada
#                                 ^ source.ada entity.name.operator.ada
#                                  ^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                      ^ source.ada
#                                                       ^^ source.ada entity.name.operator.assignment.ada
#                                                         ^ source.ada
#                                                          ^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                     ^^ source.ada
>      --  The token of the current indexing progress sequence
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Files_To_Index : File_Sets.Set;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                    ^^^ source.ada
#                       ^^^^^^^^^ source.ada entity.name.label.ada
#                                ^ source.ada entity.name.operator.ada
#                                 ^^^ source.ada entity.name.label.ada
#                                    ^^ source.ada
>      --  Contains any files that need indexing.
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
>      --  Indexing of sources is performed in the background as soon as needed
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  (typically after a project load), and pre-indexes the Ada source
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  files, so that subsequent request are fast.
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  The way the "backgrounding" works is the following:
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
>      --      * each request which should trigger indexing (for instance
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --        project load) adds files to Files_To_Index
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
>      --      * the procedure Index_Files takes care of the indexing; it's also
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --        looking at the queue after each indexing to see if there
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --        are requests pending. If a request is pending, it stops
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --        indexing.
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
>      --      * whenever the server has finished processing a notification
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --        or a requests, it looks at whether Files_To_Index contains
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --        files; if it does, it runs Index_Files
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Total_Files_Indexed  : Natural := 0;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                         ^^^^ source.ada
#                             ^^^^^^^ source.ada entity.name.label.ada
#                                    ^ source.ada
#                                     ^^ source.ada entity.name.operator.assignment.ada
#                                       ^ source.ada
#                                        ^ source.ada constant.numeric.ada
#                                         ^^ source.ada
>      Total_Files_To_Index : Positive := 1;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                          ^^^ source.ada
#                             ^^^^^^^^ source.ada entity.name.label.ada
#                                     ^ source.ada
#                                      ^^ source.ada entity.name.operator.assignment.ada
#                                        ^ source.ada
#                                         ^ source.ada constant.numeric.ada
#                                          ^^ source.ada
>      --  These two fields are used to produce a progress bar for the indexing
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  operations. Total_Files_To_Index starts at 1 so that the progress
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  bar starts at 0%.
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Options : Options_Holder;
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                              ^^ source.ada
>
>      Open_Documents : Document_Maps.Map;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                    ^^^ source.ada
#                       ^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                    ^ source.ada entity.name.operator.ada
#                                     ^^^ source.ada entity.name.label.ada
#                                        ^^ source.ada
>      --  The documents that are currently open
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Get_Symbols : Get_Symbol_Access;
#^^^^^^ source.ada
#      ^^^^^^^^^^^ source.ada entity.name.label.ada
#                 ^^^ source.ada
#                    ^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                     ^^ source.ada
>      --  textDocument/documentSymbol handler. Actual value depends on
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  client's capabilities.
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Resource_Operations : LSP.Messages.Optional_ResourceOperationKindSet;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                         ^^^ source.ada
#                            ^^^ source.ada entity.name.label.ada
#                               ^ source.ada entity.name.operator.ada
#                                ^^^^^^^^ source.ada entity.name.label.ada
#                                        ^ source.ada entity.name.operator.ada
#                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                          ^^ source.ada
>      --  Client capabilities to support resource operations in
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  `WorkspaceEdit`s.
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Versioned_Documents : Boolean := False;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                         ^^^ source.ada
#                            ^^^^^^^ source.ada entity.name.label.ada
#                                   ^ source.ada
#                                    ^^ source.ada entity.name.operator.assignment.ada
#                                      ^ source.ada
#                                       ^^^^^ source.ada variable.other.constant.ada
#                                            ^^ source.ada
>      --  Client capabilities to support versioned document changes in
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  `WorkspaceEdit`s.
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Line_Folding_Only : Boolean := False;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                       ^^^ source.ada
#                          ^^^^^^^ source.ada entity.name.label.ada
#                                 ^ source.ada
#                                  ^^ source.ada entity.name.operator.assignment.ada
#                                    ^ source.ada
#                                     ^^^^^ source.ada variable.other.constant.ada
#                                          ^^ source.ada
>      --  Client capabilities, folding only per lines
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Supports_Related_Diagnostics : Boolean := False;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                  ^^^ source.ada
#                                     ^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada
#                                             ^^ source.ada entity.name.operator.assignment.ada
#                                               ^ source.ada
#                                                ^^^^^ source.ada variable.other.constant.ada
#                                                     ^^ source.ada
>      --  Client capabilities to support diagnostics' relatedInformation.
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Completion_Snippets_Enabled : Boolean := False;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                 ^^^ source.ada
#                                    ^^^^^^^ source.ada entity.name.label.ada
#                                           ^ source.ada
#                                            ^^ source.ada entity.name.operator.assignment.ada
#                                              ^ source.ada
#                                               ^^^^^ source.ada variable.other.constant.ada
#                                                    ^^ source.ada
>      --  True if the client supports completion snippets
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Use_Completion_Snippets : Boolean := True;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                             ^^^ source.ada
#                                ^^^^^^^ source.ada entity.name.label.ada
#                                       ^ source.ada
#                                        ^^ source.ada entity.name.operator.assignment.ada
#                                          ^ source.ada
#                                           ^^^^ source.ada variable.other.constant.ada
#                                               ^^ source.ada
>      --  True if we should use snippets for completion (e.g:
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  subprogram calls).
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Completion_Resolve_Properties : VSS.String_Vectors.Virtual_String_Vector;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                   ^^^ source.ada
#                                      ^^^ source.ada entity.name.label.ada
#                                         ^ source.ada entity.name.operator.ada
#                                          ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                        ^ source.ada entity.name.operator.ada
#                                                         ^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                              ^^ source.ada
>      --  The list of CompletionItem properties that can be resolved
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  lazily (i.e: when the item is selected on client-side) via
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  the completionItem/resolve request.
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Range_Formatting_Enabled : Boolean := False;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                              ^^^ source.ada
#                                 ^^^^^^^ source.ada entity.name.label.ada
#                                        ^ source.ada
#                                         ^^ source.ada entity.name.operator.assignment.ada
#                                           ^ source.ada
#                                            ^^^^^ source.ada variable.other.constant.ada
#                                                 ^^ source.ada
>      --  True if the handler has registered rangeFormatting provider
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Named_Notation_Threshold : Natural := 3;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                              ^^^ source.ada
#                                 ^^^^^^^ source.ada entity.name.label.ada
#                                        ^ source.ada
#                                         ^^ source.ada entity.name.operator.assignment.ada
#                                           ^ source.ada
#                                            ^ source.ada constant.numeric.ada
#                                             ^^ source.ada
>      --  Defines the number of parameters/components at which point named
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  notation is used for subprogram/aggregate completion snippets.
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Display_Method_Ancestry_Policy :
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                    ^^^ source.ada
>         LSP.Messages.AlsDisplayMethodAncestryOnNavigationPolicy :=
#^^^^^^^^^ source.ada
#         ^^^ source.ada entity.name.label.ada
#            ^ source.ada entity.name.operator.ada
#             ^^^^^^^^ source.ada entity.name.label.ada
#                     ^ source.ada entity.name.operator.ada
#                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                ^ source.ada
#                                                                 ^^ source.ada entity.name.operator.assignment.ada
>           LSP.Messages.Usage_And_Abstract_Only;
#^^^^^^^^^^^ source.ada
#           ^^^ source.ada entity.name.label.ada
#              ^ source.ada entity.name.operator.ada
#               ^^^^^^^^ source.ada entity.name.label.ada
#                       ^ source.ada entity.name.operator.ada
#                        ^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                               ^^ source.ada
>      --  Defines the policy regarding the listing of
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  overriding/overridden subprograms for navigation requests
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  such as textDocument/definition, textDocument/declaration
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  and textDocument/implementation.
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Follow_Symlinks : Boolean := True;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                     ^^^ source.ada
#                        ^^^^^^^ source.ada entity.name.label.ada
#                               ^ source.ada
#                                ^^ source.ada entity.name.operator.assignment.ada
#                                  ^ source.ada
#                                   ^^^^ source.ada variable.other.constant.ada
#                                       ^^ source.ada
>      --  False if the client disables symlink following. In this case
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  URIs from client should match file names reported by LAL and
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  GNATCOLL.Project.
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Highlighter    : LSP.Ada_Highlighters.Ada_Highlighter;
#^^^^^^ source.ada
#      ^^^^^^^^^^^ source.ada entity.name.label.ada
#                 ^^^^^^ source.ada
#                       ^^^ source.ada entity.name.label.ada
#                          ^ source.ada entity.name.operator.ada
#                           ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                           ^ source.ada entity.name.operator.ada
#                                            ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                           ^^ source.ada
>      --  Semantic token highlighter for Ada
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      ----------------------
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      -- Project handling --
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      ----------------------
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Project_Tree : GPR2.Project.Tree.Object;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^ source.ada entity.name.label.ada
#                  ^^^ source.ada
#                     ^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^ source.ada entity.name.label.ada
#                                 ^ source.ada entity.name.operator.ada
#                                  ^^^^ source.ada entity.name.label.ada
#                                      ^ source.ada entity.name.operator.ada
#                                       ^^^^^^ source.ada entity.name.label.ada
#                                             ^^ source.ada
>      --  The currently loaded project tree
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Project_Environment : Environment;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                         ^^^ source.ada
#                            ^^^^^^^^^^^ source.ada entity.name.label.ada
#                                       ^^ source.ada
>      --  The project environment for the currently loaded project
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Project_Predefined_Sources : LSP.Ada_File_Sets.Indexed_File_Set;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                ^^^ source.ada
#                                   ^^^ source.ada entity.name.label.ada
#                                      ^ source.ada entity.name.operator.ada
#                                       ^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                    ^ source.ada entity.name.operator.ada
#                                                     ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                     ^^ source.ada
>      --  A cache for the predefined sources in the loaded project (typically,
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  runtime files).
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Relocate_Build_Tree : VSS.Strings.Virtual_String;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                         ^^^ source.ada
#                            ^^^ source.ada entity.name.label.ada
#                               ^ source.ada entity.name.operator.ada
#                                ^^^^^^^ source.ada entity.name.label.ada
#                                       ^ source.ada entity.name.operator.ada
#                                        ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                      ^^ source.ada
>      --  Value of `relocateBuildTree`. See `--relocate-build-tree[=dir]`
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  of `gprbuild`.
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Relocate_Root_Dir : VSS.Strings.Virtual_String;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                       ^^^ source.ada
#                          ^^^ source.ada entity.name.label.ada
#                             ^ source.ada entity.name.operator.ada
#                              ^^^^^^^ source.ada entity.name.label.ada
#                                     ^ source.ada entity.name.operator.ada
#                                      ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                    ^^ source.ada
>      --  Value of `rootDir`. See `--root-dir=dir` of `gprbuild`.
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Project_Status : Load_Project_Status := No_Project_Found;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                    ^^^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada
#                                           ^^ source.ada entity.name.operator.assignment.ada
#                                             ^ source.ada
#                                              ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                              ^^ source.ada
>      --  Status of loading the project
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      --  Scenario : LSP.Types.LSP_Any;
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  Last used scenario variables
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      --  Charset : Ada.Strings.Unbounded.Unbounded_String;
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  Character set from didChangeConfiguration
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Project_Dirs_Loaded : File_Sets.Set;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                         ^^^ source.ada
#                            ^^^^^^^^^ source.ada entity.name.label.ada
#                                     ^ source.ada entity.name.operator.ada
#                                      ^^^ source.ada entity.name.label.ada
#                                         ^^ source.ada
>      --  The directories to load in the "implicit project"
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      File_Monitor    : LSP.File_Monitors.File_Monitor_Access;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^ source.ada entity.name.label.ada
#                  ^^^^^^ source.ada
#                        ^^^ source.ada entity.name.label.ada
#                           ^ source.ada entity.name.operator.ada
#                            ^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                         ^ source.ada entity.name.operator.ada
#                                          ^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                             ^^ source.ada
>      --  Filesystem monitoring
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Log_Threshold : Natural := 10;
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                   ^^^ source.ada
#                      ^^^^^^^ source.ada entity.name.label.ada
#                             ^ source.ada
#                              ^^ source.ada entity.name.operator.assignment.ada
#                                ^ source.ada
#                                 ^^ source.ada constant.numeric.ada
#                                   ^^ source.ada
>      --  Maximum number of logs (should be > to the number of servers run
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  simultaneously)
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      ---------------------------------------
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      --  Experimental Client Capabilities --
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>      ---------------------------------------
#^^^^^^ source.ada
#      ^^ source.ada comment.line.ada
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>      Experimental_Client_Capabilities :
#^^^^^^ source.ada
#      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^^ source.ada
>        LSP.Ada_Handlers.Experimental_Client_Capabilities :=
#^^^^^^^^ source.ada
#        ^^^ source.ada entity.name.label.ada
#           ^ source.ada entity.name.operator.ada
#            ^^^^^^^^^^^^ source.ada entity.name.label.ada
#                        ^ source.ada entity.name.operator.ada
#                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                         ^ source.ada
#                                                          ^^ source.ada entity.name.operator.assignment.ada
>          (Advanced_Refactorings => (others => False));
#^^^^^^^^^^^ source.ada
#           ^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                ^ source.ada
#                                 ^^ source.ada entity.name.operator.ada
#                                   ^^ source.ada
#                                     ^^^^^^ source.ada keyword.other.ada
#                                           ^ source.ada
#                                            ^^ source.ada entity.name.operator.ada
#                                              ^ source.ada
#                                               ^^^^^ source.ada variable.other.constant.ada
#                                                    ^^^^ source.ada
>   end record;
#^^^ source.ada
#   ^^^ source.ada keyword.other.ada
#      ^ source.ada
#       ^^^^^^ source.ada keyword.other.ada
#             ^^ source.ada
>
>   overriding procedure Before_Work
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^^ source.ada keyword.other.ada
#                       ^ source.ada
#                        ^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Message : LSP.Messages.Message'Class);
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^ source.ada entity.name.label.ada
#                                    ^ source.ada
#                                     ^^^^^ source.ada entity.name.label.ada
#                                          ^^^ source.ada
>
>   overriding procedure After_Work
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^^ source.ada keyword.other.ada
#                       ^ source.ada
#                        ^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Message : LSP.Messages.Message'Class);
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^ source.ada entity.name.label.ada
#                                    ^ source.ada
#                                     ^^^^^ source.ada entity.name.label.ada
#                                          ^^^ source.ada
>
>   overriding function On_Initialize_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Initialize_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                               ^^ source.ada
>      return LSP.Messages.Server_Responses.Initialize_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                              ^^ source.ada
>
>   overriding function On_Shutdown_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Shutdown_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                             ^^ source.ada
>      return LSP.Messages.Server_Responses.Shutdown_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                            ^^ source.ada
>
>   overriding function On_CodeAction_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.CodeAction_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                               ^^ source.ada
>      return LSP.Messages.Server_Responses.CodeAction_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                              ^^ source.ada
>
>   overriding function On_Completion_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Completion_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                               ^^ source.ada
>      return LSP.Messages.Server_Responses.Completion_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                              ^^ source.ada
>
>   overriding function On_CompletionItemResolve_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.CompletionItemResolve_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                          ^^ source.ada
>      return LSP.Messages.Server_Responses.CompletionItemResolve_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                         ^^ source.ada
>
>   overriding function On_Definition_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Definition_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                               ^^ source.ada
>      return LSP.Messages.Server_Responses.Location_Link_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                 ^^ source.ada
>
>   overriding function On_Declaration_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Declaration_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                ^^ source.ada
>      return LSP.Messages.Server_Responses.Location_Link_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                 ^^ source.ada
>
>   overriding function On_Implementation_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Implementation_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                   ^^ source.ada
>      return LSP.Messages.Server_Responses.Location_Link_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                 ^^ source.ada
>
>   overriding function On_Type_Definition_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Type_Definition_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                    ^^ source.ada
>      return LSP.Messages.Server_Responses.Location_Link_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                 ^^ source.ada
>
>   overriding function On_Highlight_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Highlight_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                              ^^ source.ada
>      return LSP.Messages.Server_Responses.Highlight_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                             ^^ source.ada
>
>   overriding function On_Hover_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Hover_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                          ^^ source.ada
>      return LSP.Messages.Server_Responses.Hover_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                         ^^ source.ada
>
>   overriding function On_References_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.References_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                               ^^ source.ada
>      return LSP.Messages.Server_Responses.Location_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                            ^^ source.ada
>
>   overriding function On_Signature_Help_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Signature_Help_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                   ^^ source.ada
>      return LSP.Messages.Server_Responses.SignatureHelp_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                 ^^ source.ada
>
>   overriding function On_Document_Links_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Document_Links_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                   ^^ source.ada
>      return LSP.Messages.Server_Responses.Links_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                         ^^ source.ada
>
>   overriding function On_Document_Tokens_Full_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Document_Tokens_Full_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                         ^^ source.ada
>      return LSP.Messages.Server_Responses.SemanticTokens_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                  ^^ source.ada
>
>   overriding function On_Document_Tokens_Range_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Document_Tokens_Range_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                          ^^ source.ada
>      return LSP.Messages.Server_Responses.SemanticTokens_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                  ^^ source.ada
>
>   overriding function On_Document_Symbols_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Document_Symbols_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                     ^^ source.ada
>      return LSP.Messages.Server_Responses.Symbol_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                          ^^ source.ada
>
>   overriding function On_Folding_Range_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Folding_Range_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                  ^^ source.ada
>      return LSP.Messages.Server_Responses.FoldingRange_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                ^^ source.ada
>
>   overriding function On_Prepare_Call_Hierarchy_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Prepare_Call_Hierarchy_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                           ^^ source.ada
>      return LSP.Messages.Server_Responses.PrepareCallHierarchy_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                        ^^ source.ada
>
>   overriding function On_Incoming_Calls_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Incoming_Calls_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                   ^^ source.ada
>      return LSP.Messages.Server_Responses.IncomingCalls_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                 ^^ source.ada
>
>   overriding function On_Outgoing_Calls_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Outgoing_Calls_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                   ^^ source.ada
>      return LSP.Messages.Server_Responses.OutgoingCalls_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                 ^^ source.ada
>
>   overriding function On_Selection_Range_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Selection_Range_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                    ^^ source.ada
>      return LSP.Messages.Server_Responses.SelectionRange_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                  ^^ source.ada
>
>   overriding function On_Rename_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Rename_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                           ^^ source.ada
>      return LSP.Messages.Server_Responses.Rename_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                          ^^ source.ada
>
>   overriding function On_Prepare_Rename_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Prepare_Rename_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                   ^^ source.ada
>      return LSP.Messages.Server_Responses.Prepare_Rename_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                  ^^ source.ada
>
>   overriding function On_Execute_Command_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Execute_Command_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                    ^^ source.ada
>      return LSP.Messages.Server_Responses.ExecuteCommand_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                  ^^ source.ada
>
>   overriding function On_Workspace_Symbols_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Workspace_Symbols_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                      ^^ source.ada
>      return LSP.Messages.Server_Responses.Symbol_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                          ^^ source.ada
>
>   overriding function On_Workspace_Execute_Command_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Workspace_Execute_Command_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                              ^^ source.ada
>      return LSP.Messages.Server_Responses.ExecuteCommand_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                  ^^ source.ada
>
>   overriding function On_Workspace_Will_Create_Files_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
>                  Workspace_Will_Create_Files_Request)
#^^^^^^^^^^^^^^^^^^ source.ada
#                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                     ^^ source.ada
>      return LSP.Messages.Server_Responses.WillCreateFiles_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                   ^^ source.ada
>
>   overriding procedure On_DidCreateFiles_Notification
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^^ source.ada keyword.other.ada
#                       ^ source.ada
#                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self  : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^ source.ada
#              ^^^^^^ source.ada storage.modifier.ada
#                    ^ source.ada
#                     ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                    ^^ source.ada
>      Value : LSP.Messages.CreateFilesParams);
#^^^^^^ source.ada
#      ^^^^^ source.ada entity.name.label.ada
#           ^^^ source.ada
#              ^^^ source.ada entity.name.label.ada
#                 ^ source.ada entity.name.operator.ada
#                  ^^^^^^^^ source.ada entity.name.label.ada
#                          ^ source.ada entity.name.operator.ada
#                           ^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^^^ source.ada
>
>   overriding function On_Workspace_Will_Rename_Files_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
>                  Workspace_Will_Rename_Files_Request)
#^^^^^^^^^^^^^^^^^^ source.ada
#                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                     ^^ source.ada
>      return LSP.Messages.Server_Responses.WillRenameFiles_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                   ^^ source.ada
>
>   overriding procedure On_DidRenameFiles_Notification
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^^ source.ada keyword.other.ada
#                       ^ source.ada
#                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self  : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^ source.ada
#              ^^^^^^ source.ada storage.modifier.ada
#                    ^ source.ada
#                     ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                    ^^ source.ada
>      Value : LSP.Messages.RenameFilesParams);
#^^^^^^ source.ada
#      ^^^^^ source.ada entity.name.label.ada
#           ^^^ source.ada
#              ^^^ source.ada entity.name.label.ada
#                 ^ source.ada entity.name.operator.ada
#                  ^^^^^^^^ source.ada entity.name.label.ada
#                          ^ source.ada entity.name.operator.ada
#                           ^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^^^ source.ada
>
>   overriding function On_Workspace_Will_Delete_Files_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
>                  Workspace_Will_Delete_Files_Request)
#^^^^^^^^^^^^^^^^^^ source.ada
#                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                     ^^ source.ada
>      return LSP.Messages.Server_Responses.WillDeleteFiles_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                   ^^ source.ada
>
>   overriding procedure On_DidDeleteFiles_Notification
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^^ source.ada keyword.other.ada
#                       ^ source.ada
#                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self  : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^ source.ada
#              ^^^^^^ source.ada storage.modifier.ada
#                    ^ source.ada
#                     ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                    ^^ source.ada
>      Value : LSP.Messages.DeleteFilesParams);
#^^^^^^ source.ada
#      ^^^^^ source.ada entity.name.label.ada
#           ^^^ source.ada
#              ^^^ source.ada entity.name.label.ada
#                 ^ source.ada entity.name.operator.ada
#                  ^^^^^^^^ source.ada entity.name.label.ada
#                          ^ source.ada entity.name.operator.ada
#                           ^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^^^ source.ada
>
>   overriding function On_Color_Presentation_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Color_Presentation_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                       ^^ source.ada
>      return LSP.Messages.Server_Responses.ColorPresentation_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                     ^^ source.ada
>
>   overriding function On_Document_Color_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Document_Color_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                   ^^ source.ada
>      return LSP.Messages.Server_Responses.DocumentColor_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                 ^^ source.ada
>
>   overriding function On_ALS_Show_Dependencies_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.ALS_Show_Dependencies_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                          ^^ source.ada
>      return LSP.Messages.Server_Responses.ALS_ShowDependencies_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                        ^^ source.ada
>
>   overriding function On_ALS_Source_Dirs_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.ALS_Source_Dirs_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                    ^^ source.ada
>      return LSP.Messages.Server_Responses.ALS_SourceDirs_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                  ^^ source.ada
>
>   overriding function On_ALS_Debug_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.ALS_Debug_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                              ^^ source.ada
>      return LSP.Messages.Server_Responses.ALS_Debug_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                             ^^ source.ada
>
>   overriding function On_Formatting_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Formatting_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                               ^^ source.ada
>      return LSP.Messages.Server_Responses.Formatting_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                              ^^ source.ada
>
>   overriding function On_Range_Formatting_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.Range_Formatting_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                     ^^ source.ada
>      return LSP.Messages.Server_Responses.Range_Formatting_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                    ^^ source.ada
>
>   overriding procedure On_Initialized_Notification
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^^ source.ada keyword.other.ada
#                       ^ source.ada
#                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self  : access Message_Handler) is null;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^ source.ada
#              ^^^^^^ source.ada storage.modifier.ada
#                    ^ source.ada
#                     ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                    ^^ source.ada
#                                      ^^ source.ada keyword.other.ada
#                                        ^ source.ada
#                                         ^^^^ source.ada variable.other.constant.ada
#                                             ^^ source.ada
>
>   overriding procedure On_Exit_Notification
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^^ source.ada keyword.other.ada
#                       ^ source.ada
#                        ^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self  : access Message_Handler);
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^ source.ada
#              ^^^^^^ source.ada storage.modifier.ada
#                    ^ source.ada
#                     ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                    ^^^ source.ada
>
>   overriding procedure On_DidChangeTextDocument_Notification
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^^ source.ada keyword.other.ada
#                       ^ source.ada
#                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self  : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^ source.ada
#              ^^^^^^ source.ada storage.modifier.ada
#                    ^ source.ada
#                     ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                    ^^ source.ada
>      Value : LSP.Messages.DidChangeTextDocumentParams);
#^^^^^^ source.ada
#      ^^^^^ source.ada entity.name.label.ada
#           ^^^ source.ada
#              ^^^ source.ada entity.name.label.ada
#                 ^ source.ada entity.name.operator.ada
#                  ^^^^^^^^ source.ada entity.name.label.ada
#                          ^ source.ada entity.name.operator.ada
#                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                      ^^^ source.ada
>
>   overriding procedure On_DidCloseTextDocument_Notification
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^^ source.ada keyword.other.ada
#                       ^ source.ada
#                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self  : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^ source.ada
#              ^^^^^^ source.ada storage.modifier.ada
#                    ^ source.ada
#                     ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                    ^^ source.ada
>      Value : LSP.Messages.DidCloseTextDocumentParams);
#^^^^^^ source.ada
#      ^^^^^ source.ada entity.name.label.ada
#           ^^^ source.ada
#              ^^^ source.ada entity.name.label.ada
#                 ^ source.ada entity.name.operator.ada
#                  ^^^^^^^^ source.ada entity.name.label.ada
#                          ^ source.ada entity.name.operator.ada
#                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                     ^^^ source.ada
>
>   overriding procedure On_DidOpenTextDocument_Notification
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^^ source.ada keyword.other.ada
#                       ^ source.ada
#                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self  : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^ source.ada
#              ^^^^^^ source.ada storage.modifier.ada
#                    ^ source.ada
#                     ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                    ^^ source.ada
>      Value : LSP.Messages.DidOpenTextDocumentParams);
#^^^^^^ source.ada
#      ^^^^^ source.ada entity.name.label.ada
#           ^^^ source.ada
#              ^^^ source.ada entity.name.label.ada
#                 ^ source.ada entity.name.operator.ada
#                  ^^^^^^^^ source.ada entity.name.label.ada
#                          ^ source.ada entity.name.operator.ada
#                           ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                    ^^^ source.ada
>
>   overriding procedure On_DidSaveTextDocument_Notification
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^^ source.ada keyword.other.ada
#                       ^ source.ada
#                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self  : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^ source.ada
#              ^^^^^^ source.ada storage.modifier.ada
#                    ^ source.ada
#                     ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                    ^^ source.ada
>      Value : LSP.Messages.DidSaveTextDocumentParams) is null;
#^^^^^^ source.ada
#      ^^^^^ source.ada entity.name.label.ada
#           ^^^ source.ada
#              ^^^ source.ada entity.name.label.ada
#                 ^ source.ada entity.name.operator.ada
#                  ^^^^^^^^ source.ada entity.name.label.ada
#                          ^ source.ada entity.name.operator.ada
#                           ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                    ^^ source.ada
#                                                      ^^ source.ada keyword.other.ada
#                                                        ^ source.ada
#                                                         ^^^^ source.ada variable.other.constant.ada
#                                                             ^^ source.ada
>
>   overriding procedure On_DidChangeConfiguration_Notification
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^^ source.ada keyword.other.ada
#                       ^ source.ada
#                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self  : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^ source.ada
#              ^^^^^^ source.ada storage.modifier.ada
#                    ^ source.ada
#                     ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                    ^^ source.ada
>      Value : LSP.Messages.DidChangeConfigurationParams);
#^^^^^^ source.ada
#      ^^^^^ source.ada entity.name.label.ada
#           ^^^ source.ada
#              ^^^ source.ada entity.name.label.ada
#                 ^ source.ada entity.name.operator.ada
#                  ^^^^^^^^ source.ada entity.name.label.ada
#                          ^ source.ada entity.name.operator.ada
#                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                       ^^^ source.ada
>
>   overriding procedure On_DidChangeWorkspaceFolders_Notification
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^^ source.ada keyword.other.ada
#                       ^ source.ada
#                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self  : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^ source.ada
#              ^^^^^^ source.ada storage.modifier.ada
#                    ^ source.ada
#                     ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                    ^^ source.ada
>      Value : LSP.Messages.DidChangeWorkspaceFoldersParams) is null;
#^^^^^^ source.ada
#      ^^^^^ source.ada entity.name.label.ada
#           ^^^ source.ada
#              ^^^ source.ada entity.name.label.ada
#                 ^ source.ada entity.name.operator.ada
#                  ^^^^^^^^ source.ada entity.name.label.ada
#                          ^ source.ada entity.name.operator.ada
#                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                          ^^ source.ada
#                                                            ^^ source.ada keyword.other.ada
#                                                              ^ source.ada
#                                                               ^^^^ source.ada variable.other.constant.ada
#                                                                   ^^ source.ada
>
>   overriding procedure On_DidChangeWatchedFiles_Notification
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^^ source.ada keyword.other.ada
#                       ^ source.ada
#                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self  : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^ source.ada
#              ^^^^^^ source.ada storage.modifier.ada
#                    ^ source.ada
#                     ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                    ^^ source.ada
>      Value : LSP.Messages.DidChangeWatchedFilesParams);
#^^^^^^ source.ada
#      ^^^^^ source.ada entity.name.label.ada
#           ^^^ source.ada
#              ^^^ source.ada entity.name.label.ada
#                 ^ source.ada entity.name.operator.ada
#                  ^^^^^^^^ source.ada entity.name.label.ada
#                          ^ source.ada entity.name.operator.ada
#                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                      ^^^ source.ada
>
>   overriding procedure On_Cancel_Notification
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^^ source.ada keyword.other.ada
#                       ^ source.ada
#                        ^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self  : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^ source.ada
#              ^^^^^^ source.ada storage.modifier.ada
#                    ^ source.ada
#                     ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                    ^^ source.ada
>      Value : LSP.Messages.CancelParams) is null;
#^^^^^^ source.ada
#      ^^^^^ source.ada entity.name.label.ada
#           ^^^ source.ada
#              ^^^ source.ada entity.name.label.ada
#                 ^ source.ada entity.name.operator.ada
#                  ^^^^^^^^ source.ada entity.name.label.ada
#                          ^ source.ada entity.name.operator.ada
#                           ^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                       ^^ source.ada
#                                         ^^ source.ada keyword.other.ada
#                                           ^ source.ada
#                                            ^^^^ source.ada variable.other.constant.ada
#                                                ^^ source.ada
>   --  This is intentionally null procedure, because cancel is implemented by
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --  LSP server itself.
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>   overriding procedure On_SetTrace_Notification
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^^ source.ada keyword.other.ada
#                       ^ source.ada
#                        ^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self  : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^ source.ada
#              ^^^^^^ source.ada storage.modifier.ada
#                    ^ source.ada
#                     ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                    ^^ source.ada
>      Value : LSP.Messages.SetTraceParams) is null;
#^^^^^^ source.ada
#      ^^^^^ source.ada entity.name.label.ada
#           ^^^ source.ada
#              ^^^ source.ada entity.name.label.ada
#                 ^ source.ada entity.name.operator.ada
#                  ^^^^^^^^ source.ada entity.name.label.ada
#                          ^ source.ada entity.name.operator.ada
#                           ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                         ^^ source.ada
#                                           ^^ source.ada keyword.other.ada
#                                             ^ source.ada
#                                              ^^^^ source.ada variable.other.constant.ada
#                                                  ^^ source.ada
>   --  This is intentionally set to null since VS Code already handle traces
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --  by itself correctly, outputting the LSP requests being sent
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --  and the returned results with more or less verbosity depending on the
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --  settings.
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^ source.ada comment.line.ada
>
>   overriding function Get_Open_Document
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self  : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^ source.ada
#              ^^^^^^ source.ada storage.modifier.ada
#                    ^ source.ada
#                     ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                    ^^ source.ada
>      URI   : LSP.Messages.DocumentUri;
#^^^^^^ source.ada
#      ^^^ source.ada entity.name.label.ada
#         ^^^^^ source.ada
#              ^^^ source.ada entity.name.label.ada
#                 ^ source.ada entity.name.operator.ada
#                  ^^^^^^^^ source.ada entity.name.label.ada
#                          ^ source.ada entity.name.operator.ada
#                           ^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Force : Boolean := False)
#^^^^^^ source.ada
#      ^^^^^ source.ada entity.name.label.ada
#           ^^^ source.ada
#              ^^^^^^^ source.ada entity.name.label.ada
#                     ^ source.ada
#                      ^^ source.ada entity.name.operator.assignment.ada
#                        ^ source.ada
#                         ^^^^^ source.ada variable.other.constant.ada
#                              ^^ source.ada
>      return LSP.Ada_Documents.Document_Access;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                              ^ source.ada entity.name.operator.ada
#                               ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                              ^^ source.ada
>   --  Return the open document for the given URI.
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --  If the document is not opened, then if Force a new document
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --  will be created and must be freed by the user else null will be
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --  returned.
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^ source.ada comment.line.ada
>
>   overriding function Get_Open_Document_Version
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self  : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^ source.ada
#              ^^^^^^ source.ada storage.modifier.ada
#                    ^ source.ada
#                     ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                    ^^ source.ada
>      URI   : LSP.Messages.DocumentUri)
#^^^^^^ source.ada
#      ^^^ source.ada entity.name.label.ada
#         ^^^^^ source.ada
#              ^^^ source.ada entity.name.label.ada
#                 ^ source.ada entity.name.operator.ada
#                  ^^^^^^^^ source.ada entity.name.label.ada
#                          ^ source.ada entity.name.operator.ada
#                           ^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      return LSP.Messages.OptionalVersionedTextDocumentIdentifier;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                 ^^ source.ada
>   --  Return the version of an open document for the given URI.
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --  If the document is not opened, then it returns a
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>   --  VersionedTextDocumentIdentifier with a null version.
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>   overriding function On_ALS_Check_Syntax_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.ALS_Check_Syntax_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                     ^^ source.ada
>      return LSP.Messages.Server_Responses.ALS_Check_Syntax_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                    ^^ source.ada
>
>   overriding function On_GLS_Mains_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.GLS_Mains_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                              ^^ source.ada
>      return LSP.Messages.Server_Responses.GLS_Mains_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                             ^^ source.ada
>
>   overriding function On_GLS_Executables_Request
#^^^ source.ada
#   ^^^^^^^^^^ source.ada keyword.other.ada
#             ^ source.ada
#              ^^^^^^^^ source.ada keyword.other.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
>     (Self    : access Message_Handler;
#^^^^^^ source.ada
#      ^^^^ source.ada entity.name.label.ada
#          ^^^^^^ source.ada
#                ^^^^^^ source.ada storage.modifier.ada
#                      ^ source.ada
#                       ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                      ^^ source.ada
>      Request : LSP.Messages.Server_Requests.GLS_Executables_Request)
#^^^^^^ source.ada
#      ^^^^^^^ source.ada entity.name.label.ada
#             ^^^ source.ada
#                ^^^ source.ada entity.name.label.ada
#                   ^ source.ada entity.name.operator.ada
#                    ^^^^^^^^ source.ada entity.name.label.ada
#                            ^ source.ada entity.name.operator.ada
#                             ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                            ^ source.ada entity.name.operator.ada
#                                             ^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                    ^^ source.ada
>      return LSP.Messages.Server_Responses.GLS_Executables_Response;
#^^^^^^ source.ada
#      ^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^ source.ada entity.name.label.ada
#                ^ source.ada entity.name.operator.ada
#                 ^^^^^^^^ source.ada entity.name.label.ada
#                         ^ source.ada entity.name.operator.ada
#                          ^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                          ^ source.ada entity.name.operator.ada
#                                           ^^^^^^^^^^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                                   ^^ source.ada
>
>   procedure Reload_Project (Self : access Message_Handler);
#^^^ source.ada
#   ^^^^^^^^^ source.ada keyword.other.ada
#            ^ source.ada
#             ^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                           ^^ source.ada
#                             ^^^^ source.ada entity.name.label.ada
#                                 ^^^ source.ada
#                                    ^^^^^^ source.ada storage.modifier.ada
#                                          ^ source.ada
#                                           ^^^^^^^^^^^^^^^ source.ada entity.name.label.ada
#                                                          ^^^ source.ada
>   --  Reload current project
#^^^ source.ada
#   ^^ source.ada comment.line.ada
#     ^^^^^^^^^^^^^^^^^^^^^^^^ source.ada comment.line.ada
>
>end LSP.Ada_Handlers;
#^^^ source.ada keyword.other.ada
#   ^ source.ada
#    ^^^ source.ada entity.name.label.ada
#       ^ source.ada entity.name.operator.ada
#        ^^^^^^^^^^^^ source.ada entity.name.label.ada
#                    ^^ source.ada
>