{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Ada",
	"patterns": [
		{ "include": "#library_unit" },
		{ "include": "#comment" },
		{ "include": "#use_clause" },
		{ "include": "#with_clause" },
		{ "include": "#pragma" }
	],
	"repository": {
		"access_definition": {
			"name": "meta.declaration.access.definition.ada",
			"match": "(?i)(not\\s+null\\s+)?(access)\\s+(constant\\s+)?((?:\\w|\\d|\\.|_)+)\\b",
			"captures": {
				"1": { "name": "storage.visibility.ada" },
				"2": { "name": "storage.visibility.ada" },
				"3": { "name": "storage.modifier.ada" },
				"4": { "name": "entity.name.type.ada" }
			}
		},
		"access_type_definition": {
			"name": "meta.declaration.type.definition.access.ada",
			"begin": "(?i)\\b(is)\\s+(not\\s+null\\s+)?(access)\\b",
			"end": "(?i)(?=(with|;))",
			"beginCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "name": "storage.visibility.ada" },
				"3": { "name": "storage.visibility.ada" }
			},
			"patterns": [
				{
					"name": "storage.visibility.ada",
					"match": "(?i)\\ball\\b"
				},
				{
					"name": "storage.modifier.ada",
					"match": "(?i)\\bconstant\\b"
				},
				{ "include": "#subtype_mark" }
			]
		},
		"array_dimensions": {
			"name": "meta.declaration.type.definition.array.dimensions.ada",
			"begin": "\\(",
			"end": "\\)",
			"captures": {
				"0": { "name": "punctuation.ada" }
			},
			"patterns": [
				{
					"name": "punctuation.ada",
					"match": ","
				},
				{
					"name": "storage.modifier.ada",
					"match": "(?i)\\brange\\b"
				},
				{
					"name": "keyword.modifier.unknown.ada",
					"match": "<>"
				},
				{
					"name": "keyword.ada",
					"match": "\\.\\."
				},
				{ "include": "#expression" },
				{ "patterns": [ { "include": "#subtype_mark" } ] }
			]
		},
		"array_type_definition": {
			"name": "meta.declaration.type.definition.array.ada",
			"begin": "(?i)\\b(is)\\s+(array)\\b",
			"end": "(?i)(?=(with|;))",
			"beginCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "name": "storage.modifier.ada" }
			},
			"patterns": [
				{ "include": "#array_dimensions" },
				{
					"name": "storage.modifier.ada",
					"match": "(?i)\\bof\\b"
				},
				{
					"name": "storage.visibility.ada",
					"match": "(?i)\\baliased\\b"
				},
				{ "include": "#access_definition" },
				{ "include": "#subtype_mark" }
			]
		},
		"aspect_definition": {
			"name": "meta.aspect.definition.ada",
			"begin": "=>",
			"end": "(?i)\\b(?=(,|;|is))\\b",
			"beginCaptures": {
				"0": { "name": "keyword.other.ada" }
			},
			"patterns": [
				{ "include": "#expression" }
			]
		},
		"aspect_mark": {
			"name": "meta.aspect.mark.ada",
			"match": "(?i)\\b((?:\\w|\\d|\\.|_)+)(?:(')(class))?\\b",
			"captures": {
				"1": { "name": "keyword.control.directive.ada" },
				"2": { "name": "punctuation.ada" },
				"3": { "name": "entity.other.attribute-name.ada" }
			}
		},
		"aspect_specification": {
			"name": "meta.aspect.specification.ada",
			"begin": "(?i)\\bwith\\b",
			"end": "(?i)\\b(?=(;|is))\\b",
			"beginCaptures": {
				"0": { "name": "keyword.ada" }
			},
			"patterns": [
				{
					"name": "punctuation.ada",
					"match": ","
				},
				{ "include": "#aspect_definition" },
				{ "include": "#aspect_mark" }
			]
		},
		"attribute": {
			"name": "meta.attribute.ada",
			"match": "(')((?:\\w|\\d|_)+)\\b",
			"captures": {
				"1": { "name": "punctuation.ada" },
				"2": { "name": "entity.other.attribute-name.ada" }
			}
		},
		"based_literal": {
			"name": "constant.numeric.ada",
			"match": "(?i)(\\d(?:(_)?\\d)*#)[0-9a-f](?:(_)?[0-9a-f])*(?:(\\.)[0-9a-f](?:(_)?[0-9a-f])*)?(#)([eE](?:\\+|\\-)?\\d(?:_?\\d)*)?",
			"captures": {
				"1": { "name": "constant.numeric.base.ada" },
				"2": { "name": "punctuation.ada" },
				"3": { "name": "punctuation.ada" },
				"4": { "name": "punctuation.radix-point.ada" },
				"5": { "name": "punctuation.ada" },
				"6": { "name": "constant.numeric.base.ada" },
				"7": { "patterns": [ { "include": "#exponent_part" } ] }
			}
		},
		"basic_declaration": {
			"patterns": [
				{ "include": "#type_declaration" },
				{ "include": "#subprogram_specification" }
			]
		},
		"character_literal": {
			"name": "string.quoted.single.ada",
			"match": "'.'",
			"captures": {
				"0": {
					"patterns": [
						{
							"name": "punctuation.definition.string.ada",
							"match": "'"
						}
					]
				}
			}
		},
		"comment": {
			"patterns": [
				{ "include": "#comment-section" },
				{ "include": "#comment-doc" },
				{ "include": "#comment-line" }
			]
		},
		"comment-doc": {
			"name": "comment.block.documentation.gnatdoc",
			"match": "(--)(@)(\\w+)\\s+(.*)$",
			"captures": {
				"1": { "name": "comment.line.double-dash.ada" },
				"2": { "name": "punctuation.definition.tag.gnatdoc" },
				"3": { "name": "entity.name.tag.gnatdoc" },
				"4": { "name": "comment.line.double-dash.ada" }
			}
		},
		"comment-line": {
			"name": "comment.line.double-dash.ada",
			"match": "--.*$"
		},
		"comment-section": {
			"name": "comment.line.double-dash.ada",
			"match": "--\\s*([^-].*?[^-])\\s*--$",
			"captures": {
				"1": { "name": "entity.name.section.ada" }
			}
		},
		"decimal_literal": {
			"name": "constant.numeric.ada",
			"match": "\\d(?:(_)?\\d)*(?:(\\.)\\d(?:(_)?\\d)*)?([eE](?:\\+|\\-)?\\d(?:_?\\d)*)?",
			"captures": {
				"1": { "name": "punctuation.ada" },
				"2": { "name": "punctuation.radix-point.ada"},
				"3": { "name": "punctuation.ada" },
				"4": { "patterns": [ { "include": "#exponent_part" } ] }
			}
		},
		"derived_type_definition": {
			"name": "meta.declaration.type.definition.derived.ada",
			"begin": "(?i)\\b(is)\\b",
			"end": "(?i)(?=(with(?!\\s+(private|record))|;))",
			"beginCaptures": {
				"1": { "name": "keyword.ada" }
			},
			"patterns": [
				{
					"match": "(?i)\\b(new)\\s+((?:\\w|\\d|\\.|_)+)\\b",
					"captures": {
						"1": { "name": "storage.modifier.ada" },
						"2": { "patterns": [ { "include": "#subtype_mark" } ] }
					}
				},
				{
					"begin": "(?i)\\b(with)\\s+(record)\\b",
					"end": "(?i)\\b(end)\\s+(record)\\b",
					"beginCaptures": {
						"1": { "name": "storage.modifier.ada" },
						"2": { "name": "storage.modifier.ada" }
					},
					"endCaptures": {
						"1": { "name": "keyword.ada" },
						"2": { "name": "storage.modifier.ada" }
					}
				},
				{
					"match": "(?i)\\b(with)\\s+(null)\\s+(record)\\b",
					"captures": {
						"1": { "name": "storage.modifier.ada" },
						"2": { "name": "storage.modifier.ada" },
						"3": { "name": "storage.modifier.ada" }
					}
				},
				{
					"name": "storage.modifier.ada",
					"match": "(?i)\\b(abstract|and|limited|tagged)\\b"
				},
				{
					"match": "(?i)\\b(with)\\s+(private)\\b",
					"captures": {
						"1": { "name": "storage.modifier.ada" },
						"2": { "name": "storage.visibility.ada" }
					}
				},
				{ "include": "#subtype_mark" }
			]
		},
		"enumeration_type_definition": {
			"name": "meta.declaration.type.definition.enumeration.ada",
			"begin": "(?i)\\b(is)\\s+(\\()",
			"end": "\\)",
			"beginCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "name": "punctuation.ada" }
			},
			"endCaptures": {
				"0": { "name": "punctuation.ada" }
			},
			"patterns": [
				{
					"name": "punctuation.ada",
					"match": ","
				},
				{
					"name": "variable.name.ada",
					"match": "\\b(\\w|\\d|_)+\\b"
				}
			]
		},
		"exponent_part": {
			"match": "([eE])(\\+|\\-)?\\d(?:(_)?\\d)*",
			"captures": {
				"1": { "name": "punctuation.exponent-mark.ada" },
				"2": { "name": "keyword.operator.unary.ada" },
				"3": { "name": "punctuation.ada" }
			}
		},
		"expression": {
			"name": "meta.expression.ada",
			"patterns": [
				{ "include": "#value" }
			]
		},
		"fixed_point_definition": {
			"name": "meta.declaration.type.definition.fixed-point.ada",
			"begin": "(?i)\\b(is)\\s+(delta)\\b",
			"end": "(?i)(?=(with|;))",
			"beginCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "name": "storage.modifier.ada" }
			},
			"patterns": [
				{
					"name": "storage.modifier.ada",
					"match": "(?i)\\b(digits|range)\\b"
				},
				{
					"name": "keyword.ada",
					"match": "\\.\\."
				},
				{ "include": "#expression" }
			]
		},
		"floating_point_definition": {
			"name": "meta.declaration.type.definition.floating-point.ada",
			"begin": "(?i)\\b(is)\\s+(digits)\\b",
			"end": "(?i)(?=(with|;))",
			"beginCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "name": "storage.modifier.ada" }
			},
			"patterns": [
				{
					"name": "storage.modifier.ada",
					"match": "(?i)\\brange\\b"
				},
				{
					"name": "keyword.ada",
					"match": "\\.\\."
				},
				{ "include": "#expression" }
			]
		},
		"full_type_declaration": {
			"patterns": [
				{ "include": "#regular_type_declaration" }
			]
		},
		"function_body": {
			"begin": "(?i)\\b(function)\\s+((\\w|\\d|\\.|_)+)\\b",
			"end": "(?i)\\b(end)\\s+(\\2)\\s*(;)",
			"beginCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "name": "entity.name.function.ada" }
			},
			"endCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "name": "entity.name.function.ada" },
				"3": { "name": "punctuation.ada" }
			},
			"patterns": [
				{ "include": "#basic_declaration" }
			]
		},
		"function_specification": {
			"begin": "(?i)\\b(overriding\\s+)?(function)\\s+((?:\\w|\\d|\\.|_)+)\\b",
			"end": ";",
			"beginCaptures": {
				"1": { "name": "storage.visibility.ada" },
				"2": { "name": "keyword.ada" },
				"3": { "name": "entity.name.function.ada" }
			},
			"patterns": [
				{ "include": "#aspect_specification" }
			]
		},
		"goto": {
			"name": "meta.statement.goto.ada",
			"match": "(?i)\\b(goto)\\s+((?:\\w|\\d|_)+)\\s*(;)",
			"captures": {
				"1": { "name": "keyword.control.goto.ada" },
				"2": { "name": "entity.name.label.ada" },
				"3": { "name": "punctuation.ada" }
			}
		},
		"integer_type_definition": {
			"name": "meta.declaration.type.definition.integer.ada",
			"patterns": [
				{ "include": "#signed_integer_type_definition" },
				{ "include": "#modular_type_definition" }
			]
		},
		"interface_type_definition": {
			"name": "meta.declaration.type.definition.interface.ada",
			"begin": "(?i)\\b(is)\\s+(?:(limited|task|protected|synchronized)\\s+)?(interface)",
			"end": "(?i)(?=(with|;))",
			"beginCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "name": "storage.modifier.ada" },
				"3": { "name": "storage.modifier.ada" }
			},
			"patterns": [
				{
					"name": "storage.modifier.ada",
					"match": "(?i)\\band\\b"
				},
				{ "include": "#subtype_mark" }
			]
		},
		"label": {
			"name": "meta.label.ada",
			"match": "(<<)((?:\\w|\\d|_)+)(>>)",
			"captures": {
				"1": { "name": "punctuation.label.ada" },
				"2": { "name": "entity.name.label.ada" },
				"3": { "name": "punctuation.label.ada" }
			}
		},
		"library_unit": {
			"name": "meta.library.unit.ada",
			"patterns": [
				{ "include": "#package_body" },
				{ "include": "#package_specification" },
				{ "include": "#subprogram_body" }
			]
		},
		"modular_type_definition": {
			"begin": "(?i)\\b(is)\\s+(mod)\\b",
			"end": "(?i)(?=(with|;))",
			"beginCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "name": "storage.modifier.ada" }
			},
			"patterns": [
				{ "include": "#expression" }
			]
		},
		"package_body": {
			"name": "meta.declaration.package.body.ada",
			"begin": "(?i)\\b(package)\\s+(body)\\s+((?:\\w|\\d|\\.|_)+)\\b",
			"end": "(?i)\\b(end)\\s(\\2)(;)",
			"beginCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "name": "keyword.ada" },
				"3": { "patterns": [ { "include": "#package_mark" } ] }
			},
			"endCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "patterns": [ { "include": "#package_mark" } ] },
				"3": { "name": "punctuation.ada" }
			},
			"patterns": [
				{ "include": "#comment" },
				{ "include": "#basic_declaration" }
			]
		},
		"package_declaration": {
			"patterns": [
				{ "include": "#package_specification" }
			]
		},
		"package_mark": {
			"name": "entity.name.package.ada",
			"match": "\\b(\\w|\\d|\\.|_)+\\b"
		},
		"package_specification": {
			"name": "meta.declaration.package.specification.ada",
			"begin": "(?i)\\b(package)\\s+((?:\\w|\\d|\\.|_)+)\\b",
			"end": "(?i)\\b(end)\\s(\\2)(;)",
			"beginCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "patterns": [ { "include": "#package_mark" } ] }
			},
			"endCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "patterns": [ { "include": "#package_mark" } ] },
				"3": { "name": "punctuation.ada" }
			},
			"patterns": [
				{ "include": "#comment" },
				{ "include": "#basic_declaration" }
			]
		},
		"pragma": {
			"name": "meta.pragma.ada",
			"begin": "(?i)\\b(pragma)\\s+((?:\\w|\\d|_)+)\\b",
			"end": "(;)",
			"beginCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "name": "keyword.control.directive.ada" }
			},
			"endCaptures": {
				"1": { "name": "punctuation.ada" }
			}
		},
		"procedure_body": {
			"begin": "(?i)\\b(procedure)\\s+((?:\\w|\\d|\\.|_)+)\\b",
			"end": "(?i)\\b(end)\\s+(\\2)\\s*(;)",
			"beginCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "name": "entity.name.function.ada" }
			},
			"endCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "name": "entity.name.function.ada" },
				"3": { "name": "punctuation.ada" }
			},
			"patterns": [
				{ "include": "#basic_declaration" }
			]
		},
		"procedure_specification": {
			"begin": "(?i)\\b(overriding\\s+)?(procedure)\\s+((?:\\w|\\d|\\.|_)+)\\b",
			"end": ";",
			"beginCaptures": {
				"1": { "name": "storage.visibility.ada" },
				"2": { "name": "keyword.ada" },
				"3": { "name": "entity.name.function.ada" }
			},
			"patterns": [
				{ "include": "#aspect_specification" }
			]
		},
		"raise_statement": {
			"name": "meta.statement.raise.ada",
			"patterns": [
				{
					"match": "(?i)\\b(raise)\\s*(;)",
					"captures": {
						"1": { "name": "keyword.control.ada" },
						"2": { "name": "punctuation.ada" }
					}
				},
				{
					"begin": "(?i)\\braise\\b",
					"end": ";",
					"beginCaptures": {
						"0": { "name": "keyword.control.ada" }
					},
					"endCaptures": {
						"0": { "name": "punctuation.ada" }
					},
					"patterns": [
						{
							"begin": "(?i)\\bwith\\b",
							"end": "(?=;)",
							"beginCaptures": {
								"0": { "name": "keyword.ada" }
							},
							"patterns": [
								{ "include": "#expression" }
							]
						},
						{
							"name": "entity.name.exception.ada",
							"match": "\\b(\\w|\\d|_)+\\b"
						}
					]
				}
			]
		},
		"raise_expression": {
			"name": "meta.expression.raise.ada",
			"begin": "(?i)\\braise\\b",
			"end": "(?=;)",
			"beginCaptures": {
				"0": { "name": "keyword.control.ada" }
			},
			"patterns": [
				{
					"begin": "(?i)\\bwith\\b",
					"end": "(?=(;|\\))",
					"beginCaptures": {
						"0": { "name": "keyword.ada" }
					},
					"patterns": [
						{ "include": "#expression" }
					]
				},
				{
					"name": "entity.name.exception.ada",
					"match": "\\b(\\w|\\d|_)+\\b"
				}
			]
		},
		"real_type_definition": {
			"patterns": [
				{ "include": "#floating_point_definition" },
				{ "include": "#fixed_point_definition" }
			]
		},
		"record_type_definition": {
			"patterns": [
				{
					"name": "meta.declaration.type.definition.record.null.ada",
					"match": "(?i)\\b(is)\\s+(?:(abstract)\\s+)?(?:(tagged)\\s+)?(?:(limited)\\s+)?(null)\\s+(record)\\b",
					"captures": {
						"1": { "name": "keyword.ada" },
						"2": { "name": "storage.modifier.ada" },
						"3": { "name": "storage.modifier.ada" },
						"4": { "name": "storage.modifier.ada" },
						"5": { "name": "storage.modifier.ada" },
						"6": { "name": "storage.modifier.ada" }
					}
				},
				{
					"name": "meta.declaration.type.definition.record.ada",
					"begin": "(?i)\\b(is)\\s+(?:(abstract)\\s+)?(?:(tagged)\\s+)?(?:(limited)\\s+)?(record)\\b",
					"end": "(?i)\\b(end)\\s+(record)\\b",
					"beginCaptures": {
						"1": { "name": "keyword.ada" },
						"2": { "name": "storage.modifier.ada" },
						"3": { "name": "storage.modifier.ada" },
						"4": { "name": "storage.modifier.ada" },
						"5": { "name": "storage.modifier.ada" }
					},
					"endCaptures": {
						"1": { "name": "keyword.ada" },
						"2": { "name": "storage.modifier.ada" }
					}
				}
			]
		},
		"regular_type_declaration": {
			"begin": "(?i)\\b(type)\\s+((?:\\w|\\d|_)+)\\b",
			"end": ";",
			"beginCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "patterns": [ { "include": "#subtype_mark" } ] }
			},
			"endCaptures": {
				"0": { "name": "punctuation.ada" }
			},
			"patterns": [
				{ "include": "#type_definition" },
				{ "include": "#aspect_specification" }
			]
		},
		"signed_integer_type_definition": {
			"begin": "(?i)\\b(is)\\s+(range)\\b",
			"end": "(?i)(?=(with|;))",
			"beginCaptures": {
				"1": { "name": "keyword.ada" },
				"2": { "name": "storage.modifier.ada" }
			},
			"patterns": [
				{
					"name": "keyword.ada",
					"match": "\\.\\."
				},
				{ "include": "#expression" }
			]
		},
		"string_literal": {
			"name": "string.quoted.double.ada",
			"match": "(\").*?(\")",
			"captures": {
				"1": {
					"name": "punctuation.definition.string.ada"
				},
				"2": {
					"name": "punctuation.definition.string.ada"
				}
			}
		},
		"subprogram_body": {
			"name": "meta.declaration.subprogram.body.ada",
			"patterns": [
				{ "include": "#procedure_body" },
				{ "include": "#function_body" }
			]
		},
		"subprogram_specification": {
			"name": "meta.declaration.subprogram.specification.ada",
			"patterns": [
				{ "include": "#procedure_specification" },
				{ "include": "#function_specification" }
			]
		},
		"subtype_mark": {
			"name": "entity.name.type.ada",
			"match": "\\b(?:\\w|\\d|\\.|_)+\\b",
			"captures": {
				"0": {
					"patterns": [
						{
							"name": "punctuation.ada",
							"match": "[_.]"
						}
					]
				}
			}
		},
		"type_declaration": {
			"name": "meta.declaration.type.ada",
			"patterns": [
				{ "include": "#full_type_declaration" }
			]
		},
		"type_definition": {
			"name": "meta.declaration.type.definition.ada",
			"patterns": [
				{ "include": "#enumeration_type_definition" },
				{ "include": "#integer_type_definition" },
				{ "include": "#real_type_definition" },
				{ "include": "#array_type_definition" },
				{ "include": "#record_type_definition" },
				{ "include": "#access_type_definition" },
				{ "include": "#interface_type_definition" },
				{ "include": "#derived_type_definition" }
			]
		},
		"use_clause": {
			"name": "meta.context.use.ada",
			"patterns": [
				{ "include": "#use_type_clause" },
				{ "include": "#use_package_clause" }
			]
		},
		"use_package_clause": {
			"name": "meta.context.use.package.ada",
			"begin": "(?i)\\buse\\b",
			"end": ";",
			"beginCaptures": {
				"0": { "name": "keyword.other.using.ada" }
			},
			"endCaptures": {
				"0": { "name": "punctuation.ada" }
			},
			"patterns": [
				{
					"name": "punctuation.ada",
					"match": ","
				},
				{ "include": "#package_mark" }
			]
		},
		"use_type_clause": {
			"name": "meta.context.use.type.ada",
			"begin": "(?i)\\b(use)\\s+(?:(all)\\s+)?(type)\\b",
			"end": ";",
			"beginCaptures": {
				"1": { "name": "keyword.other.using.ada" },
				"2": { "name": "keyword.modifier.ada" },
				"3": { "name": "keyword.modifier.ada" }
			},
			"endCaptures": {
				"0": { "name": "punctuation.ada" }
			},
			"patterns": [
				{
					"name": "punctuation.ada",
					"match": ","
				},
				{ "include": "#subtype_mark" }
			]
		},
		"value": {
			"patterns": [
				{ "include": "#based_literal" },
				{ "include": "#decimal_literal" },
				{ "include": "#character_literal" },
				{ "include": "#string_literal" }
			]
		},
		"with_clause": {
			"name": "meta.context.with.ada",
			"begin": "(?i)\\b(?:(limited)\\s+)?(?:(private)\\s+)?(with)\\b",
			"end": ";",
			"beginCaptures": {
				"1": { "name": "keyword.modifier.ada" },
				"2": { "name": "storage.visibility.ada" },
				"3": { "name": "keyword.other.using.ada" }
			},
			"endCaptures": {
				"0": { "name": "punctuation.ada" }
			},
			"patterns": [
				{
					"name": "punctuation.ada",
					"match": ","
				},
				{ "include": "#package_mark" }
			]
		}
	},
	"scopeName": "source.ada"
}
