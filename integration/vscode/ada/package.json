{
    "name": "ada",
    "displayName": "Language Support for Ada",
    "description": "A Language Server providing Ada and SPARK support in Visual Studio Code",
    "version": "23.0.999",
    "publisher": "AdaCore",
    "license": "GPL-3.0",
    "engines": {
        "vscode": "^1.53.0"
    },
    "categories": [
        "Programming Languages"
    ],
    "activationEvents": [
        "onLanguage:ada",
        "onCommand:workbench.action.tasks.runTask",
        "onCommand:ada.otherFile"
    ],
    "main": "./out/extension",
    "icon": "icons/ada.png",
    "bugs": "https://github.com/AdaCore/ada_language_server/issues",
    "repository": {
        "type": "git",
        "url": "https://github.com/AdaCore/ada_language_server.git"
    },
    "os": [
        "linux",
        "win32",
        "darwin"
    ],
    "cpu": [
        "x64"
    ],
    "keywords": [
        "Ada",
        "ada",
        "adb",
        "adc",
        "ads",
        "gpr"
    ],
    "contributes": {
        "languages": [
            {
                "id": "ada",
                "aliases": [
                    "Ada",
                    "ada"
                ],
                "extensions": [
                    ".ada",
                    ".adb",
                    ".adc",
                    ".ads"
                ],
                "configuration": "./language-configuration.json"
            },
            {
                "id": "ali",
                "aliases": [
                    "ALI",
                    "Ali",
                    "ali",
                    "Ada Library Information"
                ],
                "extensions": [
                    ".ali"
                ]
            },
            {
                "id": "gpr",
                "aliases": [
                    "GNAT Project",
                    "gpr"
                ],
                "extensions": [
                    ".gpr"
                ],
                "configuration": "./gpr-language-configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "ada",
                "scopeName": "source.ada",
                "path": "./advanced/ada.tmLanguage.json"
            },
            {
                "language": "ali",
                "scopeName": "source.ali",
                "path": "./syntaxes/ali.tmLanguage.json"
            },
            {
                "language": "gpr",
                "scopeName": "source.gpr",
                "path": "./syntaxes/gpr.tmLanguage.json"
            }
        ],
        "snippets": [
            {
                "language": "ada",
                "path": "./ada-snippets.json"
            },
            {
                "language": "gpr",
                "path": "./gpr-snippets.json"
            }
        ],
        "configuration": [
            {
                "type": "object",
                "title": "Ada",
                "properties": {
                    "ada.trace.server": {
                        "scope": "window",
                        "type": "string",
                        "enum": [
                            "off",
                            "messages",
                            "verbose"
                        ],
                        "default": "off",
                        "description": "Traces the communication between VSCode and the language server."
                    },
                    "ada.projectFile": {
                        "scope": "resource",
                        "type": "string",
                        "default": "",
                        "description": "Project file (*.gpr) for given workspace."
                    },
                    "ada.scenarioVariables": {
                        "scope": "resource",
                        "type": "object",
                        "default": {},
                        "description": "Scenario variables."
                    },
                    "ada.defaultCharset": {
                        "scope": "resource",
                        "type": "string",
                        "default": "iso-8859-1",
                        "description": "The character set to use while reading files from disk."
                    },
                    "ada.displayMethodAncestryOnNavigation": {
                        "scope": "resource",
                        "type": "string",
                        "enum": [
                            "never",
                            "usage_and_abstract_only",
                            "definition_only",
                            "always"
                        ],
                        "enumDescriptions": [
                            "Never list overridding and/or overridden suprograms.",
                            "List overridding and/or overridden suprograms on dispatching calls and on abstract subprogram declarations.",
                            "List overridding and/or overridden suprograms on declarations only.",
                            "Always list overridding and/or overridden suprograms when possible."
                        ],
                        "default": "usage_and_abstract_only",
                        "description": "Controls the policy for displaying overriding and overridden subprograms on navigation requests such as 'Go To Definition' or 'Go To Implementations'."
                    },
                    "ada.enableDiagnostics": {
                        "scope": "resource",
                        "type": "boolean",
                        "default": true,
                        "description": "The emission of diagnostics."
                    },
                    "ada.renameInComments": {
                        "scope": "resource",
                        "type": "boolean",
                        "default": false,
                        "description": "Enable editing Ada comments while executing `textDocument/rename` reques."
                    }
                }
            }
        ],
        "problemMatchers": [
            {
                "name": "ada",
                "label": "Gnat Ada Problem Matcher",
                "fileLocation": [
                    "autoDetect",
                    "${workspaceRoot}"
                ],
                "pattern": [
                    {
                        "regexp": "^([^:]:?[^:]*):(\\d+):(\\d+):\\s+(?:([a-z]+):\\s+)?(.*)$",
                        "file": 1,
                        "line": 2,
                        "column": 3,
                        "severity": 4,
                        "message": 5
                    }
                ]
            }
        ],
        "taskDefinitions": [
            {
                "type": "gprbuild",
                "required": [
                    "projectFile"
                ],
                "properties": {
                    "projectFile": {
                        "type": "string",
                        "description": "The project file"
                    },
                    "checkFile": {
                        "type": "boolean",
                        "description": "Just check the current file only"
                    }
                }
            },
            {
                "type": "gprclean",
                "required": [
                    "projectFile"
                ],
                "properties": {
                    "projectFile": {
                        "type": "string",
                        "description": "The project file"
                    }
                }
            },
            {
                "type": "gnatprove",
                "required": [
                    "projectFile"
                ],
                "properties": {
                    "projectFile": {
                        "type": "string",
                        "description": "The project file"
                    },
                    "taskKind": {
                        "type": "integer",
                        "description": "Check the current file only or whole project"
                    }
                }
            }
        ],
        "commands": [
            {
                "command": "ada.otherFile",
                "title": "Go to other Ada file"
            }
        ],
        "keybindings": [
            {
                "command": "ada.otherFile",
                "key": "Alt+O",
                "when": "editorLangId == 'ada' && editorTextFocus"
            }
        ]
    },
    "devDependencies": {
        "@types/glob": "^7.1.3",
        "@types/mocha": "^8.2.2",
        "@types/node": "^16.0.0",
        "@types/vscode": "^1.53.0",
        "@typescript-eslint/eslint-plugin": "^4.28.1",
        "@typescript-eslint/parser": "^4.28.1",
        "eslint": "^7.30.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-plugin-prettier": "^3.4.0",
        "eslint-plugin-tsdoc": "^0.2.14",
        "glob": "^7.1.7",
        "mocha": "^9.0.2",
        "prettier": "^2.3.2",
        "prettier-eslint": "^12.0.0",
        "typescript": "^4.3.5",
        "vscode-test": "^1.5.2",
        "vscode-tmgrammar-test": "^0.0.11"
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "node ./node_modules/typescript/bin/tsc",
        "watch": "node ./node_modules/typescript/bin/tsc -watch",
        "pretest": "npm run compile",
        "lint": "eslint './src/**/*.{js,ts,tsx}' --quiet --fix",
        "test": "node ./out/test/runTest.js"
    },
    "dependencies": {
        "process": "^0.11.10",
        "vscode-languageclient": "^7.0.0",
        "ws": "^7.5.2"
    }
}
