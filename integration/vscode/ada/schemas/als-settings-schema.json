{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://adacore.com/ada-language-server/als-settings-schema.json",
    "$comment": "This file defines the schema of ALS settings files",
    "properties": {
        "projectFile": {
            "type": "string",
            "description": "GPR project file (*.gpr) for this workspace.\n\nIt is recommended to set this to a relative path starting at the root of the workspace."
        },
        "gprConfigurationFile": {
            "type": "string",
            "default": null,
            "description": "GPR configuration file (*.cgpr) for this workspace.\n\nIt is recommended to set this to a relative path starting at the root of the workspace."
        },
        "scenarioVariables": {
            "type": "object",
            "default": {},
            "description": "Scenario variables to apply to the GPR project file.\n\nThis value should be provided as an object where the property names are GPR scenario variables and the values are strings.",
            "patternProperties": {
                ".*": {
                    "type": "string"
                }
            }
        },
        "projectDiagnostics": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether or not the Ada Language Server should emit project diagnostics into the VS Code Problems view.\n\nNote: this setting is ignored if `ada.enableDiagnostics` is disabled and a workspace reload is necessary to refresh the diagnostics after modifying this setting."
        },
        "defaultCharset": {
            "type": "string",
            "default": null,
            "description": "The character set that the Ada Language Server should use when reading files from disk."
        },
        "relocateBuildTree": {
            "type": "string",
            "default": null,
            "description": "The folder for out-of-tree build.",
            "markdownDescription": "The path to a directory used for out-of-tree builds. This feature is related to the [--relocate-build-tree GPRbuild command line switch](https://docs.adacore.com/gprbuild-docs/html/gprbuild_ug/building_with_gprbuild.html#switches)."
        },
        "rootDir": {
            "type": "string",
            "default": null,
            "markdownDescription": "This setting must be used in conjunction with the `relocateBuildTree` setting.\n\nIt specifies the root directory for artifact relocation. It corresponds to the [--root-dir GPRbuild command line switch](https://docs.adacore.com/gprbuild-docs/html/gprbuild_ug/building_with_gprbuild.html#switches)."
        },
        "useGnatformat": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable GNATformat as the formatting provider for Ada source files."
        },
        "onTypeFormatting": {
            "type": "object",
            "properties": {
                "indentOnly": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "If the VS Code `editor.formatOnType` setting is enabled, the Ada Language Server will format Ada code while it is being typed in the editor, in particular when a new line is typed.\n\nThis setting controls whether formatting should only perform the indentation of the new line (true) or also format the previous line (false)."
                }
            }
        },
        "documentationStyle": {
            "type": "string",
            "enum": ["gnat", "leading"],
            "enumDescriptions": [
                "Default style, based on GNAT coding standard with some enhancements.",
                "Documentation for the entities extracted from the comments before the entity declaration."
            ],
            "default": "gnat",
            "description": "Controls the primary documentation style of entities."
        },
        "displayMethodAncestryOnNavigation": {
            "type": "string",
            "enum": ["never", "usage_and_abstract_only", "definition_only", "always"],
            "enumDescriptions": [
                "Never list overriding and/or overridden subprograms.",
                "List overriding and/or overridden subprograms on dispatching calls and on abstract subprogram declarations.",
                "List overriding and/or overridden subprograms on declarations only.",
                "Always list overriding and/or overridden subprograms when possible."
            ],
            "default": "usage_and_abstract_only",
            "description": "Controls the policy for displaying overriding and overridden subprograms on navigation requests such as 'Go To Definition' or 'Go To Implementations'."
        },
        "enableDiagnostics": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether or not the Ada Language Server should emit diagnostics into the VS Code Problems view."
        },
        "foldComments": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether comments should be folded like code blocks."
        },
        "namedNotationThreshold": {
            "type": "integer",
            "default": 3,
            "description": "Defines the number of parameters/components beyond which named notation is used for completion snippets."
        },
        "useCompletionSnippets": {
            "type": "boolean",
            "default": true,
            "description": "Enable snippets in completion results (e.g. subprogram calls)."
        },
        "insertWithClauses": {
            "type": "boolean",
            "default": true,
            "description": "Enable insertion of missing with-clauses when accepting completion for invisible symbols."
        },
        "renameInComments": {
            "type": "boolean",
            "default": false,
            "description": "Enable editing Ada comments to update references to an entity when it is being renamed."
        },
        "enableIndexing": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether the Ada Language Server should index the source files immediately after loading a project.\n\nIf set to false, indexing will be deferred to the time when an action requiring the index is first performed, e.g. hovering over a referenced entity to get its documentation."
        },
        "followSymlinks": {
            "type": "boolean",
            "default": true,
            "description": "Controls the Ada Language Server normalizes the file paths received from the client."
        },
        "logThreshold": {
            "type": "integer",
            "default": 10,
            "description": "Controls the maximum number of trace files preserved in the ALS log directory (which defaults to `~/.als`). When this threshold is reached, old trace files get deleted automatically. The default number of preserved trace files is `10`."
        }
    },
    "additionalProperties": false
}
