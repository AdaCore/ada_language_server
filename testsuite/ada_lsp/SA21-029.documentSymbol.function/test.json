[
    {
      "comment": [
          "test check the documentSymbol content for procedure vs function."
      ]
    },
    {
        "start": {
            "cmd": ["${ALS}"]
        }
    },  {
        "send": {
            "request": {
                "jsonrpc":"2.0","id":0,"method":"initialize",
                "params":{
                    "processId":1,
                    "rootUri":"$URI{.}",
                    "capabilities":{
                        "textDocument": {
                            "documentSymbol":{
                                "hierarchicalDocumentSymbolSupport":true
                            }
                        }
                    }
                }
            },
            "wait":[{ "id": 0,
                      "result":{
                          "capabilities":{
                              "textDocumentSync": 2,
                              "documentSymbolProvider":true
                          }
                      }
            }]
        }
    },  {
        "send": {
            "request": {
                "jsonrpc":"2.0",
                "method":"workspace/didChangeConfiguration",
                "params":{
                    "settings":{
                        "ada":{
                        }
                    }
                }
            },
            "wait":[]
        }
    },  {
        "send": {
            "request": {
                "jsonrpc":"2.0",
                "method":"textDocument/didOpen",
                "params":{
                    "textDocument": {
                        "uri": "$URI{foo.adb}",
                        "languageId": "ada",
                        "version": 1,
                        "text": "procedure Foo is\n   procedure Bar;\n   function Bar return Boolean;\n   function FooBar return Boolean is (True);\n\n   ---------\n   -- Bar --\n   ---------\n\n   procedure Bar is\n   begin\n      null;\n   end Bar;\n\n   ---------\n   -- Foo --\n   ---------\n\n   function Bar return Boolean is\n   begin\n      return False;\n   end Bar;\nbegin\n   null;\nend Foo;"
                    }
                }
            },
            "wait":[]
        }
    },  {
        "send": {
            "request": {
                "jsonrpc":"2.0",
                "id":"docSymbol",
                "method":"textDocument/documentSymbol",
                "params":{
                    "textDocument": {
                        "uri": "$URI{foo.adb}"
                    }
                }
            },
            "wait":[{
                     "jsonrpc": "2.0",
                     "id": "docSymbol",
                     "result": [
      {
        "name": "Foo",
        "detail": "",
        "kind": 12,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 24,
            "character": 8
          }
        },
        "selectionRange": {
          "start": {
            "line": 0,
            "character": 10
          },
          "end": {
            "line": 0,
            "character": 13
          }
        },
        "alsIsDeclaration": false,
        "alsVisibility": 1,
        "children": [
          {
            "name": "Bar",
            "detail": "",
            "kind": 12,
            "range": {
              "start": {
                "line": 1,
                "character": 3
              },
              "end": {
                "line": 1,
                "character": 17
              }
            },
            "selectionRange": {
              "start": {
                "line": 1,
                "character": 13
              },
              "end": {
                "line": 1,
                "character": 16
              }
            },
            "alsIsDeclaration": true,
            "alsIsAdaProcedure": true,
            "alsVisibility": 1,
            "children": [
            ]
          },
          {
            "name": "Bar",
            "detail": " return Boolean",
            "kind": 12,
            "range": {
              "start": {
                "line": 2,
                "character": 3
              },
              "end": {
                "line": 2,
                "character": 31
              }
            },
            "selectionRange": {
              "start": {
                "line": 2,
                "character": 12
              },
              "end": {
                "line": 2,
                "character": 15
              }
            },
            "alsIsDeclaration": true,
            "alsVisibility": 1,
            "children": [
            ]
          },
          {
            "name": "FooBar",
            "detail": " return Boolean",
            "kind": 12,
            "range": {
              "start": {
                "line": 3,
                "character": 3
              },
              "end": {
                "line": 3,
                "character": 44
              }
            },
            "selectionRange": {
              "start": {
                "line": 3,
                "character": 12
              },
              "end": {
                "line": 3,
                "character": 18
              }
            },
            "alsIsDeclaration": true,
            "alsVisibility": 1,
            "children": [
            ]
          },
          {
            "name": "Bar",
            "detail": "",
            "kind": 12,
            "range": {
              "start": {
                "line": 9,
                "character": 3
              },
              "end": {
                "line": 12,
                "character": 11
              }
            },
            "selectionRange": {
              "start": {
                "line": 9,
                "character": 13
              },
              "end": {
                "line": 9,
                "character": 16
              }
            },
            "alsIsDeclaration": false,
            "alsIsAdaProcedure": true,
            "alsVisibility": 1,
            "children": [
            ]
          },
          {
            "name": "Bar",
            "detail": " return Boolean",
            "kind": 12,
            "range": {
              "start": {
                "line": 18,
                "character": 3
              },
              "end": {
                "line": 21,
                "character": 11
              }
            },
            "selectionRange": {
              "start": {
                "line": 18,
                "character": 12
              },
              "end": {
                "line": 18,
                "character": 15
              }
            },
            "alsIsDeclaration": false,
            "alsVisibility": 1,
            "children": [
            ]
          }
        ]
      }
               ]
            }
         ]
        }
    },  {
        "send": {
            "request": {
                "jsonrpc":"2.0",
                "id": "shutdown",
                "method":"shutdown",
                "params":null
            },
            "wait":[{ "id": "shutdown", "result": null }]
        }
    },  {
        "send": {
            "request": {"jsonrpc":"2.0", "method":"exit", "params":{}},
            "wait":[]
        }
    }, {
        "stop": {
            "exit_code": 0
        }
    }
]
