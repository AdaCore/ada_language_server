[
   {
      "comment": ["test automatically generated"]
   },
   {
      "start": {
         "cmd": ["${ALS}", "--tracefile=./traces.cfg"]
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "id": 1,
            "method": "initialize",
            "params": {
               "processId": 591974,
               "rootUri": "$URI{.}",
               "capabilities": {
                  "workspace": {
                     "applyEdit": true,
                     "workspaceEdit": {},
                     "didChangeConfiguration": {},
                     "didChangeWatchedFiles": {},
                     "executeCommand": {}
                  },
                  "textDocument": {
                     "synchronization": {},
                     "completion": {
                        "dynamicRegistration": true,
                        "completionItem": {
                           "snippetSupport": true,
                           "documentationFormat": ["plaintext", "markdown"]
                        }
                     },
                     "hover": {},
                     "signatureHelp": {},
                     "declaration": {},
                     "definition": {},
                     "typeDefinition": {},
                     "implementation": {},
                     "references": {},
                     "documentHighlight": {},
                     "documentSymbol": {
                        "hierarchicalDocumentSymbolSupport": true
                     },
                     "codeLens": {},
                     "colorProvider": {},
                     "formatting": {
                        "dynamicRegistration": false
                     },
                     "rangeFormatting": {
                        "dynamicRegistration": false
                     },
                     "onTypeFormatting": {
                        "dynamicRegistration": false
                     },
                     "foldingRange": {
                        "lineFoldingOnly": true
                     },
                     "selectionRange": {},
                     "linkedEditingRange": {},
                     "callHierarchy": {},
                     "moniker": {}
                  }
               }
            }
         },
         "wait": [
            {
               "id": 1,
               "result": {
                  "capabilities": {
                     "textDocumentSync": 2,
                     "completionProvider": {
                        "triggerCharacters": [".", ",", "'", "("],
                        "resolveProvider": true
                     }
                  }
               }
            }
         ]
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "method": "initialized"
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "method": "workspace/didChangeConfiguration",
            "params": {
               "settings": {
                  "ada": {
                     "scenarioVariables": {},
                     "defaultCharset": "ISO-8859-1",
                     "adaFileDiagnostics": false,
                     "followSymlinks": false
                  }
               }
            }
         },
         "wait": [
            {
               "jsonrpc": "2.0",
               "method": "$/progress",
               "params": {
                  "token": "<ANY>",
                  "value": {
                     "kind": "end"
                  }
               }
            }
         ]
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "method": "textDocument/didOpen",
            "params": {
               "textDocument": {
                  "uri": "$URI{main.adb}",
                  "languageId": "Ada",
                  "version": 0,
                  "text": "\nprocedure Main is\nbegin\n   Ada.Te\nend Main;\n"
               }
            }
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "id": 6,
            "method": "textDocument/completion",
            "params": {
               "textDocument": {
                  "uri": "$URI{main.adb}"
               },
               "position": {
                  "line": 3,
                  "character": 9
               }
            }
         },
         "wait": [
            {
               "id": 6,
               "result": {
                  "isIncomplete": false,
                  "items": [
                     {
                        "command": {
                           "arguments": [
                              {
                                 "context": "$URI{default.gpr}",
                                 "import": "Ada.Text_IO",
                                 "qualifier": "",
                                 "where": {
                                    "position": {
                                       "character": 9,
                                       "line": 3
                                    },
                                    "textDocument": {
                                       "uri": "$URI{main.adb}"
                                    }
                                 }
                              }
                           ],
                           "command": "als-auto-import",
                           "title": ""
                        },
                        "detail": "package Ada.Text_IO",
                        "documentation": "at a-textio.ads (58:1)\n\nPreconditions in this unit are meant for analysis only, not for run-time\nchecking, so that the expected exceptions are raised. This is enforced by\nsetting the corresponding assertion policy to Ignore. These preconditions\nare partial. They protect fully against Status_Error and Mode_Error,\npartially against Layout_Error (see SPARK User's Guide for details), and\nnot against other types of errors.",
                        "filterText": "Text_IO",
                        "insertText": "Text_IO",
                        "kind": 9,
                        "label": "Text_IO (invisible)",
                        "sortText": "~100&00001Text_IO"
                     }
                  ]
               }
            }
         ]
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "id": 7,
            "method": "shutdown"
         },
         "wait": [
            {
               "id": 7,
               "result": null
            }
         ]
      }
   },
   {
      "stop": {
         "exit_code": 0
      }
   }
]
