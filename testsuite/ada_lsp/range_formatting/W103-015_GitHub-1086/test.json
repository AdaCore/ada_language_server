[
    {
        "comment": [
            "Test that range formats the whole file"
        ]
    },
    {
        "start": {
            "cmd": [
                "${ALS}"
            ]
        }
    },
    {
        "send": {
            "request": {
                "jsonrpc": "2.0",
                "id": 1,
                "method": "initialize",
                "params": {
                    "processId": 2073,
                    "rootUri": "$URI{.}",
                    "initializationOptions": {},
                    "capabilities": {
                        "workspace": {
                            "applyEdit": true,
                            "executeCommand": {
                                "dynamicRegistration": false
                            },
                            "workspaceEdit": {
                                "documentChanges": true
                            },
                            "didChangeWatchedFiles": {
                                "dynamicRegistration": true
                            },
                            "symbol": {
                                "dynamicRegistration": false
                            },
                            "configuration": true,
                            "semanticTokens": {
                                "refreshSupport": false
                            },
                            "workspaceFolders": true,
                            "progress": true
                        },
                        "textDocument": {
                            "synchronization": {
                                "dynamicRegistration": false,
                                "willSave": true,
                                "willSaveWaitUntil": true,
                                "didSave": true
                            },
                            "completion": {
                                "dynamicRegistration": false,
                                "completionItem": {
                                    "snippetSupport": false,
                                    "deprecatedSupport": true,
                                    "tagSupport": {
                                        "valueSet": [
                                            1
                                        ]
                                    }
                                },
                                "contextSupport": true
                            },
                            "hover": {
                                "dynamicRegistration": false,
                                "contentFormat": [
                                    "markdown",
                                    "plaintext"
                                ]
                            },
                            "signatureHelp": {
                                "dynamicRegistration": false,
                                "signatureInformation": {
                                    "parameterInformation": {
                                        "labelOffsetSupport": true
                                    },
                                    "activeParameterSupport": true
                                }
                            },
                            "references": {
                                "dynamicRegistration": false
                            },
                            "definition": {
                                "dynamicRegistration": false,
                                "linkSupport": true
                            },
                            "declaration": {
                                "dynamicRegistration": false,
                                "linkSupport": true
                            },
                            "implementation": {
                                "dynamicRegistration": false,
                                "linkSupport": true
                            },
                            "typeDefinition": {
                                "dynamicRegistration": false,
                                "linkSupport": true
                            },
                            "documentSymbol": {
                                "dynamicRegistration": false,
                                "hierarchicalDocumentSymbolSupport": true,
                                "symbolKind": {
                                    "valueSet": [
                                        1,
                                        2,
                                        3,
                                        4,
                                        5,
                                        6,
                                        7,
                                        8,
                                        9,
                                        10,
                                        11,
                                        12,
                                        13,
                                        14,
                                        15,
                                        16,
                                        17,
                                        18,
                                        19,
                                        20,
                                        21,
                                        22,
                                        23,
                                        24,
                                        25,
                                        26
                                    ]
                                }
                            },
                            "documentHighlight": {
                                "dynamicRegistration": false
                            },
                            "codeAction": {
                                "dynamicRegistration": false,
                                "codeActionLiteralSupport": {
                                    "codeActionKind": {
                                        "valueSet": [
                                            "quickfix",
                                            "refactor",
                                            "refactor.extract",
                                            "refactor.inline",
                                            "refactor.rewrite",
                                            "source",
                                            "source.organizeImports"
                                        ]
                                    }
                                },
                                "isPreferredSupport": true
                            },
                            "formatting": {
                                "dynamicRegistration": false
                            },
                            "rangeFormatting": {
                                "dynamicRegistration": false
                            },
                            "rename": {
                                "dynamicRegistration": false
                            },
                            "publishDiagnostics": {
                                "relatedInformation": false,
                                "codeDescriptionSupport": false,
                                "tagSupport": {
                                    "valueSet": [
                                        1,
                                        2
                                    ]
                                }
                            },
                            "semanticTokens": {
                                "dynamicRegistration": false,
                                "requests": {
                                    "full": true,
                                    "range": true
                                },
                                "tokenTypes": [
                                    "comment",
                                    "keyword",
                                    "string",
                                    "number",
                                    "regexp",
                                    "operator",
                                    "namespace",
                                    "type",
                                    "struct",
                                    "class",
                                    "interface",
                                    "enum",
                                    "typeParameter",
                                    "function",
                                    "method",
                                    "member",
                                    "field",
                                    "property",
                                    "event",
                                    "macro",
                                    "variable",
                                    "parameter",
                                    "label",
                                    "enumConstant",
                                    "enumMember",
                                    "dependent",
                                    "concept"
                                ],
                                "tokenModifiers": [
                                    "declaration",
                                    "definition",
                                    "implementation",
                                    "readonly",
                                    "static",
                                    "abstract",
                                    "async",
                                    "modification",
                                    "deprecated",
                                    "documentation",
                                    "defaultLibrary"
                                ],
                                "formats": [
                                    "relative"
                                ],
                                "overlappingTokenSupport": false,
                                "multilineTokenSupport": true
                            }
                        },
                        "experimental": {}
                    }
                }
            },
            "wait": [
                {
                    "jsonrpc": "2.0",
                    "id": 1,
                    "result": {
                        "capabilities": {
                            "textDocumentSync": 2,
                            "documentFormattingProvider": true
                        }
                    }
                }
            ]
        }
    },
    {
        "send": {
            "request": {
                "jsonrpc": "2.0",
                "method": "initialized",
                "params": {}
            },
            "wait": []
        }
    },
    {
        "send": {
            "request": {
                "jsonrpc": "2.0",
                "method": "textDocument/didOpen",
                "params": {
                    "textDocument": {
                        "uri": "$URI{foo.adb}",
                        "version": 0,
                        "languageId": "Ada",
                        "text": "procedure Debug\n   is\n\nbegin\n   E := (1 =>                   --\n           'A');\nend Debug;\n"
                    }
                }
            },
            "wait": []
        }
    },
    {
        "send": {
            "request": {
                "jsonrpc": "2.0",
                "id": 4,
                "method": "textDocument/rangeFormatting",
                "params": {
                    "textDocument": {
                        "uri": "$URI{foo.adb}"
                    },
                    "options": {
                        "tabSize": 8,
                        "insertSpaces": true,
                        "insertFinalNewline": true,
                        "trimFinalNewlines": true
                    },
                    "range": {
                        "start": {
                            "line": 0,
                            "character": 0
                        },
                        "end": {
                            "line": 7,
                            "character": 0
                        }
                    }
                }
            },
            "wait": [
                {
                    "jsonrpc": "2.0",
                    "id": 4,
                    "result": [
                        {
                            "range": {
                                "start": {
                                    "line": 0,
                                    "character": 0
                                },
                                "end": {
                                    "line": 6,
                                    "character": 10
                                }
                            },
                            "newText": "procedure Debug\nis\n\nbegin\n        E := (1 =>                   --\n                       'A');\nend Debug;"
                        }
                    ]
                }
            ]
        }
    },
    {
        "stop": {
            "exit_code": 0
        }
    }
]
