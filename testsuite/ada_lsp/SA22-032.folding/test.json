[
   {
      "comment": [
         "test automatically generated"
      ]
   },
   {
      "start": {
         "cmd": [
            "${ALS}"
         ]
      }
   },
   {
      "send": {
         "request": {
            "params": {
               "processId": 2505,
               "capabilities": {
                  "textDocument": {
                     "foldingRange": {
                        "lineFoldingOnly": true
                     }
                  },
                  "workspace": {
                     "applyEdit": true
                  }
               },
               "rootUri": "$URI{.}"
            },
            "jsonrpc": "2.0",
            "id": 1,
            "method": "initialize"
         },
         "wait": [
            {
               "id": 1,
               "result": {
                  "capabilities": {
                     "implementationProvider": true,
                     "foldingRangeProvider": true,
                     "typeDefinitionProvider": true,
                     "alsReferenceKinds": [
                        "reference",
                        "write",
                        "call",
                        "dispatching call",
                        "parent",
                        "child"
                     ],
                     "hoverProvider": {},
                     "definitionProvider": {},
                     "renameProvider": {},
                     "alsCalledByProvider": true,
                     "referencesProvider": {},
                     "codeActionProvider": {},
                     "textDocumentSync": 2,
                     "declarationProvider": true,
                     "completionProvider": {
                        "triggerCharacters": [
                           "."
                        ],
                        "resolveProvider": false
                     },
                     "documentSymbolProvider": {},
                     "executeCommandProvider": {
                        "commands": [
                           "als-named-parameters"
                        ]
                     }
                  }
               }
            }
         ]
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "method": "initialized"
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "params": {
               "settings": {
                  "ada": {
                     "projectFile": "$URI{hello.gpr}",
                     "scenarioVariables": {},
                     "enableDiagnostics": false,
                     "defaultCharset": "ISO-8859-1"
                  }
               }
            },
            "jsonrpc": "2.0",
            "method": "workspace/didChangeConfiguration"
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "params": {
               "textDocument": {
                  "text": "\nwith Ada.Text_IO;\nwith Ada.Strings.Unbounded;\n\nprocedure Main is\n   use Ada.Text_IO;\n   use Ada.Strings.Unbounded;\n\n   S : Unbounded_String := To_Unbounded_String (\"Hello\");\nbegin\n\n   -- simple comment\n   -- for test\n\n   Put_Line (To_String (S));\nend Main;\n",
                  "version": 0,
                  "uri": "$URI{main.adb}",
                  "languageId": "Ada"
               }
            },
            "jsonrpc": "2.0",
            "method": "textDocument/didOpen"
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "params": {
               "textDocument": {
                  "uri": "$URI{main.adb}"
               }
            },
            "jsonrpc": "2.0",
            "id": 2,
            "method": "textDocument/foldingRange"
         },
         "wait": [
            {
               "id": 2,
               "result": [
                  {
                     "endLine": 15,
                     "startLine": 4,
                     "kind": "region"
                  },
                  {
                     "endLine": 12,
                     "startLine": 11,
                     "kind": "comment"
                  }
               ]
            }
         ]
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "id": 3,
            "method": "shutdown"
         },
         "wait": [
            {
               "id": 3,
               "result": null
            }
         ]
      }
   },
   {
      "stop": {
         "exit_code": 0
      }
   }
]
