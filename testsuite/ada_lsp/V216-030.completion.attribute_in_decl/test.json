[
   {
      "comment": [
         "test automatically generated"
      ]
   },
   {
      "start": {
         "cmd": [
            "${ALS}"
         ]
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "id": 1,
            "method": "initialize",
            "params": {
               "processId": 30104,
               "rootUri": "$URI{.}",
               "capabilities": {
                  "workspace": {
                     "applyEdit": true,
                     "workspaceEdit": {
                        "documentChanges": true,
                        "resourceOperations": [
                           "rename"
                        ]
                     }
                  },
                  "textDocument": {
                     "synchronization": {},
                     "completion": {
                        "dynamicRegistration": true,
                        "completionItem": {
                           "snippetSupport": false,
                           "documentationFormat": [
                              "plaintext",
                              "markdown"
                           ],
                           "resolveSupport": {
                              "properties": [
                                 "detail",
                                 "documentation"
                              ]
                           }
                        }
                     },
                     "hover": {},
                     "signatureHelp": {},
                     "declaration": {},
                     "definition": {},
                     "typeDefinition": {},
                     "implementation": {},
                     "documentSymbol": {
                        "hierarchicalDocumentSymbolSupport": true
                     },
                     "formatting": {
                        "dynamicRegistration": false
                     },
                     "rangeFormatting": {
                        "dynamicRegistration": false
                     },
                     "onTypeFormatting": {
                        "dynamicRegistration": false
                     },
                     "foldingRange": {
                        "lineFoldingOnly": true
                     }
                  }
               }
            }
         },
         "wait": [
            {
               "id": 1,
               "result": {
                  "capabilities": {
                     "textDocumentSync": 2,
                     "completionProvider": {
                        "triggerCharacters": [
                           ".",
                           ",",
                           "'",
                           "("
                        ],
                        "resolveProvider": true
                     },
                     "hoverProvider": true,
                     "signatureHelpProvider": {
                        "triggerCharacters": [
                           ",",
                           "("
                        ],
                        "retriggerCharacters": [
                           "\b"
                        ]
                     },
                     "declarationProvider": true,
                     "definitionProvider": true,
                     "typeDefinitionProvider": true,
                     "implementationProvider": true,
                     "referencesProvider": true,
                     "documentHighlightProvider": true,
                     "documentSymbolProvider": true,
                     "codeActionProvider": {},
                     "documentFormattingProvider": true,
                     "renameProvider": {},
                     "foldingRangeProvider": true,
                     "executeCommandProvider": {
                        "commands": [
                           "<HAS>",
                           "als-named-parameters"
                        ]
                     },
                     "workspaceSymbolProvider": true,
                     "callHierarchyProvider": {},
                     "alsShowDepsProvider": true,
                     "alsReferenceKinds": [
                        "reference",
                        "access",
                        "write",
                        "call",
                        "dispatching call",
                        "parent",
                        "child",
                        "overriding"
                     ],
                     "alsCheckSyntaxProvider": true
                  }
               }
            }
         ]
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "method": "initialized"
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "method": "workspace/didChangeConfiguration",
            "params": {
               "settings": {
                  "ada": {
                     "scenarioVariables": {},
                     "defaultCharset": "ISO-8859-1",
                     "enableDiagnostics": true,
                     "followSymlinks": false
                  }
               }
            }
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "id": 2,
            "result": null
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "method": "textDocument/didOpen",
            "params": {
               "textDocument": {
                  "uri": "$URI{main.adb}",
                  "languageId": "Ada",
                  "version": 0,
                  "text": "with Ada.Text_IO;\nwith Test_3;\n\nprocedure Main is\n   X : Integer := Integer\nbegin\n   null;\nend Main;\n"
               }
            }
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "method": "textDocument/didChange",
            "params": {
               "textDocument": {
                  "uri": "$URI{main.adb}",
                  "version": 1
               },
               "contentChanges": [
                  {
                     "range": {
                        "start": {
                           "line": 4,
                           "character": 25
                        },
                        "end": {
                           "line": 4,
                           "character": 25
                        }
                     },
                     "text": "'"
                  }
               ]
            }
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "id": 5,
            "method": "textDocument/completion",
            "params": {
               "textDocument": {
                  "uri": "$URI{main.adb}"
               },
               "position": {
                  "line": 4,
                  "character": 26
               }
            }
         },
         "wait": [
            {
               "id": 5,
               "result": {
                  "isIncomplete": false,
                  "items": [
                     "<HAS>",
                     {
                        "label": "Abort_Signal",
                        "kind": 1,
                        "detail": "GNAT RM",
                        "documentation": "`Standard'Abort_Signal' (`Standard' is the only allowed prefix)\nprovides the entity for the special exception used to signal task abort\nor asynchronous transfer of control.  Normally this attribute should\nonly be used in the tasking runtime (it is highly peculiar, and\ncompletely outside the normal semantics of Ada, for a user program to\nintercept the abort exception).",
                        "additionalTextEdits": []
                     },
                     {
                        "label": "First_Bit",
                        "kind": 1,
                        "detail": "Ada RM",
                        "documentation": "For a component C of a composite, non-array object R:\n\n\nIf the nondefault bit ordering applies to the composite type,\nand if a component_clause specifies the placement of C,\ndenotes the value given for the first_bit of the\ncomponent_clause; otherwise, denotes the offset, from the\nstart of the first of the storage elements occupied by C, of\nthe first bit occupied by C. This offset is measured in bits.\nThe first bit of a storage element is numbered zero. The value\nof this attribute is of the type universal_integer. See",
                        "additionalTextEdits": []
                     }
                  ]
               }
            }
         ]
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "id": 8,
            "method": "shutdown"
         },
         "wait": [
            {
               "id": 8,
               "result": null
            }
         ]
      }
   },
   {
      "stop": {
         "exit_code": 0
      }
   }
]
