[
   {
      "comment": [
          "This test checks that aggregate completion works fine ",
          "on derived types with a private base type"
      ]
   },
   {
      "start": {
         "cmd": [
            "${ALS}"
         ]
      }
   },
   {
      "send": {
         "request": {
            "params": {
               "processId": 7266,
               "capabilities": {
                  "textDocument": {
                     "completion": {
                        "completionItem": {
                           "documentationFormat": [
                              "plaintext",
                              "markdown"
                           ],
                           "snippetSupport": true
                        },
                        "dynamicRegistration": true
                     },
                     "definition": {},
                     "hover": {},
                     "formatting": {
                        "dynamicRegistration": true
                     },
                     "implementation": {},
                     "codeLens": {},
                     "typeDefinition": {},
                     "selectionRange": {},
                     "documentHighlight": {},
                     "documentSymbol": {
                        "hierarchicalDocumentSymbolSupport": true
                     },
                     "synchronization": {},
                     "references": {},
                     "rangeFormatting": {},
                     "onTypeFormatting": {},
                     "declaration": {},
                     "foldingRange": {
                        "lineFoldingOnly": true
                     },
                     "colorProvider": {}
                  },
                  "workspace": {
                     "applyEdit": true,
                     "executeCommand": {},
                     "didChangeWatchedFiles": {},
                     "workspaceEdit": {},
                     "didChangeConfiguration": {}
                  }
               },
               "rootUri": "$URI{.}"
            },
            "jsonrpc": "2.0",
            "id": 1,
            "method": "initialize"
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "method": "initialized"
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "params": {
               "settings": {
                  "ada": {
                     "scenarioVariables": {},
                     "enableDiagnostics": false,
                     "defaultCharset": "ISO-8859-1"
                  }
               }
            },
            "jsonrpc": "2.0",
            "method": "workspace/didChangeConfiguration"
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "params": {
               "textDocument": {
                  "text": "procedure Main is\n\n   package My_Package is\n\n      type Base_Rec (Disc : Integer) is tagged private;\n\n   private\n\n      type Base_Rec (Disc : Integer) is tagged record\n         case Disc is\n         when 1 =>\n            A : Integer;\n         when 2 =>\n            Z : Integer;\n         when others =>\n            B : Integer;\n         end case;\n      end record;\n   end My_Package;\n\n   use My_Package;\n\n   type Derived_Rec is new Base_Rec with record\n      D : Integer;\n      X : Float;\n   end record;\n\n   Obj : Derived_Rec := Derived_Rec'\nbegin\n   null;\nend Main;\n",
                  "version": 0,
                  "uri": "$URI{main.adb}",
                  "languageId": "Ada"
               }
            },
            "jsonrpc": "2.0",
            "method": "textDocument/didOpen"
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "method": "textDocument/didChange",
            "params": {
               "textDocument": {
                  "uri": "$URI{main.adb}",
                  "version": 1
               },
               "contentChanges": [
                  {
                     "range": {
                        "start": {
                           "line": 27,
                           "character": 36
                        },
                        "end": {
                           "line": 27,
                           "character": 36
                        }
                     },
                     "text": "("
                  }
               ]
            }
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "id": 6,
            "method": "textDocument/completion",
            "params": {
               "textDocument": {
                  "uri": "$URI{main.adb}"
               },
               "position": {
                  "line": 27,
                  "character": 37
               },
               "context": {
                  "triggerKind": 2
               }
            }
         },
      "wait": [
            {
               "id": 6,
               "result": {
                  "isIncomplete": false,
                  "items": [
                     {
                        "label": "Aggregate for Derived_Rec",
                        "kind": 15,
                        "sortText": "+0",
                        "insertText": "Base_Rec with Disc => ${1:Integer}, D => ${2:Integer}, X => ${3:Float})$0",
                        "insertTextFormat": 2,
                        "additionalTextEdits": [],
                        "documentation": "at main.adb (23:4)"
                     },
                     {
                        "label": "Disc",
                        "kind": 5,
                        "sortText": "+1",
                        "insertText": "Disc => ",
                        "insertTextFormat": 1,
                        "additionalTextEdits": []
                     },
                     {
                        "label": "D",
                        "kind": 5,
                        "sortText": "+2",
                        "insertText": "D => ",
                        "insertTextFormat": 1,
                        "additionalTextEdits": []
                     },
                     {
                        "label": "X",
                        "kind": 5,
                        "sortText": "+3",
                        "insertText": "X => ",
                        "insertTextFormat": 1,
                        "additionalTextEdits": []
                     }
                  ]
               }
            }
         ]
      }
   },
   {
      "send": {
         "request": {
            "params": {
               "textDocument": {
                  "uri": "$URI{main.adb}"
               }
            },
            "jsonrpc": "2.0",
            "method": "textDocument/didClose"
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "id": 7,
            "method": "shutdown"
         },
         "wait": []
      }
   },
   {
      "stop": {
         "exit_code": 0
      }
   }
]
