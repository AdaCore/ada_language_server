[
   {
      "comment": [
         "Test the formatting of snippet via GNATPP for package generic",
         "instantiation"
      ]
   },
 {
      "start": {
         "cmd": [
             "${ALS}",
             "--tracefile=./traces.cfg"
         ]
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "id": 1,
            "method": "initialize",
            "params": {
               "processId": 199714,
               "rootUri": "$URI{.}",
               "capabilities": {
                  "workspace": {
                     "applyEdit": true
                  },
                  "textDocument": {
                     "completion": {
                        "completionItem": {
                           "snippetSupport": true,
                           "documentationFormat": [
                              "markdown",
                              "plaintext"
                           ],
                           "resolveSupport": {
                              "properties": [
                                 "documentation",
                                 "detail"
                              ]
                           }
                        }
                     }
                  },
                  "window": {
                     "workDoneProgress": true
                  }
               }
            }
         },
         "wait": [
            {
               "jsonrpc": "2.0",
               "id": 1,
               "result": {
                  "capabilities": {
                     "textDocumentSync": 2,
                     "completionProvider": {
                        "triggerCharacters": [
                           ".",
                           ",",
                           "'",
                           "("
                        ],
                        "resolveProvider": true
                     }
                  }
               }
            }
         ]
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "method": "initialized"
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "method": "textDocument/didOpen",
            "params": {
               "textDocument": {
                  "uri": "$URI{foo.adb}",
                  "languageId": "Ada",
                  "version": 0,
                  "text": "procedure Foo is\n\n   generic\n      A      : Integer;\n      BBBBBB : Float;\n      CCCC   : String;\n      with procedure Bar (X : Integer);\n   package Foo_Bar is\n      procedure Do_Nothing;\n\n      procedure Do_Nothing is\n      begin\n         null;\n      end Do_Nothing;\n   end Foo_Bar;\n\n   package Pack is new Foo_Bar \nbegin\n   null;\nend Foo;\n"
               }
            }
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "method": "textDocument/didChange",
            "params": {
               "textDocument": {
                  "uri": "$URI{foo.adb}",
                  "version": 4
               },
               "contentChanges": [
                  {
                     "range": {
                        "start": {
                           "line": 16,
                           "character": 31
                        },
                        "end": {
                           "line": 16,
                           "character": 31
                        }
                     },
                     "text": "("
                  }
               ]
            }
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "id": 8,
            "method": "textDocument/completion",
            "params": {
               "textDocument": {
                  "uri": "$URI{foo.adb}"
               },
               "position": {
                  "line": 16,
                  "character": 32
               },
               "context": {
                  "triggerKind": 2
               }
            }
         },
         "wait": [
            {
               "id": 8,
               "result": {
                  "isIncomplete": false,
                  "items": [
                     {
                        "label": "Params of Foo_Bar",
                        "kind": 15,
                        "sortText": "+0",
                        "insertText": "A => ${1:A      : Integer;}, BBBBBB => ${2:BBBBBB : Float;}, CCCC => ${3:CCCC   : String;}, Bar => ${4:with procedure Bar (X : Integer);})$0",
                        "insertTextFormat": 2,
                        "insertTextMode": 1,
                        "textEdit": {
                           "range": {
                              "start": {
                                 "line": 16,
                                 "character": 23
                              },
                              "end": {
                                 "line": 16,
                                 "character": 32
                              }
                           },
                           "newText": "Foo_Bar\n     (A      => ${1:A      : Integer;},\n      BBBBBB => ${2:BBBBBB : Float;},\n      CCCC   => ${3:CCCC   : String;},\n      Bar    => ${4:with procedure Bar (X : Integer);})$0"
                        },
                        "additionalTextEdits": [],
                        "data": {
                           "uri": "$URI{foo.adb}",
                           "range": {
                              "start": {
                                 "line": 2,
                                 "character": 3
                              },
                              "end": {
                                 "line": 14,
                                 "character": 15
                              }
                           }
                        }
                     },
                     {
                        "label": "A",
                        "kind": 5,
                        "documentation": "A => ",
                        "sortText": "+1",
                        "insertText": "A => ",
                        "insertTextFormat": 1,
                        "additionalTextEdits": []
                     },
                     {
                        "label": "BBBBBB",
                        "kind": 5,
                        "documentation": "BBBBBB => ",
                        "sortText": "+2",
                        "insertText": "BBBBBB => ",
                        "insertTextFormat": 1,
                        "additionalTextEdits": []
                     },
                     {
                        "label": "CCCC",
                        "kind": 5,
                        "documentation": "CCCC => ",
                        "sortText": "+3",
                        "insertText": "CCCC => ",
                        "insertTextFormat": 1,
                        "additionalTextEdits": []
                     },
                     {
                        "label": "Bar",
                        "kind": 5,
                        "documentation": "Bar => ",
                        "sortText": "+4",
                        "insertText": "Bar => ",
                        "insertTextFormat": 1,
                        "additionalTextEdits": []
                     }
                  ]
               }
            }
         ]
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "id": 11,
            "method": "completionItem/resolve",
            "params": {
               "label": "Params of Foo_Bar",
               "kind": 15,
               "sortText": "+0",
               "insertText": "A => ${1:A      : Integer;}, BBBBBB => ${2:BBBBBB : Float;}, CCCC => ${3:CCCC   : String;}, Bar => ${4:with procedure Bar (X : Integer);})$0",
               "insertTextFormat": 2,
               "insertTextMode": 1,
               "textEdit": {
                  "range": {
                     "start": {
                        "line": 16,
                        "character": 23
                     },
                     "end": {
                        "line": 16,
                        "character": 32
                     }
                  },
                  "newText": "Foo_Bar\n     (A      => ${1:A      : Integer;},\n      BBBBBB => ${2:BBBBBB : Float;},\n      CCCC   => ${3:CCCC   : String;},\n      Bar    => ${4:with procedure Bar (X : Integer);})$0"
               },
               "additionalTextEdits": [],
               "data": {
                  "uri": "$URI{foo.adb}",
                  "range": {
                     "start": {
                        "line": 2,
                        "character": 3
                     },
                     "end": {
                        "line": 14,
                        "character": 15
                     }
                  }
               }
            }
         },
         "wait": [
            {
               "id": 11,
               "result": {
                  "label": "Params of Foo_Bar",
                  "kind": 15,
                  "detail": "generic\n      A      : Integer;\n      BBBBBB : Float;\n      CCCC   : String;\n      with procedure Bar (X : Integer);\n   package Foo_Bar is\n      procedure Do_Nothing;\n\n      procedure Do_Nothing is\n      begin\n         null;\n      end Do_Nothing;\n   end Foo_Bar;",
                  "documentation": "at foo.adb (3:4)",
                  "sortText": "+0",
                  "insertText": "A => ${1:A      : Integer;}, BBBBBB => ${2:BBBBBB : Float;}, CCCC => ${3:CCCC   : String;}, Bar => ${4:with procedure Bar (X : Integer);})$0",
                  "insertTextFormat": 2,
                  "insertTextMode": 1,
                  "textEdit": {
                     "range": {
                        "start": {
                           "line": 16,
                           "character": 23
                        },
                        "end": {
                           "line": 16,
                           "character": 32
                        }
                     },
                     "newText": "Foo_Bar\n     (A      => ${1:A      : Integer;},\n      BBBBBB => ${2:BBBBBB : Float;},\n      CCCC   => ${3:CCCC   : String;},\n      Bar    => ${4:with procedure Bar (X : Integer);})$0"
                  },
                  "additionalTextEdits": [],
                  "data": {
                     "uri": "$URI{foo.adb}",
                     "range": {
                        "start": {
                           "line": 2,
                           "character": 3
                        },
                        "end": {
                           "line": 14,
                           "character": 15
                        }
                     }
                  }
               }
            }
         ]
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "method": "textDocument/didChange",
            "params": {
               "textDocument": {
                  "uri": "$URI{foo.adb}",
                  "version": 6
               },
               "contentChanges": [
                  {
                     "range": {
                        "start": {
                           "line": 16,
                           "character": 23
                        },
                        "end": {
                           "line": 16,
                           "character": 23
                        }
                     },
                     "text": "Foo_Bar\n     (A      => A      : Integer;,\n      BBBBBB => BBBBBB : Float;,\n      CCCC   => CCCC   : String;,\n      Bar    => with procedure Bar (X : Integer);)"
                  }
               ]
            }
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "method": "textDocument/didClose",
            "params": {
               "textDocument": {
                  "uri": "$URI{foo.adb}"
               }
            }
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "id": 16,
            "method": "shutdown"
         },
         "wait": [
            {
               "method": "textDocument/publishDiagnostics",
               "params": {
                  "uri": "$URI{foo.adb}",
                  "diagnostics": []
               }
            },
            {
               "id": 16,
               "result": null
            }
         ]
      }
   },
   {
      "stop": {
         "exit_code": 0
      }
   }
]
