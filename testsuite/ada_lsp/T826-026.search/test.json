[
   {
      "comment": [
         "Test that workspace/symbol filtration works"
      ]
   },
   {
      "start": {
         "cmd": [
            "${ALS}"
         ]
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "id": 1,
            "method": "initialize",
            "params": {
               "processId": 40561,
               "rootUri": "$URI{.}",
               "capabilities": {
                  "workspace": {
                     "applyEdit": true,
                     "workspaceEdit": {},
                     "didChangeConfiguration": {},
                     "didChangeWatchedFiles": {},
                     "executeCommand": {}
                  },
                  "textDocument": {
                     "synchronization": {},
                     "completion": {
                        "dynamicRegistration": true,
                        "completionItem": {
                           "snippetSupport": true,
                           "documentationFormat": [
                              "plaintext",
                              "markdown"
                           ]
                        }
                     },
                     "hover": {},
                     "signatureHelp": {},
                     "declaration": {},
                     "definition": {},
                     "typeDefinition": {},
                     "implementation": {},
                     "references": {},
                     "documentHighlight": {},
                     "documentSymbol": {
                        "hierarchicalDocumentSymbolSupport": true
                     },
                     "codeLens": {},
                     "colorProvider": {},
                     "formatting": {
                        "dynamicRegistration": false
                     },
                     "rangeFormatting": {
                        "dynamicRegistration": false
                     },
                     "onTypeFormatting": {
                        "dynamicRegistration": false
                     },
                     "foldingRange": {
                        "lineFoldingOnly": true
                     },
                     "selectionRange": {},
                     "linkedEditingRange": {},
                     "callHierarchy": {},
                     "moniker": {}
                  }
               }
            }
         },
         "wait": [
            {
               "id": 1,
               "result": {
                  "capabilities": {
                     "textDocumentSync": 2,
                     "completionProvider": {
                        "triggerCharacters": [
                           ".",
                           ",",
                           "'",
                           "("
                        ],
                        "resolveProvider": true
                     },
                     "hoverProvider": true,
                     "signatureHelpProvider": {
                        "triggerCharacters": [
                           ",",
                           "("
                        ],
                        "retriggerCharacters": [
                           "\b"
                        ]
                     },
                     "declarationProvider": true,
                     "definitionProvider": true,
                     "typeDefinitionProvider": true,
                     "implementationProvider": true,
                     "referencesProvider": true,
                     "documentHighlightProvider": true,
                     "documentSymbolProvider": true,
                     "codeActionProvider": {},
                     "documentFormattingProvider": true,
                     "renameProvider": {},
                     "foldingRangeProvider": true,
                     "workspaceSymbolProvider": true,
                     "callHierarchyProvider": {},
                     "alsShowDepsProvider": true,
                     "alsReferenceKinds": [
                        "reference",
                        "access",
                        "write",
                        "call",
                        "dispatching call",
                        "parent",
                        "child",
                        "overriding"
                     ]
                  }
               }
            }
         ]
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "method": "initialized"
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "method": "workspace/didChangeConfiguration",
            "params": {
               "settings": {
                  "ada": {
                     "projectFile": "$URI{search.gpr}",
                     "scenarioVariables": {},
                     "defaultCharset": "ISO-8859-1",
                     "enableDiagnostics": false,
                     "followSymlinks": false
                  }
               }
            }
         },
         "wait": [
            {
               "jsonrpc": "2.0",
               "method": "$/progress",
               "params": {
                  "token": "<ANY>",
                  "value": {
                     "kind": "end"
                  }
               }
            }
         ]
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "method": "textDocument/didOpen",
            "params": {
               "textDocument": {
                  "uri": "$URI{aaa.ads}",
                  "languageId": "Ada",
                  "version": 0,
                  "text": "package Aaa is\n\n   type Symbol_Request is null record;\n\n   procedure Proc (Z : in out Integer);\nend Aaa;\n"
               }
            }
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "method": "textDocument/didOpen",
            "params": {
               "textDocument": {
                  "uri": "$URI{main.adb}",
                  "languageId": "Ada",
                  "version": 0,
                  "text": "with Aaa;\nwith Bbb;\n\nprocedure Main is\n   Val : Integer := 2;\nbegin\n   Aaa.Proc (Val);\nend Main;\n"
               }
            }
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "id": 6,
            "method": "workspace/symbol",
            "params": {
               "query": "Symbol_Request",
               "case_sensitive": false,
               "whole_word": false,
               "negate": false,
               "kind": 1
            }
         },
         "sortReply": {
            "result": "name"
         },
         "wait": [
            {
               "id": 6,
               "result": [
                  {
                     "name": "Abstruct_Symbol_Request",
                     "kind": 23,
                     "location": {
                        "uri": "$URI{bbb.ads}",
                        "range": {
                           "start": {
                              "line": 2,
                              "character": 8
                           },
                           "end": {
                              "line": 2,
                              "character": 31
                           }
                        }
                     }
                  },
                  {
                     "name": "Symbol_Request",
                     "kind": 23,
                     "location": {
                        "uri": "$URI{aaa.ads}",
                        "range": {
                           "start": {
                              "line": 2,
                              "character": 8
                           },
                           "end": {
                              "line": 2,
                              "character": 22
                           }
                        }
                     }
                  }
               ]
            }
         ]
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "id": 8,
            "method": "workspace/symbol",
            "params": {
               "query": "Symbol_Request",
               "case_sensitive": false,
               "whole_word": true,
               "negate": false,
               "kind": 1
            }
         },
         "wait": [
            {
               "id": 8,
               "result": [
                  {
                     "name": "Symbol_Request",
                     "kind": 23,
                     "location": {
                        "uri": "$URI{aaa.ads}",
                        "range": {
                           "start": {
                              "line": 2,
                              "character": 8
                           },
                           "end": {
                              "line": 2,
                              "character": 22
                           }
                        }
                     }
                  }
               ]
            }
         ]
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "id": 12,
            "method": "workspace/symbol",
            "params": {
               "query": "Sym[a-z]*_R[a-z]*",
               "case_sensitive": false,
               "whole_word": true,
               "negate": false,
               "kind": 2
            }
         },
         "wait": [
            {
               "id": 12,
               "result": [
                  {
                     "name": "Symbol_Request",
                     "kind": 23,
                     "location": {
                        "uri": "$URI{aaa.ads}",
                        "range": {
                           "start": {
                              "line": 2,
                              "character": 8
                           },
                           "end": {
                              "line": 2,
                              "character": 22
                           }
                        }
                     }
                  }
               ]
            }
         ]
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "id": 14,
            "method": "workspace/symbol",
            "params": {
               "query": "Sym[a-z]*_R[a-z]*",
               "case_sensitive": false,
               "whole_word": false,
               "negate": false,
               "kind": 2
            }
         },
         "sortReply": {
            "result": "name"
         },
         "wait": [
            {
               "id": 14,
               "result": [
                  {
                     "name": "Abstruct_Symbol_Request",
                     "kind": 23,
                     "location": {
                        "uri": "$URI{bbb.ads}",
                        "range": {
                           "start": {
                              "line": 2,
                              "character": 8
                           },
                           "end": {
                              "line": 2,
                              "character": 31
                           }
                        }
                     }
                  },
                  {
                     "name": "Symbol_Request",
                     "kind": 23,
                     "location": {
                        "uri": "$URI{aaa.ads}",
                        "range": {
                           "start": {
                              "line": 2,
                              "character": 8
                           },
                           "end": {
                              "line": 2,
                              "character": 22
                           }
                        }
                     }
                  }
               ]
            }
         ]
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "id": 16,
            "method": "shutdown"
         },
         "wait": [
            {
               "id": 16,
               "result": null
            }
         ]
      }
   },
   {
      "stop": {
         "exit_code": 0
      }
   }
]