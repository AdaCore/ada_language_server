[
   {
      "comment": [
         "test incremental text synchronization with a file starting with an LF"
      ]
   },
   {
      "start": {
         "cmd": [
            "${ALS}"
         ]
      }
   },
   {
      "send": {
         "request": {
            "params": {
               "workspaceFolders": [
                  {
                     "uri": "$URI{.}",
                     "name": "T123-048.incremental_editing"
                  }
               ],
               "trace": "off",
               "rootUri": "$URI{.}",
               "capabilities": {
                  "textDocument": {
                     "completion": {
                        "completionItem": {
                           "documentationFormat": [
                              "markdown",
                              "plaintext"
                           ],
                           "commitCharactersSupport": true,
                           "preselectSupport": true,
                           "deprecatedSupport": true,
                           "snippetSupport": true
                        },
                        "completionItemKind": {
                           "valueSet": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              10,
                              11,
                              12,
                              13,
                              14,
                              15,
                              16,
                              17,
                              18,
                              19,
                              20,
                              21,
                              22,
                              23,
                              24,
                              25
                           ]
                        },
                        "contextSupport": true,
                        "dynamicRegistration": true
                     },
                     "definition": {
                        "linkSupport": true,
                        "dynamicRegistration": true
                     },
                     "signatureHelp": {
                        "signatureInformation": {
                           "documentationFormat": [
                              "markdown",
                              "plaintext"
                           ],
                           "parameterInformation": {
                              "labelOffsetSupport": true
                           }
                        },
                        "dynamicRegistration": true
                     },
                     "hover": {
                        "contentFormat": [
                           "markdown",
                           "plaintext"
                        ],
                        "dynamicRegistration": true
                     },
                     "declaration": {
                        "linkSupport": true,
                        "dynamicRegistration": true
                     },
                     "implementation": {
                        "linkSupport": true,
                        "dynamicRegistration": true
                     },
                     "formatting": {
                        "dynamicRegistration": true
                     },
                     "typeDefinition": {
                        "linkSupport": true,
                        "dynamicRegistration": true
                     },
                     "codeAction": {
                        "codeActionLiteralSupport": {
                           "codeActionKind": {
                              "valueSet": [
                                 "",
                                 "quickfix",
                                 "refactor",
                                 "refactor.extract",
                                 "refactor.inline",
                                 "refactor.rewrite",
                                 "source",
                                 "source.organizeImports"
                              ]
                           }
                        },
                        "dynamicRegistration": true
                     },
                     "documentHighlight": {
                        "dynamicRegistration": true
                     },
                     "documentSymbol": {
                        "symbolKind": {
                           "valueSet": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              10,
                              11,
                              12,
                              13,
                              14,
                              15,
                              16,
                              17,
                              18,
                              19,
                              20,
                              21,
                              22,
                              23,
                              24,
                              25,
                              26
                           ]
                        },
                        "hierarchicalDocumentSymbolSupport": true,
                        "dynamicRegistration": true
                     },
                     "rename": {
                        "prepareSupport": true,
                        "dynamicRegistration": true
                     },
                     "synchronization": {
                        "didSave": true,
                        "willSave": true,
                        "willSaveWaitUntil": true,
                        "dynamicRegistration": true
                     },
                     "references": {
                        "dynamicRegistration": true
                     },
                     "rangeFormatting": {
                        "dynamicRegistration": true
                     },
                     "onTypeFormatting": {
                        "dynamicRegistration": true
                     },
                     "codeLens": {
                        "dynamicRegistration": true
                     },
                     "publishDiagnostics": {
                        "relatedInformation": true
                     },
                     "documentLink": {
                        "dynamicRegistration": true
                     },
                     "foldingRange": {
                        "lineFoldingOnly": true,
                        "rangeLimit": 5000,
                        "dynamicRegistration": true
                     },
                     "colorProvider": {
                        "dynamicRegistration": true
                     }
                  },
                  "workspace": {
                     "workspaceFolders": true,
                     "executeCommand": {
                        "dynamicRegistration": true
                     },
                     "didChangeWatchedFiles": {
                        "dynamicRegistration": true
                     },
                     "didChangeConfiguration": {
                        "dynamicRegistration": true
                     },
                     "applyEdit": true,
                     "configuration": true,
                     "symbol": {
                        "symbolKind": {
                           "valueSet": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              10,
                              11,
                              12,
                              13,
                              14,
                              15,
                              16,
                              17,
                              18,
                              19,
                              20,
                              21,
                              22,
                              23,
                              24,
                              25,
                              26
                           ]
                        },
                        "dynamicRegistration": true
                     },
                     "workspaceEdit": {
                        "failureHandling": "textOnlyTransactional",
                        "resourceOperations": [
                           "create",
                           "rename",
                           "delete"
                        ],
                        "documentChanges": true
                     }
                  }
               }
            },
            "jsonrpc": "2.0",
            "id": 0,
            "method": "initialize"
         },
         "wait": [
            {
               "id": 0,
               "result": {
                  "capabilities": {
                     "typeDefinitionProvider": true,
                     "alsReferenceKinds": [
                        "reference",
                        "access", 
                        "write", 
                        "call", 
                        "dispatching call", 
                        "parent", 
                        "child"
                     ],
                     "hoverProvider": true,
                     "definitionProvider": true,
                     "renameProvider": {},
                     "alsCalledByProvider": true,
                     "referencesProvider": true,
                     "textDocumentSync": 2,
                     "declarationProvider": true,
                     "completionProvider": {
                        "triggerCharacters": [
                            ".",
                            "("
                        ],
                        "resolveProvider": false
                     },
                     "documentSymbolProvider": true
                  }
               }
            }
         ]
      }
   },
   {
      "send": {
         "request": {
            "params": {},
            "jsonrpc": "2.0",
            "method": "initialized"
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "params": {
               "settings": {
                  "ada": {
                     "renameInComments": false,
                     "trace": {
                        "server": "off"
                     },
                     "projectFile": "",
                     "enableDiagnostics": true,
                     "scenarioVariables": {},
                     "defaultCharset": "iso-8859-1"
                  }
               }
            },
            "jsonrpc": "2.0",
            "method": "workspace/didChangeConfiguration"
         },
         "wait": []
      }
   },
   {"comment": "--------------------------- open a file -------------------------"},
   {
      "send": {
         "request": {
            "params": {
               "textDocument": {
                  "text": "\nprocedure Main is\n   procedure C_Function\n   with Convention => C,\n        Import     => True,\n        Link_Name  => \"c_function\";\n\nbegin\n   C_Function;\nend Main;\n",
                  "version": 1,
                  "uri": "$URI{main.adb}",
                  "languageId": "ada"
               }
            },
            "jsonrpc": "2.0",
            "method": "textDocument/didOpen"
         },
         "wait": []
      }
   },
   {"comment": "--------------------------- query a tooltip to verify -------------------------"},
   {
      "send": {
         "request": {
            "params": {
               "position": {
                  "line": 2,
                  "character": 17
               },
               "textDocument": {
                  "uri": "$URI{main.adb}"
               }
            },
            "jsonrpc": "2.0",
            "id": 2,
            "method": "textDocument/hover"
         },
         "wait": [
            {
               "id": 2,
               "result": {
                  "contents": [
                     {
                        "value": "procedure C_Function\nwith\n  Convention => C,\n  Import     => True,\n  Link_Name  => \"c_function\"",
                        "language": "ada"
                     },
                     "at main.adb (3:4)"
                  ]
               }
            }
         ]
      }
   },
   {"comment": "--------------------------- insert a space in the middle of a function name -------------------------"},
   {
      "send": {
         "request": {
            "params": {
               "contentChanges": [
                  {
                     "text": " ",
                     "range": {
                        "start": {
                           "line": 2,
                           "character": 15
                        },
                        "end": {
                           "line": 2,
                           "character": 15
                        }
                     },
                     "rangeLength": 0
                  }
               ],
               "textDocument": {
                  "version": 2,
                  "uri": "$URI{main.adb}"
               }
            },
            "jsonrpc": "2.0",
            "method": "textDocument/didChange"
         },
         "wait": [
            {
               "params": {
                  "uri": "$URI{main.adb}",
                  "diagnostics": [
                     {
                        "range": {
                           "start": {
                              "line": 2,
                              "character": 16
                           },
                           "end": {
                              "line": 2,
                              "character": 24
                           }
                        },
                        "message": "Missing ';'"
                     }
                  ]
               },
               "method": "textDocument/publishDiagnostics"
            }
         ]
      }
   },
   {"comment": "--------------------------- hover should be empty -------------------------"},
   {
      "send": {
         "request": {
            "params": {
               "position": {
                  "line": 2,
                  "character": 21
               },
               "textDocument": {
                  "uri": "$URI{main.adb}"
               }
            },
            "jsonrpc": "2.0",
            "id": 6,
            "method": "textDocument/hover"
         },
         "wait": [
            {
               "id": 6,
               "result": null
            }
         ]
      }
   },
   {"comment": "--------------------------- undo the change -------------------------"},
   {
      "send": {
         "request": {
            "params": {
               "contentChanges": [
                  {
                     "text": "",
                     "range": {
                        "start": {
                           "line": 2,
                           "character": 15
                        },
                        "end": {
                           "line": 2,
                           "character": 16
                        }
                     },
                     "rangeLength": 1
                  }
               ],
               "textDocument": {
                  "version": 3,
                  "uri": "$URI{main.adb}"
               }
            },
            "jsonrpc": "2.0",
            "method": "textDocument/didChange"
         },
         "wait": [
            {
               "params": {
                  "uri": "$URI{main.adb}",
                  "diagnostics": []
               },
               "method": "textDocument/publishDiagnostics"
            }
         ]
      }
   },
   {"comment": "--------------------------- verify that the hover is good again -------------------------"},
   {
      "send": {
         "request": {
            "params": {
               "position": {
                  "line": 2,
                  "character": 18
               },
               "textDocument": {
                  "uri": "$URI{main.adb}"
               }
            },
            "jsonrpc": "2.0",
            "id": 8,
            "method": "textDocument/hover"
         },
         "wait": [
            {
               "id": 8,
               "result": {
                  "contents": [
                     {
                        "value": "procedure C_Function\nwith\n  Convention => C,\n  Import     => True,\n  Link_Name  => \"c_function\"",
                        "language": "ada"
                     },
                     "at main.adb (3:4)"
                  ]
               }
            }
         ]
      }
   },
   {
      "send": {
         "request": {
            "params": null,
            "jsonrpc": "2.0",
            "id": 10,
            "method": "shutdown"
         },
         "wait": [
            {
               "id": 10,
               "result": null
            }
         ]
      }
   },
   {
      "send": {
         "request": {
            "params": null,
            "jsonrpc": "2.0",
            "method": "exit"
         },
         "wait": []
      }
   },
   {
      "stop": {
         "exit_code": 0
      }
   }
]
