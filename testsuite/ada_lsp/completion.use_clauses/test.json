[
   {
      "comment": [
         "Basic test for use-clause completion."
      ]
   },
   {
      "start": {
         "cmd": [
            "${ALS}"
         ]
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "id": 1,
            "method": "initialize",
            "params": {
               "processId": 257038,
               "rootUri": "$URI{.}",
               "capabilities": {
                  "workspace": {
                     "applyEdit": true,
                     "workspaceEdit": {
                        "documentChanges": true,
                        "resourceOperations": [
                           "rename"
                        ]
                     }
                  },
                  "textDocument": {
                     "synchronization": {},
                     "completion": {
                        "dynamicRegistration": true,
                        "completionItem": {
                           "snippetSupport": false,
                           "documentationFormat": [
                              "plaintext",
                              "markdown"
                           ],
                           "resolveSupport": {
                              "properties": [
                                 "detail",
                                 "documentation"
                              ]
                           }
                        }
                     },
                     "hover": {},
                     "signatureHelp": {},
                     "declaration": {},
                     "definition": {},
                     "typeDefinition": {},
                     "implementation": {},
                     "documentSymbol": {
                        "hierarchicalDocumentSymbolSupport": true
                     },
                     "formatting": {
                        "dynamicRegistration": false
                     },
                     "rangeFormatting": {
                        "dynamicRegistration": false
                     },
                     "onTypeFormatting": {
                        "dynamicRegistration": false
                     },
                     "foldingRange": {
                        "lineFoldingOnly": true
                     }
                  },
                  "experimental": {
                     "advanced_refactorings": [
                        "add_parameter"
                     ]
                  }
               }
            }
         },
         "wait": [
            {
               "id": 1,
               "result": {
                  "capabilities": {
                     "textDocumentSync": 2,
                     "completionProvider": {
                        "triggerCharacters": [
                           ".",
                           ",",
                           "'",
                           "("
                        ],
                        "resolveProvider": true
                     },
                     "hoverProvider": true,
                     "signatureHelpProvider": {
                        "triggerCharacters": [
                           ",",
                           "("
                        ],
                        "retriggerCharacters": [
                           "\b"
                        ]
                     },
                     "declarationProvider": true,
                     "definitionProvider": true,
                     "typeDefinitionProvider": true,
                     "implementationProvider": true,
                     "referencesProvider": true,
                     "documentHighlightProvider": true,
                     "documentSymbolProvider": true,
                     "codeActionProvider": {},
                     "documentFormattingProvider": true,
                     "documentRangeFormattingProvider": true,
                     "renameProvider": {},
                     "foldingRangeProvider": true,
                     "executeCommandProvider": {
                     "commands": [
                           "<HAS>",
                           "als-refactor-remove-parameters"
                        ]
                     },
                     "workspaceSymbolProvider": true,
                     "callHierarchyProvider": {},
                     "alsShowDepsProvider": true,
                     "alsReferenceKinds": [
                        "reference",
                        "access",
                        "write",
                        "call",
                        "dispatching call",
                        "parent",
                        "child",
                        "overriding"
                     ],
                     "alsCheckSyntaxProvider": true
                  }
               }
            }
         ]
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "method": "initialized"
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "method": "workspace/didChangeConfiguration",
            "params": {
               "settings": {
                  "ada": {
                     "scenarioVariables": {},
                     "defaultCharset": "ISO-8859-1",
                     "enableDiagnostics": true,
                     "followSymlinks": false,
                     "documentationStyle": "leading",
                     "foldComments": false
                  }
               }
            }
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "method": "textDocument/didOpen",
            "params": {
               "textDocument": {
                  "uri": "$URI{main.adb}",
                  "languageId": "Ada",
                  "version": 0,
                  "text": "with Ada.Text_IO;\n\nprocedure Main is\nbegin\n   Ada.Text_IO.Put_Line (\"Hello\");\nend Main;\n"
               }
            }
         },
         "wait": []
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "id": 6,
            "method": "textDocument/completion",
            "params": {
               "textDocument": {
                  "uri": "$URI{main.adb}"
               },
               "position": {
                  "line": 0,
                  "character": 17
               },
               "context": {
                  "triggerKind": 1
               }
            }
         },
         "wait": [
            {
               "id": 6,
               "result": {
                  "isIncomplete": false,
                  "items": [
                     {
                        "label": "use Ada.Text_IO;",
                        "kind": 11,
                        "documentation": "Insert the use-clause corresponding to the with-clause on the same line.",
                        "preselect": false,
                        "sortText": "+use Ada.Text_IO;",
                        "insertText": "use Ada.Text_IO;",
                        "additionalTextEdits": []
                     }
                  ]
               }
            }
         ]
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "method": "textDocument/didClose",
            "params": {
               "textDocument": {
                  "uri": "$URI{main.adb}"
               }
            }
         },
         "wait": [
            {
               "method": "textDocument/publishDiagnostics",
               "params": {
                  "uri": "$URI{main.adb}",
                  "diagnostics": []
               }
            }
         ]
      }
   },
   {
      "send": {
         "request": {
            "jsonrpc": "2.0",
            "id": 8,
            "method": "shutdown"
         },
         "wait": [
            {
               "id": 8,
               "result": null
            }
         ]
      }
   },
   {
      "stop": {
         "exit_code": 0
      }
   }
]
