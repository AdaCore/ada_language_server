------------------------------------------------------------------------------
--                         Language Server Protocol                         --
--                                                                          --
--                        Copyright (C) 2018, AdaCore                       --
--                                                                          --
-- This is free software;  you can redistribute it  and/or modify it  under --
-- terms of the  GNU General Public License as published  by the Free Soft- --
-- ware  Foundation;  either version 3,  or (at your option) any later ver- --
-- sion.  This software is distributed in the hope  that it will be useful, --
-- but WITHOUT ANY WARRANTY;  without even the implied warranty of MERCHAN- --
-- TABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public --
-- License for  more details.  You should have  received  a copy of the GNU --
-- General  Public  License  distributed  with  this  software;   see  file --
-- COPYING3.  If not, go to http://www.gnu.org/licenses for a complete copy --
-- of the license.                                                          --
------------------------------------------------------------------------------

with "gnatcoll";

project LSP is

   type Any_Build_Mode is (
      "prod",
      --  Produce efficient code to be used in production and don't treat
      --  warnings as errors.

      "dev"
      --  Produce easy-to-debug code with extra checks. Treat warnings as
      --  errors.
   );
   Build_Mode : Any_Build_Mode := external ("BUILD_MODE", "dev");

   for Source_Dirs use ("../source/protocol", "../source/protocol/generated");
   for Object_Dir use "../.obj/lsp";
   for Main use ();

   -- Compute the list of default switches to build Ada unit

   Ada_Switches := ();
   case Build_Mode is
      when "prod" =>
         Ada_Switches := (
            --  Compile with optimizations
            "-O2",

            --  Generate debug information: this is useful to get meaningful
            --  tracebacks.
            "-g"
         );

      when "dev" =>
         Ada_Switches := (
            --  Compile with no optimization and with debug information to ease
            --  investigation in debuggers.
            "-O0", "-g",

            --  Enable all warnings and GNAT stylechecks (plus O: check for
            --  overriding indicators) and treat warnings as errors.
            "-gnatwae", "-gnatygO",

            --  Enable assertions and all validity checking options
            "-gnata", "-gnatVa"
         );

   end case;

   package Compiler is
      for Default_Switches ("Ada") use Ada_Switches;
   end Compiler;

   package Naming is
      case GnatColl.OS is
         when "windows" =>
            for Implementation ("LSP.Stdio_Streams.Initialize")
              use "lsp-stdio_streams-init_windows.adb";

         when others =>
            for Implementation ("LSP.Stdio_Streams.Initialize")
            use "lsp-stdio_streams-init_others.adb";

      end case;
   end Naming;
end LSP;
