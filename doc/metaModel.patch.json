{
    "requests": [
        {
            "method": "$/alsCheckSyntax",
            "result": {
                "kind": "reference",
                "name": "AlsCheckSyntaxResult"
            },
            "params": {
                "kind": "reference",
                "name": "AlsCheckSyntaxParams"
            },
            "documentation": "query if a given input has a valid syntax according to a set of rules."
        }
    ],
    "enumerations": [
        {
            "name": "AlsReferenceKind",
            "type": {
                "kind": "base",
                "name": "string"
            },
            "values": [
                {
                    "name": "reference",
                    "value": "reference"
                },
                {
                    "name": "access",
                    "value": "access"
                },
                {
                    "name": "write",
                    "value": "write"
                },
                {
                    "name": "call",
                    "value": "call"
                },
                {
                    "name": "dispatching_call",
                    "value": "dispatching call"
                },
                {
                    "name": "parent",
                    "value": "parent"
                },
                {
                    "name": "child",
                    "value": "child"
                },
                {
                    "name": "overriding",
                    "value": "overriding"
                }
            ]
        }
    ],
    "structures": [
        {
            "name": "AlsCheckSyntaxParams",
            "properties": [
                {
                    "name": "input",
                    "type": {
                        "kind": "base",
                        "name": "string"
                    },
                    "documentation": "Text to check syntax."
                },
                {
                    "name": "rules",
                    "type":                             {
                        "kind": "array",
                        "element": {
                            "kind": "base",
                            "name": "string"
                        }
                    },
                    "documentation": "Libadalang `Ada_Node_Kind_Type` values."
                }
            ]
        },
        {
            "name": "AlsCheckSyntaxResult",
            "properties": [
                {
                    "name": "diagnostic",
                    "type": {
                        "kind": "base",
                        "name": "string"
                    },
                    "optional": true,
                    "documentation": "Diagnostic from check syntax."
                }
            ]
        },
        {
            "name": "Location",
            "properties": [
                {
                    "name": "alsKind",
                    "type": {
                        "kind": "array",
                        "element": {
                            "kind": "reference",
                            "name": "AlsReferenceKind"
                        }
                    },
                    "optional": true
                }
            ]
        },
        {
            "name": "ServerCapabilities",
            "properties": [
                {
                    "name": "alsReferenceKinds",
                    "type": {
                        "kind": "array",
                        "element": {
                            "kind": "reference",
                            "name": "AlsReferenceKind"
                        }
                    },
                    "optional": true,
                    "documentation": "List of reference kind supported by the server."
                }
            ]
        }
    ]
}